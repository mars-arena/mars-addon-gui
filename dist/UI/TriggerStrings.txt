[TriggerEventStrings]
MapInitializationEvent=Map Initialization
MapInitializationEvent="Map initialization"

TriggerRegisterDeathEvent=Destructible Dies
TriggerRegisterDeathEvent=~Destructible," dies"
TriggerRegisterDeathEventHint=Use 'Event Response - Dying Destructible' to refer to the destructible that is dying.

TriggerRegisterDestDeathInRegionEvent=Destructible Within Rect Dies
TriggerRegisterDestDeathInRegionEvent="A destructible within ",~Rect," dies"
TriggerRegisterDestDeathInRegionEventHint=Only the first 64 destructibles within the rect when this event is registered are monitored for death.  It is best to use this event for rects containing only a few destructibles.

TriggerRegisterDialogEventBJ=Dialog Button Click
TriggerRegisterDialogEventBJ="A dialog button is clicked for ",~Dialog

TriggerRegisterGameStateEventTimeOfDay=Time Of Day
TriggerRegisterGameStateEventTimeOfDay="The in-game time of day becomes ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

TriggerRegisterVariableEvent=Value Of Real Variable
TriggerRegisterVariableEvent=~Variable," becomes ",~Operation," ",~Value
TriggerRegisterVariableEventHint=This only works for non-array variables of type 'Real'.

TriggerRegisterGameLoadedEventBJ=Game Load
TriggerRegisterGameLoadedEventBJ="A saved game is loaded"
TriggerRegisterGameLoadedEventBJHint=This fires immediately after the saved game is finished loading.

TriggerRegisterGameSavedEventBJ=Game Save
TriggerRegisterGameSavedEventBJ="The game is about to be saved"
TriggerRegisterGameSavedEventBJHint=This fires immediately before the game is saved.

TriggerRegisterShowSkillEventBJ=Hero Abilities Button Clicked
TriggerRegisterShowSkillEventBJ="The 'Hero Abilities' button is clicked"
TriggerRegisterShowSkillEventBJHint=This event should only be used in single-player maps.

TriggerRegisterBuildSubmenuEventBJ=Build Structure Button Clicked
TriggerRegisterBuildSubmenuEventBJ="The 'Build Structure' button is clicked"
TriggerRegisterBuildSubmenuEventBJHint=This event should only be used in single-player maps.

TriggerRegisterGameEvent=Tournament Event
TriggerRegisterGameEvent="The tournament game must end ",~Event Type
TriggerRegisterGameEventHint=This event only occurs during automated tournament games on Battle.net.

TriggerRegisterPlayerChatEvent=Chat Message
TriggerRegisterPlayerChatEvent=~Player," types a chat message containing ",~Text," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Use 'Event Response - Entered/Matched Chat Message' to refer to the chat message that was entered/matched.  Use 'Event Response - Triggering Player' to refer to the player who typed the message.

TriggerRegisterPlayerEventEndCinematic=Cinematic Skipped
TriggerRegisterPlayerEventEndCinematic=~Player," skips a cinematic sequence"
TriggerRegisterPlayerEventEndCinematicHint=This event occurs whenever the player presses the 'Escape' key (regardless of whether or not they are viewing a cinematic).

TriggerRegisterPlayerSelectionEventBJ=Selection Event
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," a unit"
TriggerRegisterPlayerSelectionEventBJHint=Use 'Event Response - Triggering Unit' to refer to the unit being selected or deselected.

TriggerRegisterPlayerKeyEventBJ=Keyboard Event
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," the ",~Key," key"

TriggerRegisterPlayerStateEvent=Properties
TriggerRegisterPlayerStateEvent=~Player,"'s ",~Property," becomes ",~Operation," ",~Value

TriggerRegisterPlayerEventAllianceChanged=Alliance Change (Any)
TriggerRegisterPlayerEventAllianceChanged=~Player," changes alliance settings"

TriggerRegisterPlayerAllianceChange=Alliance Change (Specific)
TriggerRegisterPlayerAllianceChange=~Player," changes ",~Alliance Type," settings"

TriggerRegisterPlayerEventVictory=Victory
TriggerRegisterPlayerEventVictory=~Player," leaves the game with a victory"

TriggerRegisterPlayerEventDefeat=Defeat
TriggerRegisterPlayerEventDefeat=~Player," leaves the game with a defeat"

TriggerRegisterPlayerEventLeave=Leaves Game
TriggerRegisterPlayerEventLeave=~Player," leaves the game"
TriggerRegisterPlayerEventLeaveHint=This event occurs regardless of how the player left the game.

TriggerRegisterTimerEventSingle=Time Elapsed
TriggerRegisterTimerEventSingle="Elapsed game time is ",~Time," seconds"

TriggerRegisterTimerEventPeriodic=Periodic Event
TriggerRegisterTimerEventPeriodic="Every ",~Time," seconds of game time"

TriggerRegisterTimerExpireEventBJ=Timer Expires
TriggerRegisterTimerExpireEventBJ=~Timer," expires"
TriggerRegisterTimerExpireEventBJHint=A timer expires when it reaches 0.  Repeating timers expire every time they reach 0.  Use 'Event Response - Expiring Timer' to refer to the timer that is expiring.

TriggerRegisterUnitEvent=Specific Unit Event
TriggerRegisterUnitEvent=~Unit," ",~Event

TriggerRegisterPlayerUnitEventSimple=Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="A unit owned by ",~Player," ",~Event

TriggerRegisterAnyUnitEventBJ=Generic Unit Event
TriggerRegisterAnyUnitEventBJ="A unit ",~Event

TriggerRegisterEnterRectSimple=Unit Enters Rect
TriggerRegisterEnterRectSimple="A unit enters ",~Rect
TriggerRegisterEnterRectSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the rect.

TriggerRegisterLeaveRectSimple=Unit Leaves Rect
TriggerRegisterLeaveRectSimple="A unit leaves ",~Rect
TriggerRegisterLeaveRectSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the rect.

TriggerRegisterUnitInRangeSimple=Unit Within Range
TriggerRegisterUnitInRangeSimple="A unit comes within ",~Range," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Use 'Event Response - Triggering Unit' to refer to the unit that is entering within range.

TriggerRegisterUnitLifeEvent=Life
TriggerRegisterUnitLifeEvent=~Unit,"'s life becomes ",~Operation," ",~Value

TriggerRegisterUnitManaEvent=Mana
TriggerRegisterUnitManaEvent=~Unit,"'s mana becomes ",~Operation," ",~Value

TriggerRegisterTrackableHitEvent=Trackable is Clicked
TriggerRegisterTrackableHitEvent=~Trackable," is clicked"
TriggerRegisterTrackableHitEventHint=[UMSWE]

TriggerRegisterTrackableTrackEvent=Cursor is Moved over Trackable
TriggerRegisterTrackableTrackEvent="The cursor is moved over ",~Trackable
TriggerRegisterTrackableTrackEventHint=[UMSWE]

TriggerRegisterPlayerUnitEvent=Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Adds a condtion to the event [UMSWE]

TriggerRegisterEnterRegionSimple=Unit Enters Region
TriggerRegisterEnterRegionSimple="A unit enters ",~Region
TriggerRegisterEnterRegionSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the region [UMSWE]

TriggerRegisterEnterRegion=A Unit Enters Region (Conditional)
TriggerRegisterEnterRegion="A unit enters ",~Region," and matches ",~Condition
TriggerRegisterEnterRegionHint=Better than 'Unit Enters Rect' because you can get the Triggering Region. Use Entering Unit to match [UMSWE]

TriggerRegisterLeaveRegionSimple=Unit Leaves Region
TriggerRegisterLeaveRegionSimple="A unit leaves ",~Region
TriggerRegisterLeaveRegionSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the region [UMSWE]

TriggerRegisterLeaveRegion=A Unit Leaves Region (Conditional)
TriggerRegisterLeaveRegion="A unit leaves ",~Region," and matches ",~Condition
TriggerRegisterLeaveRegionHint=Better than 'Unit Leaves Rect' because you can get the Triggering Region. Use Leaving Unit to match [UMSWE]

TriggerRegisterUnitStateEvent=Unit State Event
TriggerRegisterUnitStateEvent=~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=[UMSWE]

TriggerRegisterPlayerEvent=Advanced Player Event
TriggerRegisterPlayerEvent=~Player," ",~PlayerOptionEvent


[TriggerConditionStrings]
OperatorCompareBoolean=Boolean Comparison
OperatorCompareBoolean=~Value," ",~Operator," ",~Value

OperatorCompareAbilityId=Ability Comparison
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value

OperatorCompareBuffId=Buff Comparison
OperatorCompareBuffId=~Value," ",~Operator," ",~Value

OperatorCompareDestructible=Destructible Comparison
OperatorCompareDestructible=~Value," ",~Operator," ",~Value

OperatorCompareDestructableCode=Destructible-Type Comparison
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value

OperatorCompareButton=Dialog Button Comparison
OperatorCompareButton=~Value," ",~Operator," ",~Value

OperatorCompareGameDifficulty=Game Difficulty Comparison
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareGameSpeed=Game Speed Comparison
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value

OperatorCompareHeroSkill=Hero Skill Comparison
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value

OperatorCompareInteger=Integer Comparison
OperatorCompareInteger=~Value," ",~Operator," ",~Value

OperatorCompareItem=Item Comparison
OperatorCompareItem=~Value," ",~Operator," ",~Value

OperatorCompareItemType=Item-Class Comparison
OperatorCompareItemType=~Value," ",~Operator," ",~Value

OperatorCompareItemCode=Item-Type Comparison
OperatorCompareItemCode=~Value," ",~Operator," ",~Value

OperatorCompareMeleeDifficulty=Melee AI Comparison
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareOrderCode=Order Comparison
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value

OperatorComparePlayer=Player Comparison
OperatorComparePlayer=~Value," ",~Operator," ",~Value

OperatorComparePlayerColor=Player Color Comparison
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value

OperatorComparePlayerControl=Player Controller Comparison
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value

OperatorComparePlayerSlotStatus=Player Slot Status Comparison
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value

OperatorCompareRace=Race Comparison
OperatorCompareRace=~Value," ",~Operator," ",~Value

OperatorCompareReal=Real Comparison
OperatorCompareReal=~Value," ",~Operator," ",~Value

OperatorCompareString=String Comparison
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint=For two strings to be equal, they must be of equal length and content.

OperatorCompareTechCode=Tech-Type Comparison
OperatorCompareTechCode=~Value," ",~Operator," ",~Value

OperatorCompareTerrainType=Terrain Type Comparison
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value

OperatorCompareTrigger=Trigger Comparison
OperatorCompareTrigger=~Value," ",~Operator," ",~Value

OperatorCompareUnit=Unit Comparison
OperatorCompareUnit=~Value," ",~Operator," ",~Value

OperatorCompareUnitCode=Unit-Type Comparison
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value

GetBooleanAnd=And
GetBooleanAnd=~Condition 1," and ",~Condition 2

GetBooleanOr=Or
GetBooleanOr=~Condition 1," or ",~Condition 2

AndMultiple=And, Multiple Conditions
AndMultiple="And - All (Conditions) are true"
AndMultipleHint=Add conditions to this function in the main display.

OrMultiple=Or, Multiple Conditions
OrMultiple="Or - Any (Conditions) are true"
OrMultipleHint=Add conditions to this function in the main display.

OperatorCompareEventId=Trigger Event Id Comparison
OperatorCompareEventId=~Value," ",~Operator," ",~Value
OperatorCompareEventIdHint=[UMSWE]

OperatorCompareTrackable=Trackable Comparison
OperatorCompareTrackable=~Value," ",~Operator," ",~Value
OperatorCompareTrackableHint=[UMSWE]

OperatorCompareUbersplat=Ubersplat Comparison
OperatorCompareUbersplat=~Value," ",~Operator," ",~Value
OperatorCompareUbersplatHint=[UMSWE]

OperatorCompareImage=Image Comparison
OperatorCompareImage=~Value," ",~Operator," ",~Value
OperatorCompareImageHint=[UMSWE]

OperatorCompareLightning=Lightning Comparison
OperatorCompareLightning=~Value," ",~Operator," ",~Value
OperatorCompareLightningHint=[UMSWE]

OperatorCompareTriggerAction=Trigger Action Comparison
OperatorCompareTriggerAction=~Value," ",~Operator," ",~Value
OperatorCompareTriggerActionHint=[UMSWE]

OperatorCompareTriggerCondition=Trigger Condition Comparison
OperatorCompareTriggerCondition=~Value," ",~Operator," ",~Value
OperatorCompareTriggerConditionHint=[UMSWE]

OperatorComparePlayerState=Playerstate Comparison
OperatorComparePlayerState=~Value," ",~Operator," ",~Value
OperatorComparePlayerStateHint=[UMSWE]

OperatorCompareUnitState=Unitstate Comparison
OperatorCompareUnitState=~Value," ",~Operator," ",~Value

OperatorCompareRegion=Region Comparison
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint=[UMSWE]

OperatorCompareGameState=Gamestate Comparison
OperatorCompareGameState=~Value," ",~Operator," ",~Value
OperatorCompareGameStateHint=[UMSWE]

 =Custom Script
 ="(",~Script Code,")"
 Hint=[UMSWE]

OperatorCompareMultiboardItem=Multiboard Item Comparison
OperatorCompareMultiboardItem=~Value," ",~Operator," ",~Value
OperatorCompareMultiboardItemHint=Just here for COMPATIBILITY reasons. Multiboard items should not be used. [UMSWE]


[TriggerActionStrings]
SetMapName=SetMapName
SetMapName="SetMapName(",~name,")"
SetMapNameHint="[NATIVE] native SetMapName takes string name returns nothing"

SetMapDescription=SetMapDescription
SetMapDescription="SetMapDescription(",~description,")"
SetMapDescriptionHint="[NATIVE] native SetMapDescription takes string description returns nothing"

SetTeams=SetTeams
SetTeams="SetTeams(",~teamcount,")"
SetTeamsHint="[NATIVE] native SetTeams takes integer teamcount returns nothing"

SetPlayers=SetPlayers
SetPlayers="SetPlayers(",~playercount,")"
SetPlayersHint="[NATIVE] native SetPlayers takes integer playercount returns nothing"

DefineStartLocation=DefineStartLocation
DefineStartLocation="DefineStartLocation(",~whichStartLoc,", ",~x,", ",~y,")"
DefineStartLocationHint="[NATIVE] native DefineStartLocation takes integer whichStartLoc, real x, real y returns nothing"

DefineStartLocationLoc=DefineStartLocationLoc
DefineStartLocationLoc="DefineStartLocationLoc(",~whichStartLoc,", ",~whichLocation,")"
DefineStartLocationLocHint="[NATIVE] native DefineStartLocationLoc takes integer whichStartLoc, location whichLocation returns nothing"

SetStartLocPrioCount=SetStartLocPrioCount
SetStartLocPrioCount="SetStartLocPrioCount(",~whichStartLoc,", ",~prioSlotCount,")"
SetStartLocPrioCountHint="[NATIVE] native SetStartLocPrioCount takes integer whichStartLoc, integer prioSlotCount returns nothing"

SetStartLocPrio=SetStartLocPrio
SetStartLocPrio="SetStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,", ",~otherStartLocIndex,", ",~priority,")"
SetStartLocPrioHint="[NATIVE] native SetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing"

SetGameTypeSupported=SetGameTypeSupported
SetGameTypeSupported="SetGameTypeSupported(",~whichGameType,", ",~value,")"
SetGameTypeSupportedHint="[NATIVE] native SetGameTypeSupported takes gametype whichGameType, boolean value returns nothing"

SetGamePlacement=SetGamePlacement
SetGamePlacement="SetGamePlacement(",~whichPlacementType,")"
SetGamePlacementHint="[NATIVE] native SetGamePlacement takes placement whichPlacementType returns nothing"

SetGameDifficulty=SetGameDifficulty
SetGameDifficulty="SetGameDifficulty(",~whichdifficulty,")"
SetGameDifficultyHint="[NATIVE] native SetGameDifficulty takes gamedifficulty whichdifficulty returns nothing"

SetResourceDensity=SetResourceDensity
SetResourceDensity="SetResourceDensity(",~whichdensity,")"
SetResourceDensityHint="[NATIVE] native SetResourceDensity takes mapdensity whichdensity returns nothing"

SetCreatureDensity=SetCreatureDensity
SetCreatureDensity="SetCreatureDensity(",~whichdensity,")"
SetCreatureDensityHint="[NATIVE] native SetCreatureDensity takes mapdensity whichdensity returns nothing"

SetPlayerTeam=SetPlayerTeam
SetPlayerTeam="SetPlayerTeam(",~whichPlayer,", ",~whichTeam,")"
SetPlayerTeamHint="[NATIVE] native SetPlayerTeam takes player whichPlayer, integer whichTeam returns nothing"

SetPlayerStartLocation=SetPlayerStartLocation
SetPlayerStartLocation="SetPlayerStartLocation(",~whichPlayer,", ",~startLocIndex,")"
SetPlayerStartLocationHint="[NATIVE] native SetPlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing"

ForcePlayerStartLocation=ForcePlayerStartLocation
ForcePlayerStartLocation="ForcePlayerStartLocation(",~whichPlayer,", ",~startLocIndex,")"
ForcePlayerStartLocationHint="[NATIVE] native ForcePlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing"

SetPlayerColor=SetPlayerColor
SetPlayerColor="SetPlayerColor(",~whichPlayer,", ",~color,")"
SetPlayerColorHint="[NATIVE] native SetPlayerColor takes player whichPlayer, playercolor color returns nothing"

SetPlayerAlliance=SetPlayerAlliance
SetPlayerAlliance="SetPlayerAlliance(",~sourcePlayer,", ",~otherPlayer,", ",~whichAllianceSetting,", ",~value,")"
SetPlayerAllianceHint="[NATIVE] native SetPlayerAlliance takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value returns nothing"

SetPlayerTaxRate=SetPlayerTaxRate
SetPlayerTaxRate="SetPlayerTaxRate(",~sourcePlayer,", ",~otherPlayer,", ",~whichResource,", ",~rate,")"
SetPlayerTaxRateHint="[NATIVE] native SetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate returns nothing"

SetPlayerRacePreference=SetPlayerRacePreference
SetPlayerRacePreference="SetPlayerRacePreference(",~whichPlayer,", ",~whichRacePreference,")"
SetPlayerRacePreferenceHint="[NATIVE] native SetPlayerRacePreference takes player whichPlayer, racepreference whichRacePreference returns nothing"

SetPlayerRaceSelectable=SetPlayerRaceSelectable
SetPlayerRaceSelectable="SetPlayerRaceSelectable(",~whichPlayer,", ",~value,")"
SetPlayerRaceSelectableHint="[NATIVE] native SetPlayerRaceSelectable takes player whichPlayer, boolean value returns nothing"

SetPlayerController=SetPlayerController
SetPlayerController="SetPlayerController(",~whichPlayer,", ",~controlType,")"
SetPlayerControllerHint="[NATIVE] native SetPlayerController takes player whichPlayer, mapcontrol controlType returns nothing"

SetPlayerOnScoreScreen=SetPlayerOnScoreScreen
SetPlayerOnScoreScreen="SetPlayerOnScoreScreen(",~whichPlayer,", ",~flag,")"
SetPlayerOnScoreScreenHint="[NATIVE] native SetPlayerOnScoreScreen takes player whichPlayer, boolean flag returns nothing"

CreateTimer=CreateTimer
CreateTimer="CreateTimer(",")"
CreateTimerHint="[NATIVE] native CreateTimer takes nothing returns timer"

TimerGetElapsed=TimerGetElapsed
TimerGetElapsed="TimerGetElapsed(",~whichTimer,")"
TimerGetElapsedHint="[NATIVE] native TimerGetElapsed takes timer whichTimer returns real"

TimerGetRemaining=TimerGetRemaining
TimerGetRemaining="TimerGetRemaining(",~whichTimer,")"
TimerGetRemainingHint="[NATIVE] native TimerGetRemaining takes timer whichTimer returns real"

TimerGetTimeout=TimerGetTimeout
TimerGetTimeout="TimerGetTimeout(",~whichTimer,")"
TimerGetTimeoutHint="[NATIVE] native TimerGetTimeout takes timer whichTimer returns real"

PauseTimer=PauseTimer
PauseTimer="PauseTimer(",~whichTimer,")"
PauseTimerHint="[NATIVE] native PauseTimer takes timer whichTimer returns nothing"

ResumeTimer=ResumeTimer
ResumeTimer="ResumeTimer(",~whichTimer,")"
ResumeTimerHint="[NATIVE] native ResumeTimer takes timer whichTimer returns nothing"

CreateGroup=CreateGroup
CreateGroup="CreateGroup(",")"
CreateGroupHint="[NATIVE] native CreateGroup takes nothing returns group"

GroupAddUnit=GroupAddUnit
GroupAddUnit="GroupAddUnit(",~whichGroup,", ",~whichUnit,")"
GroupAddUnitHint="[NATIVE] native GroupAddUnit takes group whichGroup, unit whichUnit returns nothing"

GroupRemoveUnit=GroupRemoveUnit
GroupRemoveUnit="GroupRemoveUnit(",~whichGroup,", ",~whichUnit,")"
GroupRemoveUnitHint="[NATIVE] native GroupRemoveUnit takes group whichGroup, unit whichUnit returns nothing"

GroupEnumUnitsInRange=GroupEnumUnitsInRange
GroupEnumUnitsInRange="GroupEnumUnitsInRange(",~whichGroup,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
GroupEnumUnitsInRangeHint="[NATIVE] native GroupEnumUnitsInRange takes group whichGroup, real x, real y, real radius, boolexpr filter returns nothing"

GroupEnumUnitsInRangeCounted=GroupEnumUnitsInRangeCounted
GroupEnumUnitsInRangeCounted="GroupEnumUnitsInRangeCounted(",~whichGroup,", ",~x,", ",~y,", ",~radius,", ",~filter,", ",~countLimit,")"
GroupEnumUnitsInRangeCountedHint="[NATIVE] native GroupEnumUnitsInRangeCounted takes group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit returns nothing"

GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(",~whichGroup,", ",~orderName,", ",~x,", ",~y,")"
GroupPointOrderHint="[NATIVE] native GroupPointOrder takes group whichGroup, string orderName, real x, real y returns boolean"

GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(",~whichGroup,", ",~orderId,", ",~x,", ",~y,")"
GroupPointOrderByIdHint="[NATIVE] native GroupPointOrderById takes group whichGroup, integer orderId, real x, real y returns boolean"

GroupTargetOrderUnit=GroupTargetOrder (Unit)
GroupTargetOrderUnit="GroupTargetOrderUnit(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderUnitHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, unit targetWidget returns boolean"

GroupTargetOrderItem=GroupTargetOrder (Item)
GroupTargetOrderItem="GroupTargetOrderItem(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderItemHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, item targetWidget returns boolean"

GroupTargetOrderDestructable=GroupTargetOrder (Destructable)
GroupTargetOrderDestructable="GroupTargetOrderDestructable(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderDestructableHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, destructable targetWidget returns boolean"

GroupTargetOrderByIdUnit=GroupTargetOrderById (Unit)
GroupTargetOrderByIdUnit="GroupTargetOrderByIdUnit(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdUnitHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, unit targetWidget returns boolean"

GroupTargetOrderByIdItem=GroupTargetOrderById (Item)
GroupTargetOrderByIdItem="GroupTargetOrderByIdItem(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdItemHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, item targetWidget returns boolean"

GroupTargetOrderByIdDestructable=GroupTargetOrderById (Destructable)
GroupTargetOrderByIdDestructable="GroupTargetOrderByIdDestructable(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdDestructableHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, destructable targetWidget returns boolean"

FirstOfGroup=FirstOfGroup
FirstOfGroup="FirstOfGroup(",~whichGroup,")"
FirstOfGroupHint="[NATIVE] native FirstOfGroup takes group whichGroup returns unit"

CreateForce=CreateForce
CreateForce="CreateForce(",")"
CreateForceHint="[NATIVE] native CreateForce takes nothing returns force"

ForceAddPlayer=ForceAddPlayer
ForceAddPlayer="ForceAddPlayer(",~whichForce,", ",~whichPlayer,")"
ForceAddPlayerHint="[NATIVE] native ForceAddPlayer takes force whichForce, player whichPlayer returns nothing"

ForceRemovePlayer=ForceRemovePlayer
ForceRemovePlayer="ForceRemovePlayer(",~whichForce,", ",~whichPlayer,")"
ForceRemovePlayerHint="[NATIVE] native ForceRemovePlayer takes force whichForce, player whichPlayer returns nothing"

ForceEnumPlayers=ForceEnumPlayers
ForceEnumPlayers="ForceEnumPlayers(",~whichForce,", ",~filter,")"
ForceEnumPlayersHint="[NATIVE] native ForceEnumPlayers takes force whichForce, boolexpr filter returns nothing"

ForceEnumPlayersCounted=ForceEnumPlayersCounted
ForceEnumPlayersCounted="ForceEnumPlayersCounted(",~whichForce,", ",~filter,", ",~countLimit,")"
ForceEnumPlayersCountedHint="[NATIVE] native ForceEnumPlayersCounted takes force whichForce, boolexpr filter, integer countLimit returns nothing"

ForceEnumAllies=ForceEnumAllies
ForceEnumAllies="ForceEnumAllies(",~whichForce,", ",~whichPlayer,", ",~filter,")"
ForceEnumAlliesHint="[NATIVE] native ForceEnumAllies takes force whichForce, player whichPlayer, boolexpr filter returns nothing"

ForceEnumEnemies=ForceEnumEnemies
ForceEnumEnemies="ForceEnumEnemies(",~whichForce,", ",~whichPlayer,", ",~filter,")"
ForceEnumEnemiesHint="[NATIVE] native ForceEnumEnemies takes force whichForce, player whichPlayer, boolexpr filter returns nothing"

Rect=Rect
Rect="Rect(",~minx,", ",~miny,", ",~maxx,", ",~maxy,")"
RectHint="[NATIVE] native Rect takes real minx, real miny, real maxx, real maxy returns rect"

RectFromLoc=RectFromLoc
RectFromLoc="RectFromLoc(",~min,", ",~max,")"
RectFromLocHint="[NATIVE] native RectFromLoc takes location min, location max returns rect"

SetRect=SetRect
SetRect="SetRect(",~whichRect,", ",~minx,", ",~miny,", ",~maxx,", ",~maxy,")"
SetRectHint="[NATIVE] native SetRect takes rect whichRect, real minx, real miny, real maxx, real maxy returns nothing"

SetRectFromLoc=SetRectFromLoc
SetRectFromLoc="SetRectFromLoc(",~whichRect,", ",~min,", ",~max,")"
SetRectFromLocHint="[NATIVE] native SetRectFromLoc takes rect whichRect, location min, location max returns nothing"

CreateRegion=CreateRegion
CreateRegion="CreateRegion(",")"
CreateRegionHint="[NATIVE] native CreateRegion takes nothing returns region"

Location=Location
Location="Location(",~x,", ",~y,")"
LocationHint="[NATIVE] native Location takes real x, real y returns location"

CreateTrigger=CreateTrigger
CreateTrigger="CreateTrigger(",")"
CreateTriggerHint="[NATIVE] native CreateTrigger takes nothing returns trigger"

TriggerWaitOnSleeps=TriggerWaitOnSleeps
TriggerWaitOnSleeps="TriggerWaitOnSleeps(",~whichTrigger,", ",~flag,")"
TriggerWaitOnSleepsHint="[NATIVE] native TriggerWaitOnSleeps takes trigger whichTrigger, boolean flag returns nothing"

DestroyCondition=DestroyCondition
DestroyCondition="DestroyCondition(",~c,")"
DestroyConditionHint="[NATIVE] native DestroyCondition takes conditionfunc c returns nothing"

DestroyFilter=DestroyFilter
DestroyFilter="DestroyFilter(",~f,")"
DestroyFilterHint="[NATIVE] native DestroyFilter takes filterfunc f returns nothing"

DestroyBoolExpr=DestroyBoolExpr
DestroyBoolExpr="DestroyBoolExpr(",~e,")"
DestroyBoolExprHint="[NATIVE] native DestroyBoolExpr takes boolexpr e returns nothing"

TriggerRegisterVariableEvent=TriggerRegisterVariableEvent
TriggerRegisterVariableEvent="TriggerRegisterVariableEvent(",~whichTrigger,", ",~varName,", ",~opcode,", ",~limitval,")"
TriggerRegisterVariableEventHint="[NATIVE] native TriggerRegisterVariableEvent takes trigger whichTrigger, string varName, limitop opcode, real limitval returns event"

TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(",~whichTrigger,", ",~timeout,", ",~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE] native TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event"

TriggerRegisterTimerExpireEvent=TriggerRegisterTimerExpireEvent
TriggerRegisterTimerExpireEvent="TriggerRegisterTimerExpireEvent(",~whichTrigger,", ",~whichTimer,")"
TriggerRegisterTimerExpireEventHint="[NATIVE] native TriggerRegisterTimerExpireEvent takes trigger whichTrigger, timer whichTimer returns event"

TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(",~whichTrigger,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE] native TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event"

TriggerRegisterDialogEvent=TriggerRegisterDialogEvent
TriggerRegisterDialogEvent="TriggerRegisterDialogEvent(",~whichTrigger,", ",~whichDialog,")"
TriggerRegisterDialogEventHint="[NATIVE] native TriggerRegisterDialogEvent takes trigger whichTrigger, dialog whichDialog returns event"

TriggerRegisterDialogButtonEvent=TriggerRegisterDialogButtonEvent
TriggerRegisterDialogButtonEvent="TriggerRegisterDialogButtonEvent(",~whichTrigger,", ",~whichButton,")"
TriggerRegisterDialogButtonEventHint="[NATIVE] native TriggerRegisterDialogButtonEvent takes trigger whichTrigger, button whichButton returns event"

TriggerRegisterGameEvent=TriggerRegisterGameEvent
TriggerRegisterGameEvent="TriggerRegisterGameEvent(",~whichTrigger,", ",~whichGameEvent,")"
TriggerRegisterGameEventHint="[NATIVE] native TriggerRegisterGameEvent takes trigger whichTrigger, gameevent whichGameEvent returns event"

TriggerRegisterEnterRegion=TriggerRegisterEnterRegion
TriggerRegisterEnterRegion="TriggerRegisterEnterRegion(",~whichTrigger,", ",~whichRegion,", ",~filter,")"
TriggerRegisterEnterRegionHint="[NATIVE] native TriggerRegisterEnterRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event"

TriggerRegisterLeaveRegion=TriggerRegisterLeaveRegion
TriggerRegisterLeaveRegion="TriggerRegisterLeaveRegion(",~whichTrigger,", ",~whichRegion,", ",~filter,")"
TriggerRegisterLeaveRegionHint="[NATIVE] native TriggerRegisterLeaveRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event"

TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableHitEventHint="[NATIVE] native TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable whichTrackable returns event"

TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE] native TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable whichTrackable returns event"

TriggerRegisterPlayerEvent=TriggerRegisterPlayerEvent
TriggerRegisterPlayerEvent="TriggerRegisterPlayerEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichPlayerEvent,")"
TriggerRegisterPlayerEventHint="[NATIVE] native TriggerRegisterPlayerEvent takes trigger whichTrigger, player whichPlayer, playerevent whichPlayerEvent returns event"

TriggerRegisterPlayerUnitEvent=TriggerRegisterPlayerUnitEvent
TriggerRegisterPlayerUnitEvent="TriggerRegisterPlayerUnitEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichPlayerUnitEvent,", ",~filter,")"
TriggerRegisterPlayerUnitEventHint="[NATIVE] native TriggerRegisterPlayerUnitEvent takes trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event"

TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(",~whichTrigger,", ",~whichPlayer,", ",~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE] native TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event"

TriggerRegisterPlayerStateEvent=TriggerRegisterPlayerStateEvent
TriggerRegisterPlayerStateEvent="TriggerRegisterPlayerStateEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterPlayerStateEventHint="[NATIVE] native TriggerRegisterPlayerStateEvent takes trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval returns event"

TriggerRegisterPlayerChatEvent=TriggerRegisterPlayerChatEvent
TriggerRegisterPlayerChatEvent="TriggerRegisterPlayerChatEvent(",~whichTrigger,", ",~whichPlayer,", ",~chatMessageToDetect,", ",~exactMatchOnly,")"
TriggerRegisterPlayerChatEventHint="[NATIVE] native TriggerRegisterPlayerChatEvent takes trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event"

TriggerRegisterDeathEventUnit=TriggerRegisterDeathEvent (Unit)
TriggerRegisterDeathEventUnit="TriggerRegisterDeathEventUnit(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventUnitHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, unit whichWidget returns event"

TriggerRegisterDeathEventItem=TriggerRegisterDeathEvent (Item)
TriggerRegisterDeathEventItem="TriggerRegisterDeathEventItem(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventItemHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, item whichWidget returns event"

TriggerRegisterDeathEventDestructable=TriggerRegisterDeathEvent (Destructable)
TriggerRegisterDeathEventDestructable="TriggerRegisterDeathEventDestructable(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventDestructableHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, destructable whichWidget returns event"

TriggerRegisterUnitStateEvent=TriggerRegisterUnitStateEvent
TriggerRegisterUnitStateEvent="TriggerRegisterUnitStateEvent(",~whichTrigger,", ",~whichUnit,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterUnitStateEventHint="[NATIVE] native TriggerRegisterUnitStateEvent takes trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval returns event"

TriggerRegisterUnitEvent=TriggerRegisterUnitEvent
TriggerRegisterUnitEvent="TriggerRegisterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,")"
TriggerRegisterUnitEventHint="[NATIVE] native TriggerRegisterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent returns event"

TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,", ",~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE] native TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event"

TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(",~whichTrigger,", ",~whichUnit,", ",~range,", ",~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE] native TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event"

TriggerWaitForSound=TriggerWaitForSound
TriggerWaitForSound="TriggerWaitForSound(",~whichSound,", ",~offset,")"
TriggerWaitForSoundHint="[NATIVE] native TriggerWaitForSound takes sound whichSound, real offset returns nothing"

TriggerEvaluate=TriggerEvaluate
TriggerEvaluate="TriggerEvaluate(",~whichTrigger,")"
TriggerEvaluateHint="[NATIVE] native TriggerEvaluate takes trigger whichTrigger returns boolean"

TriggerExecuteWait=TriggerExecuteWait
TriggerExecuteWait="TriggerExecuteWait(",~whichTrigger,")"
TriggerExecuteWaitHint="[NATIVE] native TriggerExecuteWait takes trigger whichTrigger returns nothing"

TriggerSyncStart=TriggerSyncStart
TriggerSyncStart="TriggerSyncStart(",")"
TriggerSyncStartHint="[NATIVE] native TriggerSyncStart takes nothing returns nothing"

TriggerSyncReady=TriggerSyncReady
TriggerSyncReady="TriggerSyncReady(",")"
TriggerSyncReadyHint="[NATIVE] native TriggerSyncReady takes nothing returns nothing"

SetWidgetLifeUnit=SetWidgetLife (Unit)
SetWidgetLifeUnit="SetWidgetLifeUnit(",~whichWidget,", ",~newLife,")"
SetWidgetLifeUnitHint="[NATIVE] native SetWidgetLife takes unit whichWidget, real newLife returns nothing"

SetWidgetLifeItem=SetWidgetLife (Item)
SetWidgetLifeItem="SetWidgetLifeItem(",~whichWidget,", ",~newLife,")"
SetWidgetLifeItemHint="[NATIVE] native SetWidgetLife takes item whichWidget, real newLife returns nothing"

SetWidgetLifeDestructable=SetWidgetLife (Destructable)
SetWidgetLifeDestructable="SetWidgetLifeDestructable(",~whichWidget,", ",~newLife,")"
SetWidgetLifeDestructableHint="[NATIVE] native SetWidgetLife takes destructable whichWidget, real newLife returns nothing"

CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableHint="[NATIVE] native CreateDestructable takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns destructable"

CreateDestructableZ=CreateDestructableZ
CreateDestructableZ="CreateDestructableZ(",~objectTypeId,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableZHint="[NATIVE] native CreateDestructableZ takes integer objectTypeId, real x, real y, real z, real facing, real scale, integer variation returns destructable"

CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableHint="[NATIVE] native CreateDeadDestructable takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns destructable"

CreateDeadDestructableZ=CreateDeadDestructableZ
CreateDeadDestructableZ="CreateDeadDestructableZ(",~objectTypeId,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableZHint="[NATIVE] native CreateDeadDestructableZ takes integer objectTypeId, real x, real y, real z, real facing, real scale, integer variation returns destructable"

SetDestructableInvulnerable=SetDestructableInvulnerable
SetDestructableInvulnerable="SetDestructableInvulnerable(",~whichDestructable,", ",~flag,")"
SetDestructableInvulnerableHint="[NATIVE] native SetDestructableInvulnerable takes destructable whichDestructable, boolean flag returns nothing"

EnumDestructablesInRect=EnumDestructablesInRect
EnumDestructablesInRect="EnumDestructablesInRect(",~whichRect,", ",~filter,", ",~actionFunc,")"
EnumDestructablesInRectHint="[NATIVE] native EnumDestructablesInRect takes rect whichRect, boolexpr filter, code actionFunc returns nothing"

SetDestructableMaxLife=SetDestructableMaxLife
SetDestructableMaxLife="SetDestructableMaxLife(",~whichDestructable,", ",~max,")"
SetDestructableMaxLifeHint="[NATIVE] native SetDestructableMaxLife takes destructable whichDestructable, real max returns nothing"

QueueDestructableAnimation=QueueDestructableAnimation
QueueDestructableAnimation="QueueDestructableAnimation(",~whichDestructable,", ",~whichAnimation,")"
QueueDestructableAnimationHint="[NATIVE] native QueueDestructableAnimation takes destructable whichDestructable, string whichAnimation returns nothing"

SetDestructableAnimation=SetDestructableAnimation
SetDestructableAnimation="SetDestructableAnimation(",~whichDestructable,", ",~whichAnimation,")"
SetDestructableAnimationHint="[NATIVE] native SetDestructableAnimation takes destructable whichDestructable, string whichAnimation returns nothing"

SetDestructableAnimationSpeed=SetDestructableAnimationSpeed
SetDestructableAnimationSpeed="SetDestructableAnimationSpeed(",~whichDestructable,", ",~speedFactor,")"
SetDestructableAnimationSpeedHint="[NATIVE] native SetDestructableAnimationSpeed takes destructable whichDestructable, real speedFactor returns nothing"

ShowDestructable=ShowDestructable
ShowDestructable="ShowDestructable(",~whichDestructable,", ",~flag,")"
ShowDestructableHint="[NATIVE] native ShowDestructable takes destructable whichDestructable, boolean flag returns nothing"

CreateItem=CreateItem
CreateItem="CreateItem(",~itemTypeId,", ",~x,", ",~y,")"
CreateItemHint="[NATIVE] native CreateItem takes integer itemTypeId, real x, real y returns item"

SetItemPosition=SetItemPosition
SetItemPosition="SetItemPosition(",~whichItem,", ",~x,", ",~y,")"
SetItemPositionHint="[NATIVE] native SetItemPosition takes item whichItem, real x, real y returns nothing"

SetItemDropOnDeath=SetItemDropOnDeath
SetItemDropOnDeath="SetItemDropOnDeath(",~whichItem,", ",~flag,")"
SetItemDropOnDeathHint="[NATIVE] native SetItemDropOnDeath takes item whichItem, boolean flag returns nothing"

SetItemDroppable=SetItemDroppable
SetItemDroppable="SetItemDroppable(",~whichItem,", ",~flag,")"
SetItemDroppableHint="[NATIVE] native SetItemDroppable takes item whichItem, boolean flag returns nothing"

SetItemPlayer=SetItemPlayer
SetItemPlayer="SetItemPlayer(",~whichItem,", ",~whichPlayer,", ",~changeColor,")"
SetItemPlayerHint="[NATIVE] native SetItemPlayer takes item whichItem, player whichPlayer, boolean changeColor returns nothing"

SetItemInvulnerable=SetItemInvulnerable
SetItemInvulnerable="SetItemInvulnerable(",~whichItem,", ",~flag,")"
SetItemInvulnerableHint="[NATIVE] native SetItemInvulnerable takes item whichItem, boolean flag returns nothing"

SetItemVisible=SetItemVisible
SetItemVisible="SetItemVisible(",~whichItem,", ",~show,")"
SetItemVisibleHint="[NATIVE] native SetItemVisible takes item whichItem, boolean show returns nothing"

SetItemDropID=SetItemDropID
SetItemDropID="SetItemDropID(",~whichItem,", ",~unitTypeId,")"
SetItemDropIDHint="[NATIVE] native SetItemDropID takes item whichItem, integer unitTypeId returns nothing"

CreateUnit=CreateUnit
CreateUnit="CreateUnit(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateUnitHint="[NATIVE] native CreateUnit takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(",~whichPlayer,", ",~unitname,", ",~x,", ",~y,", ",~facing,")"
CreateUnitByNameHint="[NATIVE] native CreateUnitByName takes player whichPlayer, string unitname, real x, real y, real facing returns unit"

CreateUnitAtLoc=CreateUnitAtLoc
CreateUnitAtLoc="CreateUnitAtLoc(",~whichPlayer,", ",~unitTypeId,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocHint="[NATIVE] native CreateUnitAtLoc takes player whichPlayer, integer unitTypeId, location whichLocation, real facing returns unit"

CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(",~whichPlayer,", ",~unitname,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocByNameHint="[NATIVE] native CreateUnitAtLocByName takes player whichPlayer, string unitname, location whichLocation, real facing returns unit"

CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateCorpseHint="[NATIVE] native CreateCorpse takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

ShowUnit=ShowUnit
ShowUnit="ShowUnit(",~whichUnit,", ",~show,")"
ShowUnitHint="[NATIVE] native ShowUnit takes unit whichUnit, boolean show returns nothing"

SetUnitState=SetUnitState
SetUnitState="SetUnitState(",~whichUnit,", ",~whichUnitState,", ",~newVal,")"
SetUnitStateHint="[NATIVE] native SetUnitState takes unit whichUnit, unitstate whichUnitState, real newVal returns nothing"

SetUnitX=SetUnitX
SetUnitX="SetUnitX(",~whichUnit,", ",~newX,")"
SetUnitXHint="[NATIVE] native SetUnitX takes unit whichUnit, real newX returns nothing"

SetUnitY=SetUnitY
SetUnitY="SetUnitY(",~whichUnit,", ",~newY,")"
SetUnitYHint="[NATIVE] native SetUnitY takes unit whichUnit, real newY returns nothing"

SetUnitPosition=SetUnitPosition
SetUnitPosition="SetUnitPosition(",~whichUnit,", ",~newX,", ",~newY,")"
SetUnitPositionHint="[NATIVE] native SetUnitPosition takes unit whichUnit, real newX, real newY returns nothing"

SetUnitFacing=SetUnitFacing
SetUnitFacing="SetUnitFacing(",~whichUnit,", ",~facingAngle,")"
SetUnitFacingHint="[NATIVE] native SetUnitFacing takes unit whichUnit, real facingAngle returns nothing"

SetUnitFlyHeight=SetUnitFlyHeight
SetUnitFlyHeight="SetUnitFlyHeight(",~whichUnit,", ",~newHeight,", ",~rate,")"
SetUnitFlyHeightHint="[NATIVE] native SetUnitFlyHeight takes unit whichUnit, real newHeight, real rate returns nothing"

SetUnitTurnSpeed=SetUnitTurnSpeed
SetUnitTurnSpeed="SetUnitTurnSpeed(",~whichUnit,", ",~newTurnSpeed,")"
SetUnitTurnSpeedHint="[NATIVE] native SetUnitTurnSpeed takes unit whichUnit, real newTurnSpeed returns nothing"

SetUnitPropWindow=SetUnitPropWindow
SetUnitPropWindow="SetUnitPropWindow(",~whichUnit,", ",~newPropWindowAngle,")"
SetUnitPropWindowHint="[NATIVE] native SetUnitPropWindow takes unit whichUnit, real newPropWindowAngle returns nothing"

SetUnitAcquireRange=SetUnitAcquireRange
SetUnitAcquireRange="SetUnitAcquireRange(",~whichUnit,", ",~newAcquireRange,")"
SetUnitAcquireRangeHint="[NATIVE] native SetUnitAcquireRange takes unit whichUnit, real newAcquireRange returns nothing"

SetUnitCreepGuard=SetUnitCreepGuard
SetUnitCreepGuard="SetUnitCreepGuard(",~whichUnit,", ",~creepGuard,")"
SetUnitCreepGuardHint="[NATIVE] native SetUnitCreepGuard takes unit whichUnit, boolean creepGuard returns nothing"

SetUnitScale=SetUnitScale
SetUnitScale="SetUnitScale(",~whichUnit,", ",~scaleX,", ",~scaleY,", ",~scaleZ,")"
SetUnitScaleHint="[NATIVE] native SetUnitScale takes unit whichUnit, real scaleX, real scaleY, real scaleZ returns nothing"

SetUnitTimeScale=SetUnitTimeScale
SetUnitTimeScale="SetUnitTimeScale(",~whichUnit,", ",~timeScale,")"
SetUnitTimeScaleHint="[NATIVE] native SetUnitTimeScale takes unit whichUnit, real timeScale returns nothing"

SetUnitBlendTime=SetUnitBlendTime
SetUnitBlendTime="SetUnitBlendTime(",~whichUnit,", ",~blendTime,")"
SetUnitBlendTimeHint="[NATIVE] native SetUnitBlendTime takes unit whichUnit, real blendTime returns nothing"

SetUnitVertexColor=SetUnitVertexColor
SetUnitVertexColor="SetUnitVertexColor(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetUnitVertexColorHint="[NATIVE] native SetUnitVertexColor takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing"

QueueUnitAnimation=QueueUnitAnimation
QueueUnitAnimation="QueueUnitAnimation(",~whichUnit,", ",~whichAnimation,")"
QueueUnitAnimationHint="[NATIVE] native QueueUnitAnimation takes unit whichUnit, string whichAnimation returns nothing"

AddUnitAnimationProperties=AddUnitAnimationProperties
AddUnitAnimationProperties="AddUnitAnimationProperties(",~whichUnit,", ",~animProperties,", ",~add,")"
AddUnitAnimationPropertiesHint="[NATIVE] native AddUnitAnimationProperties takes unit whichUnit, string animProperties, boolean add returns nothing"

SetUnitRescuable=SetUnitRescuable
SetUnitRescuable="SetUnitRescuable(",~whichUnit,", ",~byWhichPlayer,", ",~flag,")"
SetUnitRescuableHint="[NATIVE] native SetUnitRescuable takes unit whichUnit, player byWhichPlayer, boolean flag returns nothing"

UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(",~whichHero,", ",~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE] native UnitStripHeroLevel takes unit whichHero, integer howManyLevels returns boolean"

UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(",~whichHero,", ",~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE] native UnitModifySkillPoints takes unit whichHero, integer skillPointDelta returns boolean"

AddHeroXP=AddHeroXP
AddHeroXP="AddHeroXP(",~whichHero,", ",~xpToAdd,", ",~showEyeCandy,")"
AddHeroXPHint="[NATIVE] native AddHeroXP takes unit whichHero, integer xpToAdd, boolean showEyeCandy returns nothing"

SuspendHeroXP=SuspendHeroXP
SuspendHeroXP="SuspendHeroXP(",~whichHero,", ",~flag,")"
SuspendHeroXPHint="[NATIVE] native SuspendHeroXP takes unit whichHero, boolean flag returns nothing"

DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,")"
DecUnitAbilityLevelHint="[NATIVE] native DecUnitAbilityLevel takes unit whichUnit, integer abilityTypeId returns integer"

IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,")"
IncUnitAbilityLevelHint="[NATIVE] native IncUnitAbilityLevel takes unit whichUnit, integer abilityTypeId returns integer"

SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,", ",~level,")"
SetUnitAbilityLevelHint="[NATIVE] native SetUnitAbilityLevel takes unit whichUnit, integer abilityTypeId, integer level returns integer"

ReviveHero=ReviveHero
ReviveHero="ReviveHero(",~whichHero,", ",~x,", ",~y,", ",~doEyecandy,")"
ReviveHeroHint="[NATIVE] native ReviveHero takes unit whichHero, real x, real y, boolean doEyecandy returns boolean"

SetUnitExploded=SetUnitExploded
SetUnitExploded="SetUnitExploded(",~whichUnit,", ",~exploded,")"
SetUnitExplodedHint="[NATIVE] native SetUnitExploded takes unit whichUnit, boolean exploded returns nothing"

PauseUnit=PauseUnit
PauseUnit="PauseUnit(",~whichUnit,", ",~flag,")"
PauseUnitHint="[NATIVE] native PauseUnit takes unit whichUnit, boolean flag returns nothing"

SelectUnit=SelectUnit
SelectUnit="SelectUnit(",~whichUnit,", ",~flag,")"
SelectUnitHint="[NATIVE] native SelectUnit takes unit whichUnit, boolean flag returns nothing"

SetUnitPointValueByType=SetUnitPointValueByType
SetUnitPointValueByType="SetUnitPointValueByType(",~unitTypeId,", ",~newPointValue,")"
SetUnitPointValueByTypeHint="[UjAPI] native SetUnitPointValueByType takes integer unitTypeId, integer newPointValue returns nothing"

UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(",~whichUnit,", ",~whichItem,")"
UnitAddItemHint="[NATIVE] native UnitAddItem takes unit whichUnit, item whichItem returns boolean"

UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(",~whichUnit,", ",~itemTypeId,")"
UnitAddItemByIdHint="[NATIVE] native UnitAddItemById takes unit whichUnit, integer itemTypeId returns item"

UnitRemoveItem=UnitRemoveItem
UnitRemoveItem="UnitRemoveItem(",~whichUnit,", ",~whichItem,")"
UnitRemoveItemHint="[NATIVE] native UnitRemoveItem takes unit whichUnit, item whichItem returns nothing"

UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(",~whichUnit,", ",~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE] native UnitRemoveItemFromSlot takes unit whichUnit, integer itemSlot returns item"

UnitHasItem=UnitHasItem
UnitHasItem="UnitHasItem(",~whichUnit,", ",~whichItem,")"
UnitHasItemHint="[NATIVE] native UnitHasItem takes unit whichUnit, item whichItem returns boolean"

UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(",~whichUnit,", ",~itemSlot,")"
UnitItemInSlotHint="[NATIVE] native UnitItemInSlot takes unit whichUnit, integer itemSlot returns item"

UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(",~whichUnit,")"
UnitInventorySizeHint="[NATIVE] native UnitInventorySize takes unit whichUnit returns integer"

UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitDropItemPointHint="[NATIVE] native UnitDropItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"

UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(",~whichUnit,", ",~whichItem,", ",~slot,")"
UnitDropItemSlotHint="[NATIVE] native UnitDropItemSlot takes unit whichUnit, item whichItem, integer slot returns boolean"

UnitDropItemTargetUnit=UnitDropItemTarget (Unit)
UnitDropItemTargetUnit="UnitDropItemTargetUnit(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetUnitHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, unit target returns boolean"

UnitDropItemTargetItem=UnitDropItemTarget (Item)
UnitDropItemTargetItem="UnitDropItemTargetItem(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetItemHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, item target returns boolean"

UnitDropItemTargetDestructable=UnitDropItemTarget (Destructable)
UnitDropItemTargetDestructable="UnitDropItemTargetDestructable(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetDestructableHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, destructable target returns boolean"

UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitUseItemPointHint="[NATIVE] native UnitUseItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"

UnitUseItemTargetUnit=UnitUseItemTarget (Unit)
UnitUseItemTargetUnit="UnitUseItemTargetUnit(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetUnitHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, unit target returns boolean"

UnitUseItemTargetItem=UnitUseItemTarget (Item)
UnitUseItemTargetItem="UnitUseItemTargetItem(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetItemHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, item target returns boolean"

UnitUseItemTargetDestructable=UnitUseItemTarget (Destructable)
UnitUseItemTargetDestructable="UnitUseItemTargetDestructable(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetDestructableHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, destructable target returns boolean"

SetUnitUseFood=SetUnitUseFood
SetUnitUseFood="SetUnitUseFood(",~whichUnit,", ",~useFood,")"
SetUnitUseFoodHint="[NATIVE] native SetUnitUseFood takes unit whichUnit, boolean useFood returns nothing"

UnitShareVision=UnitShareVision
UnitShareVision="UnitShareVision(",~whichUnit,", ",~whichPlayer,", ",~share,")"
UnitShareVisionHint="[NATIVE] native UnitShareVision takes unit whichUnit, player whichPlayer, boolean share returns nothing"

UnitSuspendDecay=UnitSuspendDecay
UnitSuspendDecay="UnitSuspendDecay(",~whichUnit,", ",~suspend,")"
UnitSuspendDecayHint="[NATIVE] native UnitSuspendDecay takes unit whichUnit, boolean suspend returns nothing"

UnitAddType=UnitAddType
UnitAddType="UnitAddType(",~whichUnit,", ",~whichUnitType,")"
UnitAddTypeHint="[NATIVE] native UnitAddType takes unit whichUnit, unittype whichUnitType returns boolean"

UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(",~whichUnit,", ",~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE] native UnitRemoveType takes unit whichUnit, unittype whichUnitType returns boolean"

UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(",~whichUnit,", ",~abilityTypeId,")"
UnitAddAbilityHint="[NATIVE] native UnitAddAbility takes unit whichUnit, integer abilityTypeId returns boolean"

UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(",~whichUnit,", ",~abilityTypeId,")"
UnitRemoveAbilityHint="[NATIVE] native UnitRemoveAbility takes unit whichUnit, integer abilityTypeId returns boolean"

UnitMakeAbilityPermanent=UnitMakeAbilityPermanent
UnitMakeAbilityPermanent="UnitMakeAbilityPermanent(",~whichUnit,", ",~permanent,", ",~abilityTypeId,")"
UnitMakeAbilityPermanentHint="[NATIVE] native UnitMakeAbilityPermanent takes unit whichUnit, boolean permanent, integer abilityTypeId returns boolean"

UnitRemoveBuffs=UnitRemoveBuffs
UnitRemoveBuffs="UnitRemoveBuffs(",~whichUnit,", ",~removePositive,", ",~removeNegative,")"
UnitRemoveBuffsHint="[NATIVE] native UnitRemoveBuffs takes unit whichUnit, boolean removePositive, boolean removeNegative returns nothing"

UnitRemoveBuffsEx=UnitRemoveBuffsEx
UnitRemoveBuffsEx="UnitRemoveBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitRemoveBuffsExHint="[NATIVE] native UnitRemoveBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns nothing"

UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitHasBuffsExHint="[NATIVE] native UnitHasBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean"

UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitCountBuffsExHint="[NATIVE] native UnitCountBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer"

UnitAddSleep=UnitAddSleep
UnitAddSleep="UnitAddSleep(",~whichUnit,", ",~add,")"
UnitAddSleepHint="[NATIVE] native UnitAddSleep takes unit whichUnit, boolean add returns nothing"

UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(",~whichUnit,")"
UnitCanSleepHint="[NATIVE] native UnitCanSleep takes unit whichUnit returns boolean"

UnitCanSleepPerm=UnitCanSleepPerm
UnitCanSleepPerm="UnitCanSleepPerm(",~whichUnit,")"
UnitCanSleepPermHint="[NATIVE] native UnitCanSleepPerm takes unit whichUnit returns boolean"

UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(",~whichUnit,")"
UnitIsSleepingHint="[NATIVE] native UnitIsSleeping takes unit whichUnit returns boolean"

UnitWakeUp=UnitWakeUp
UnitWakeUp="UnitWakeUp(",~whichUnit,")"
UnitWakeUpHint="[NATIVE] native UnitWakeUp takes unit whichUnit returns nothing"

UnitPauseTimedLife=UnitPauseTimedLife
UnitPauseTimedLife="UnitPauseTimedLife(",~whichUnit,", ",~flag,")"
UnitPauseTimedLifeHint="[NATIVE] native UnitPauseTimedLife takes unit whichUnit, boolean flag returns nothing"

UnitSetUsesAltIcon=UnitSetUsesAltIcon
UnitSetUsesAltIcon="UnitSetUsesAltIcon(",~whichUnit,", ",~flag,")"
UnitSetUsesAltIconHint="[NATIVE] native UnitSetUsesAltIcon takes unit whichUnit, boolean flag returns nothing"

UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(",~whichUnit,", ",~delay,", ",~radius,", ",~x,", ",~y,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamagePointHint="[NATIVE] native UnitDamagePoint takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetUnit=UnitDamageTarget (Unit)
UnitDamageTargetUnit="UnitDamageTargetUnit(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetUnitHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, unit target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetItem=UnitDamageTarget (Item)
UnitDamageTargetItem="UnitDamageTargetItem(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetItemHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, item target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetDestructable=UnitDamageTarget (Destructable)
UnitDamageTargetDestructable="UnitDamageTargetDestructable(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetDestructableHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, destructable target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

AddResourceAmount=AddResourceAmount
AddResourceAmount="AddResourceAmount(",~whichUnit,", ",~amount,")"
AddResourceAmountHint="[NATIVE] native AddResourceAmount takes unit whichUnit, integer amount returns nothing"

WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(",~waygate,")"
WaygateGetDestinationXHint="[NATIVE] native WaygateGetDestinationX takes unit waygate returns real"

WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(",~waygate,")"
WaygateGetDestinationYHint="[NATIVE] native WaygateGetDestinationY takes unit waygate returns real"

WaygateSetDestination=WaygateSetDestination
WaygateSetDestination="WaygateSetDestination(",~waygate,", ",~x,", ",~y,")"
WaygateSetDestinationHint="[NATIVE] native WaygateSetDestination takes unit waygate, real x, real y returns nothing"

WaygateActivate=WaygateActivate
WaygateActivate="WaygateActivate(",~waygate,", ",~activate,")"
WaygateActivateHint="[NATIVE] native WaygateActivate takes unit waygate, boolean activate returns nothing"

WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(",~waygate,")"
WaygateIsActiveHint="[NATIVE] native WaygateIsActive takes unit waygate returns boolean"

RemoveItemFromStock=RemoveItemFromStock
RemoveItemFromStock="RemoveItemFromStock(",~whichUnit,", ",~itemTypeId,")"
RemoveItemFromStockHint="[NATIVE] native RemoveItemFromStock takes unit whichUnit, integer itemTypeId returns nothing"

RemoveUnitFromStock=RemoveUnitFromStock
RemoveUnitFromStock="RemoveUnitFromStock(",~whichUnit,", ",~unitTypeId,")"
RemoveUnitFromStockHint="[NATIVE] native RemoveUnitFromStock takes unit whichUnit, integer unitTypeId returns nothing"

Player=Player
Player="Player(",~number,")"
PlayerHint="[NATIVE] native Player takes integer number returns player"

SetPlayerHandicap=SetPlayerHandicap
SetPlayerHandicap="SetPlayerHandicap(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapHint="[NATIVE] native SetPlayerHandicap takes player whichPlayer, real handicap returns nothing"

SetPlayerHandicapXP=SetPlayerHandicapXP
SetPlayerHandicapXP="SetPlayerHandicapXP(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapXPHint="[NATIVE] native SetPlayerHandicapXP takes player whichPlayer, real handicap returns nothing"

AddPlayerTechResearched=AddPlayerTechResearched
AddPlayerTechResearched="AddPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~levels,")"
AddPlayerTechResearchedHint="[NATIVE] native AddPlayerTechResearched takes player whichPlayer, integer techid, integer levels returns nothing"

SetPlayerTechResearched=SetPlayerTechResearched
SetPlayerTechResearched="SetPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~setToLevel,")"
SetPlayerTechResearchedHint="[NATIVE] native SetPlayerTechResearched takes player whichPlayer, integer techid, integer setToLevel returns nothing"

SetPlayerUnitsOwner=SetPlayerUnitsOwner
SetPlayerUnitsOwner="SetPlayerUnitsOwner(",~whichPlayer,", ",~newOwner,")"
SetPlayerUnitsOwnerHint="[NATIVE] native SetPlayerUnitsOwner takes player whichPlayer, integer newOwner returns nothing"

CripplePlayer=CripplePlayer
CripplePlayer="CripplePlayer(",~whichPlayer,", ",~toWhichPlayers,", ",~flag,")"
CripplePlayerHint="[NATIVE] native CripplePlayer takes player whichPlayer, force toWhichPlayers, boolean flag returns nothing"

SetPlayerAbilityAvailable=SetPlayerAbilityAvailable
SetPlayerAbilityAvailable="SetPlayerAbilityAvailable(",~whichPlayer,", ",~abilityTypeId,", ",~avail,")"
SetPlayerAbilityAvailableHint="[NATIVE] native SetPlayerAbilityAvailable takes player whichPlayer, integer abilityTypeId, boolean avail returns nothing"

RemovePlayer=RemovePlayer
RemovePlayer="RemovePlayer(",~whichPlayer,", ",~gameResult,")"
RemovePlayerHint="[NATIVE] native RemovePlayer takes player whichPlayer, playergameresult gameResult returns nothing"

CachePlayerHeroData=CachePlayerHeroData
CachePlayerHeroData="CachePlayerHeroData(",~whichPlayer,")"
CachePlayerHeroDataHint="[NATIVE] native CachePlayerHeroData takes player whichPlayer returns nothing"

SetFogStateRect=SetFogStateRect
SetFogStateRect="SetFogStateRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,")"
SetFogStateRectHint="[NATIVE] native SetFogStateRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision returns nothing"

SetFogStateRadius=SetFogStateRadius
SetFogStateRadius="SetFogStateRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,")"
SetFogStateRadiusHint="[NATIVE] native SetFogStateRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision returns nothing"

SetFogStateRadiusLoc=SetFogStateRadiusLoc
SetFogStateRadiusLoc="SetFogStateRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,")"
SetFogStateRadiusLocHint="[NATIVE] native SetFogStateRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision returns nothing"

FogMaskEnable=FogMaskEnable
FogMaskEnable="FogMaskEnable(",~enable,")"
FogMaskEnableHint="[NATIVE] native FogMaskEnable takes boolean enable returns nothing"

FogEnable=FogEnable
FogEnable="FogEnable(",~enable,")"
FogEnableHint="[NATIVE] native FogEnable takes boolean enable returns nothing"

CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRectHint="[NATIVE] native CreateFogModifierRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision, boolean afterUnits returns fogmodifier"

CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE] native CreateFogModifierRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"

CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE] native CreateFogModifierRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"

ReloadGame=ReloadGame
ReloadGame="ReloadGame(",")"
ReloadGameHint="[NATIVE] native ReloadGame takes nothing returns nothing"

SetCampaignMenuRace=SetCampaignMenuRace
SetCampaignMenuRace="SetCampaignMenuRace(",~whichRace,")"
SetCampaignMenuRaceHint="[NATIVE] native SetCampaignMenuRace takes race whichRace returns nothing"

SetCampaignMenuRaceEx=SetCampaignMenuRaceEx
SetCampaignMenuRaceEx="SetCampaignMenuRaceEx(",~campaignIndex,")"
SetCampaignMenuRaceExHint="[NATIVE] native SetCampaignMenuRaceEx takes integer campaignIndex returns nothing"

ForceCampaignSelectScreen=ForceCampaignSelectScreen
ForceCampaignSelectScreen="ForceCampaignSelectScreen(",")"
ForceCampaignSelectScreenHint="[NATIVE] native ForceCampaignSelectScreen takes nothing returns nothing"

LoadGame=LoadGame
LoadGame="LoadGame(",~saveFileName,", ",~doScoreScreen,")"
LoadGameHint="[NATIVE] native LoadGame takes string saveFileName, boolean doScoreScreen returns nothing"

SaveGame=SaveGame
SaveGame="SaveGame(",~saveFileName,")"
SaveGameHint="[NATIVE] native SaveGame takes string saveFileName returns nothing"

RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(",~sourceDirName,", ",~destDirName,")"
RenameSaveDirectoryHint="[NATIVE] native RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean"

RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(",~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE] native RemoveSaveDirectory takes string sourceDirName returns boolean"

CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(",~sourceSaveName,", ",~destSaveName,")"
CopySaveGameHint="[NATIVE] native CopySaveGame takes string sourceSaveName, string destSaveName returns boolean"

SaveGameExists=SaveGameExists
SaveGameExists="SaveGameExists(",~saveName,")"
SaveGameExistsHint="[NATIVE] native SaveGameExists takes string saveName returns boolean"

SetFloatGameState=SetFloatGameState
SetFloatGameState="SetFloatGameState(",~whichFloatGameState,", ",~value,")"
SetFloatGameStateHint="[NATIVE] native SetFloatGameState takes fgamestate whichFloatGameState, real value returns nothing"

SetTutorialCleared=SetTutorialCleared
SetTutorialCleared="SetTutorialCleared(",~cleared,")"
SetTutorialClearedHint="[NATIVE] native SetTutorialCleared takes boolean cleared returns nothing"

SetMissionAvailable=SetMissionAvailable
SetMissionAvailable="SetMissionAvailable(",~campaignNumber,", ",~missionNumber,", ",~available,")"
SetMissionAvailableHint="[NATIVE] native SetMissionAvailable takes integer campaignNumber, integer missionNumber, boolean available returns nothing"

SetCampaignAvailable=SetCampaignAvailable
SetCampaignAvailable="SetCampaignAvailable(",~campaignNumber,", ",~available,")"
SetCampaignAvailableHint="[NATIVE] native SetCampaignAvailable takes integer campaignNumber, boolean available returns nothing"

SetOpCinematicAvailable=SetOpCinematicAvailable
SetOpCinematicAvailable="SetOpCinematicAvailable(",~campaignNumber,", ",~available,")"
SetOpCinematicAvailableHint="[NATIVE] native SetOpCinematicAvailable takes integer campaignNumber, boolean available returns nothing"

SetEdCinematicAvailable=SetEdCinematicAvailable
SetEdCinematicAvailable="SetEdCinematicAvailable(",~campaignNumber,", ",~available,")"
SetEdCinematicAvailableHint="[NATIVE] native SetEdCinematicAvailable takes integer campaignNumber, boolean available returns nothing"

SetDefaultDifficulty=SetDefaultDifficulty
SetDefaultDifficulty="SetDefaultDifficulty(",~g,")"
SetDefaultDifficultyHint="[NATIVE] native SetDefaultDifficulty takes gamedifficulty g returns nothing"

SetCustomCampaignButtonVisible=SetCustomCampaignButtonVisible
SetCustomCampaignButtonVisible="SetCustomCampaignButtonVisible(",~whichButton,", ",~visible,")"
SetCustomCampaignButtonVisibleHint="[NATIVE] native SetCustomCampaignButtonVisible takes integer whichButton, boolean visible returns nothing"

DialogCreate=DialogCreate
DialogCreate="DialogCreate(",")"
DialogCreateHint="[NATIVE] native DialogCreate takes nothing returns dialog"

DialogClear=DialogClear
DialogClear="DialogClear(",~whichDialog,")"
DialogClearHint="[NATIVE] native DialogClear takes dialog whichDialog returns nothing"

DialogSetMessage=DialogSetMessage
DialogSetMessage="DialogSetMessage(",~whichDialog,", ",~messageText,")"
DialogSetMessageHint="[NATIVE] native DialogSetMessage takes dialog whichDialog, string messageText returns nothing"

DialogDisplay=DialogDisplay
DialogDisplay="DialogDisplay(",~whichPlayer,", ",~whichDialog,", ",~flag,")"
DialogDisplayHint="[NATIVE] native DialogDisplay takes player whichPlayer, dialog whichDialog, boolean flag returns nothing"

InitGameCache=InitGameCache
InitGameCache="InitGameCache(",~campaignFile,")"
InitGameCacheHint="[NATIVE] native InitGameCache takes string campaignFile returns gamecache"

SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(",~whichCache,")"
SaveGameCacheHint="[NATIVE] native SaveGameCache takes gamecache whichCache returns boolean"

StoreInteger=StoreInteger
StoreInteger="StoreInteger(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreIntegerHint="[NATIVE] native StoreInteger takes gamecache whichGamecache, string missionKey, string key, integer value returns nothing"

StoreReal=StoreReal
StoreReal="StoreReal(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreRealHint="[NATIVE] native StoreReal takes gamecache whichGamecache, string missionKey, string key, real value returns nothing"

StoreBoolean=StoreBoolean
StoreBoolean="StoreBoolean(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreBooleanHint="[NATIVE] native StoreBoolean takes gamecache whichGamecache, string missionKey, string key, boolean value returns nothing"

StoreUnit=StoreUnit
StoreUnit="StoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichUnit,")"
StoreUnitHint="[NATIVE] native StoreUnit takes gamecache whichGamecache, string missionKey, string key, unit whichUnit returns boolean"

SyncStoredInteger=SyncStoredInteger
SyncStoredInteger="SyncStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredIntegerHint="[NATIVE] native SyncStoredInteger takes gamecache whichGamecache, string missionKey, string key returns nothing"

SyncStoredReal=SyncStoredReal
SyncStoredReal="SyncStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredRealHint="[NATIVE] native SyncStoredReal takes gamecache whichGamecache, string missionKey, string key returns nothing"

SyncStoredBoolean=SyncStoredBoolean
SyncStoredBoolean="SyncStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredBooleanHint="[NATIVE] native SyncStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns nothing"

SyncStoredUnit=SyncStoredUnit
SyncStoredUnit="SyncStoredUnit(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredUnitHint="[NATIVE] native SyncStoredUnit takes gamecache whichGamecache, string missionKey, string key returns nothing"

HaveStoredInteger=HaveStoredInteger
HaveStoredInteger="HaveStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredIntegerHint="[NATIVE] native HaveStoredInteger takes gamecache whichGamecache, string missionKey, string key returns boolean"

HaveStoredReal=HaveStoredReal
HaveStoredReal="HaveStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredRealHint="[NATIVE] native HaveStoredReal takes gamecache whichGamecache, string missionKey, string key returns boolean"

HaveStoredBoolean=HaveStoredBoolean
HaveStoredBoolean="HaveStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredBooleanHint="[NATIVE] native HaveStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns boolean"

HaveStoredUnit=HaveStoredUnit
HaveStoredUnit="HaveStoredUnit(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredUnitHint="[NATIVE] native HaveStoredUnit takes gamecache whichGamecache, string missionKey, string key returns boolean"

FlushGameCache=FlushGameCache
FlushGameCache="FlushGameCache(",~whichGamecache,")"
FlushGameCacheHint="[NATIVE] native FlushGameCache takes gamecache whichGamecache returns nothing"

FlushStoredMission=FlushStoredMission
FlushStoredMission="FlushStoredMission(",~whichGamecache,", ",~missionKey,")"
FlushStoredMissionHint="[NATIVE] native FlushStoredMission takes gamecache whichGamecache, string missionKey returns nothing"

RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
RestoreUnitHint="[NATIVE] native RestoreUnit takes gamecache whichGamecache, string missionKey, string key, player whichPlayer, real x, real y, real facing returns unit"

InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE] native InitHashtable takes nothing returns hashtable"

SaveInteger=SaveInteger
SaveInteger="SaveInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveIntegerHint="[NATIVE] native SaveInteger takes hashtable whichHashtable, integer parentKey, integer childKey, integer value returns nothing"

SaveReal=SaveReal
SaveReal="SaveReal(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveRealHint="[NATIVE] native SaveReal takes hashtable whichHashtable, integer parentKey, integer childKey, real value returns nothing"

SaveBoolean=SaveBoolean
SaveBoolean="SaveBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveBooleanHint="[NATIVE] native SaveBoolean takes hashtable whichHashtable, integer parentKey, integer childKey, boolean value returns nothing"

SaveStr=SaveStr
SaveStr="SaveStr(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveStrHint="[NATIVE] native SaveStr takes hashtable whichHashtable, integer parentKey, integer childKey, string value returns boolean"

SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichPlayer,")"
SavePlayerHandleHint="[NATIVE] native SavePlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, player whichPlayer returns boolean"

SaveWidgetHandleUnit=SaveWidgetHandle (Unit)
SaveWidgetHandleUnit="SaveWidgetHandleUnit(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleUnitHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichWidget returns boolean"

SaveWidgetHandleItem=SaveWidgetHandle (Item)
SaveWidgetHandleItem="SaveWidgetHandleItem(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleItemHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichWidget returns boolean"

SaveWidgetHandleDestructable=SaveWidgetHandle (Destructable)
SaveWidgetHandleDestructable="SaveWidgetHandleDestructable(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleDestructableHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichWidget returns boolean"

SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE] native SaveDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichDestructable returns boolean"

SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItem,")"
SaveItemHandleHint="[NATIVE] native SaveItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichItem returns boolean"

SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnit,")"
SaveUnitHandleHint="[NATIVE] native SaveUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichUnit returns boolean"

SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAbility,")"
SaveAbilityHandleHint="[NATIVE] native SaveAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ability whichAbility returns boolean"

SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimer,")"
SaveTimerHandleHint="[NATIVE] native SaveTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timer whichTimer returns boolean"

SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE] native SaveTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trigger whichTrigger returns boolean"

SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE] native SaveTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean"

SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE] native SaveTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean"

SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE] native SaveTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey, event whichEvent returns boolean"

SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichForce,")"
SaveForceHandleHint="[NATIVE] native SaveForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey, force whichForce returns boolean"

SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichGroup,")"
SaveGroupHandleHint="[NATIVE] native SaveGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey, group whichGroup returns boolean"

SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLocation,")"
SaveLocationHandleHint="[NATIVE] native SaveLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey, location whichLocation returns boolean"

SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRect,")"
SaveRectHandleHint="[NATIVE] native SaveRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, rect whichRect returns boolean"

SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE] native SaveBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean"

SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichSound,")"
SaveSoundHandleHint="[NATIVE] native SaveSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sound whichSound returns boolean"

SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEffect,")"
SaveEffectHandleHint="[NATIVE] native SaveEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, effect whichEffect returns boolean"

SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE] native SaveUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean"

SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE] native SaveItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, itempool whichItempool returns boolean"

SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuest,")"
SaveQuestHandleHint="[NATIVE] native SaveQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey, quest whichQuest returns boolean"

SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE] native SaveQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, questitem whichQuestitem returns boolean"

SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE] native SaveDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean"

SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE] native SaveTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean"

SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE] native SaveLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean"

SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE] native SaveMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean"

SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE] native SaveMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean"

SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE] native SaveTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trackable whichTrackable returns boolean"

SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDialog,")"
SaveDialogHandleHint="[NATIVE] native SaveDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, dialog whichDialog returns boolean"

SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichButton,")"
SaveButtonHandleHint="[NATIVE] native SaveButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey, button whichButton returns boolean"

SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE] native SaveTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey, texttag whichTexttag returns boolean"

SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLightning,")"
SaveLightningHandleHint="[NATIVE] native SaveLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey, lightning whichLightning returns boolean"

SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichImage,")"
SaveImageHandleHint="[NATIVE] native SaveImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, image whichImage returns boolean"

SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE] native SaveUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean"

SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRegion,")"
SaveRegionHandleHint="[NATIVE] native SaveRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, region whichRegion returns boolean"

SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogState,")"
SaveFogStateHandleHint="[NATIVE] native SaveFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogstate whichFogState returns boolean"

SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE] native SaveFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean"

SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAgent,")"
SaveAgentHandleHint="[NATIVE] native SaveAgentHandle takes hashtable whichHashtable, integer parentKey, integer childKey, agent whichAgent returns boolean"

SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE] native SaveHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, hashtable whichHashtable returns boolean"

LoadInteger=LoadInteger
LoadInteger="LoadInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadIntegerHint="[NATIVE] native LoadInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns integer"

LoadReal=LoadReal
LoadReal="LoadReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRealHint="[NATIVE] native LoadReal takes hashtable whichHashtable, integer parentKey, integer childKey returns real"

LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanHint="[NATIVE] native LoadBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

LoadStr=LoadStr
LoadStr="LoadStr(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadStrHint="[NATIVE] native LoadStr takes hashtable whichHashtable, integer parentKey, integer childKey returns string"

LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadPlayerHandleHint="[NATIVE] native LoadPlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns player"

LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWidgetHandleHint="[NATIVE] native LoadWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns widget"

LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDestructableHandleHint="[NATIVE] native LoadDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns destructable"

LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemHandleHint="[NATIVE] native LoadItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns item"

LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitHandleHint="[NATIVE] native LoadUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unit"

LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAbilityHandleHint="[NATIVE] native LoadAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ability"

LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerHandleHint="[NATIVE] native LoadTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timer"

LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerHandleHint="[NATIVE] native LoadTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trigger"

LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE] native LoadTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggercondition"

LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerActionHandleHint="[NATIVE] native LoadTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggeraction"

LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerEventHandleHint="[NATIVE] native LoadTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns event"

LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadForceHandleHint="[NATIVE] native LoadForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns force"

LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadGroupHandleHint="[NATIVE] native LoadGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns group"

LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLocationHandleHint="[NATIVE] native LoadLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns location"

LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRectHandleHint="[NATIVE] native LoadRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns rect"

LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanExprHandleHint="[NATIVE] native LoadBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolexpr"

LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSoundHandleHint="[NATIVE] native LoadSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sound"

LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadEffectHandleHint="[NATIVE] native LoadEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns effect"

LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitPoolHandleHint="[NATIVE] native LoadUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unitpool"

LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemPoolHandleHint="[NATIVE] native LoadItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns itempool"

LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestHandleHint="[NATIVE] native LoadQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns quest"

LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestItemHandleHint="[NATIVE] native LoadQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns questitem"

LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE] native LoadDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns defeatcondition"

LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerDialogHandleHint="[NATIVE] native LoadTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timerdialog"

LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLeaderboardHandleHint="[NATIVE] native LoadLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns leaderboard"

LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardHandleHint="[NATIVE] native LoadMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboard"

LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE] native LoadMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboarditem"

LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTrackableHandleHint="[NATIVE] native LoadTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trackable"

LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDialogHandleHint="[NATIVE] native LoadDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns dialog"

LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadButtonHandleHint="[NATIVE] native LoadButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns button"

LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextTagHandleHint="[NATIVE] native LoadTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns texttag"

LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLightningHandleHint="[NATIVE] native LoadLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns lightning"

LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadImageHandleHint="[NATIVE] native LoadImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns image"

LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUbersplatHandleHint="[NATIVE] native LoadUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ubersplat"

LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRegionHandleHint="[NATIVE] native LoadRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns region"

LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogStateHandleHint="[NATIVE] native LoadFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogstate"

LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogModifierHandleHint="[NATIVE] native LoadFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogmodifier"

LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHashtableHandleHint="[NATIVE] native LoadHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns hashtable"

HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedIntegerHint="[NATIVE] native HaveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedRealHint="[NATIVE] native HaveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedBooleanHint="[NATIVE] native HaveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedHandleHint="[NATIVE] native HaveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

RemoveSavedInteger=RemoveSavedInteger
RemoveSavedInteger="RemoveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedIntegerHint="[NATIVE] native RemoveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

RemoveSavedReal=RemoveSavedReal
RemoveSavedReal="RemoveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedRealHint="[NATIVE] native RemoveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

RemoveSavedBoolean=RemoveSavedBoolean
RemoveSavedBoolean="RemoveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedBooleanHint="[NATIVE] native RemoveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

RemoveSavedHandle=RemoveSavedHandle
RemoveSavedHandle="RemoveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedHandleHint="[NATIVE] native RemoveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

FlushParentHashtable=FlushParentHashtable
FlushParentHashtable="FlushParentHashtable(",~whichHashtable,")"
FlushParentHashtableHint="[NATIVE] native FlushParentHashtable takes hashtable whichHashtable returns nothing"

FlushChildHashtable=FlushChildHashtable
FlushChildHashtable="FlushChildHashtable(",~whichHashtable,", ",~parentKey,")"
FlushChildHashtableHint="[NATIVE] native FlushChildHashtable takes hashtable whichHashtable, integer parentKey returns nothing"

CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE] native CreateUnitPool takes nothing returns unitpool"

DestroyUnitPool=DestroyUnitPool
DestroyUnitPool="DestroyUnitPool(",~whichPool,")"
DestroyUnitPoolHint="[NATIVE] native DestroyUnitPool takes unitpool whichPool returns nothing"

UnitPoolAddUnitType=UnitPoolAddUnitType
UnitPoolAddUnitType="UnitPoolAddUnitType(",~whichPool,", ",~unitTypeId,", ",~weight,")"
UnitPoolAddUnitTypeHint="[NATIVE] native UnitPoolAddUnitType takes unitpool whichPool, integer unitTypeId, real weight returns nothing"

UnitPoolRemoveUnitType=UnitPoolRemoveUnitType
UnitPoolRemoveUnitType="UnitPoolRemoveUnitType(",~whichPool,", ",~unitTypeId,")"
UnitPoolRemoveUnitTypeHint="[NATIVE] native UnitPoolRemoveUnitType takes unitpool whichPool, integer unitTypeId returns nothing"

PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(",~whichPool,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
PlaceRandomUnitHint="[NATIVE] native PlaceRandomUnit takes unitpool whichPool, player whichPlayer, real x, real y, real facing returns unit"

CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE] native CreateItemPool takes nothing returns itempool"

DestroyItemPool=DestroyItemPool
DestroyItemPool="DestroyItemPool(",~whichItemPool,")"
DestroyItemPoolHint="[NATIVE] native DestroyItemPool takes itempool whichItemPool returns nothing"

ItemPoolAddItemType=ItemPoolAddItemType
ItemPoolAddItemType="ItemPoolAddItemType(",~whichItemPool,", ",~itemTypeId,", ",~weight,")"
ItemPoolAddItemTypeHint="[NATIVE] native ItemPoolAddItemType takes itempool whichItemPool, integer itemTypeId, real weight returns nothing"

ItemPoolRemoveItemType=ItemPoolRemoveItemType
ItemPoolRemoveItemType="ItemPoolRemoveItemType(",~whichItemPool,", ",~itemTypeId,")"
ItemPoolRemoveItemTypeHint="[NATIVE] native ItemPoolRemoveItemType takes itempool whichItemPool, integer itemTypeId returns nothing"

PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(",~whichItemPool,", ",~x,", ",~y,")"
PlaceRandomItemHint="[NATIVE] native PlaceRandomItem takes itempool whichItemPool, real x, real y returns item"

ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(",~level,")"
ChooseRandomCreepHint="[NATIVE] native ChooseRandomCreep takes integer level returns integer"

ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE] native ChooseRandomNPBuilding takes nothing returns integer"

ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(",~level,")"
ChooseRandomItemHint="[NATIVE] native ChooseRandomItem takes integer level returns integer"

ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(",~whichType,", ",~level,")"
ChooseRandomItemExHint="[NATIVE] native ChooseRandomItemEx takes itemtype whichType, integer level returns integer"

SetRandomSeed=SetRandomSeed
SetRandomSeed="SetRandomSeed(",~seed,")"
SetRandomSeedHint="[NATIVE] native SetRandomSeed takes integer seed returns nothing"

SetTerrainFog=SetTerrainFog
SetTerrainFog="SetTerrainFog(",~a,", ",~b,", ",~c,", ",~d,", ",~e,")"
SetTerrainFogHint="[NATIVE] native SetTerrainFog takes real a, real b, real c, real d, real e returns nothing"

ResetTerrainFog=ResetTerrainFog
ResetTerrainFog="ResetTerrainFog(",")"
ResetTerrainFogHint="[NATIVE] native ResetTerrainFog takes nothing returns nothing"

SetUnitFog=SetUnitFog
SetUnitFog="SetUnitFog(",~a,", ",~b,", ",~c,", ",~d,", ",~e,")"
SetUnitFogHint="[NATIVE] native SetUnitFog takes real a, real b, real c, real d, real e returns nothing"

SetTerrainFogEx=SetTerrainFogEx
SetTerrainFogEx="SetTerrainFogEx(",~style,", ",~zstart,", ",~zend,", ",~density,", ",~red,", ",~green,", ",~blue,")"
SetTerrainFogExHint="[NATIVE] native SetTerrainFogEx takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing"

DisplayTimedTextFromPlayer=DisplayTimedTextFromPlayer
DisplayTimedTextFromPlayer="DisplayTimedTextFromPlayer(",~toPlayer,", ",~x,", ",~y,", ",~duration,", ",~message,")"
DisplayTimedTextFromPlayerHint="[NATIVE] native DisplayTimedTextFromPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing"

ClearTextMessages=ClearTextMessages
ClearTextMessages="ClearTextMessages(",")"
ClearTextMessagesHint="[NATIVE] native ClearTextMessages takes nothing returns nothing"

SetDayNightModels=SetDayNightModels
SetDayNightModels="SetDayNightModels(",~terrainDNCFile,", ",~unitDNCFile,")"
SetDayNightModelsHint="[NATIVE] native SetDayNightModels takes string terrainDNCFile, string unitDNCFile returns nothing"

EnableUserControl=EnableUserControl
EnableUserControl="EnableUserControl(",~b,")"
EnableUserControlHint="[NATIVE] native EnableUserControl takes boolean b returns nothing"

SuspendTimeOfDay=SuspendTimeOfDay
SuspendTimeOfDay="SuspendTimeOfDay(",~b,")"
SuspendTimeOfDayHint="[NATIVE] native SuspendTimeOfDay takes boolean b returns nothing"

SetTimeOfDayScale=SetTimeOfDayScale
SetTimeOfDayScale="SetTimeOfDayScale(",~r,")"
SetTimeOfDayScaleHint="[NATIVE] native SetTimeOfDayScale takes real r returns nothing"

ShowInterface=ShowInterface
ShowInterface="ShowInterface(",~flag,", ",~fadeDuration,")"
ShowInterfaceHint="[NATIVE] native ShowInterface takes boolean flag, real fadeDuration returns nothing"

PauseGame=PauseGame
PauseGame="PauseGame(",~flag,")"
PauseGameHint="[NATIVE] native PauseGame takes boolean flag returns nothing"

UnitAddIndicator=UnitAddIndicator
UnitAddIndicator="UnitAddIndicator(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
UnitAddIndicatorHint="[NATIVE] native UnitAddIndicator takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing"

AddIndicatorUnit=AddIndicator (Unit)
AddIndicatorUnit="AddIndicatorUnit(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
AddIndicatorUnitHint="[NATIVE] native AddIndicator takes unit whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

AddIndicatorItem=AddIndicator (Item)
AddIndicatorItem="AddIndicatorItem(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
AddIndicatorItemHint="[NATIVE] native AddIndicator takes item whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

AddIndicatorDestructable=AddIndicator (Destructable)
AddIndicatorDestructable="AddIndicatorDestructable(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
AddIndicatorDestructableHint="[NATIVE] native AddIndicator takes destructable whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

PingMinimap=PingMinimap
PingMinimap="PingMinimap(",~x,", ",~y,", ",~duration,")"
PingMinimapHint="[NATIVE] native PingMinimap takes real x, real y, real duration returns nothing"

PingMinimapEx=PingMinimapEx
PingMinimapEx="PingMinimapEx(",~x,", ",~y,", ",~duration,", ",~red,", ",~green,", ",~blue,", ",~extraEffects,")"
PingMinimapExHint="[NATIVE] native PingMinimapEx takes real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects returns nothing"

EnableOcclusion=EnableOcclusion
EnableOcclusion="EnableOcclusion(",~flag,")"
EnableOcclusionHint="[NATIVE] native EnableOcclusion takes boolean flag returns nothing"

SetIntroShotText=SetIntroShotText
SetIntroShotText="SetIntroShotText(",~introText,")"
SetIntroShotTextHint="[NATIVE] native SetIntroShotText takes string introText returns nothing"

SetIntroShotModel=SetIntroShotModel
SetIntroShotModel="SetIntroShotModel(",~introModelPath,")"
SetIntroShotModelHint="[NATIVE] native SetIntroShotModel takes string introModelPath returns nothing"

EnableWorldFogBoundary=EnableWorldFogBoundary
EnableWorldFogBoundary="EnableWorldFogBoundary(",~b,")"
EnableWorldFogBoundaryHint="[NATIVE] native EnableWorldFogBoundary takes boolean b returns nothing"

PlayModelCinematic=PlayModelCinematic
PlayModelCinematic="PlayModelCinematic(",~modelName,")"
PlayModelCinematicHint="[NATIVE] native PlayModelCinematic takes string modelName returns nothing"

ForceUIKey=ForceUIKey
ForceUIKey="ForceUIKey(",~key,")"
ForceUIKeyHint="[NATIVE] native ForceUIKey takes string key returns nothing"

ForceUICancel=ForceUICancel
ForceUICancel="ForceUICancel(",")"
ForceUICancelHint="[NATIVE] native ForceUICancel takes nothing returns nothing"

DisplayLoadDialog=DisplayLoadDialog
DisplayLoadDialog="DisplayLoadDialog(",")"
DisplayLoadDialogHint="[NATIVE] native DisplayLoadDialog takes nothing returns nothing"

CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE] native CreateTextTag takes nothing returns texttag"

DestroyTextTag=DestroyTextTag
DestroyTextTag="DestroyTextTag(",~whichTextTag,")"
DestroyTextTagHint="[NATIVE] native DestroyTextTag takes texttag whichTextTag returns nothing"

SetTextTagText=SetTextTagText
SetTextTagText="SetTextTagText(",~whichTextTag,", ",~s,", ",~height,")"
SetTextTagTextHint="[NATIVE] native SetTextTagText takes texttag whichTextTag, string s, real height returns nothing"

SetTextTagPos=SetTextTagPos
SetTextTagPos="SetTextTagPos(",~whichTextTag,", ",~x,", ",~y,", ",~heightOffset,")"
SetTextTagPosHint="[NATIVE] native SetTextTagPos takes texttag whichTextTag, real x, real y, real heightOffset returns nothing"

SetTextTagPosUnit=SetTextTagPosUnit
SetTextTagPosUnit="SetTextTagPosUnit(",~whichTextTag,", ",~whichUnit,", ",~heightOffset,")"
SetTextTagPosUnitHint="[NATIVE] native SetTextTagPosUnit takes texttag whichTextTag, unit whichUnit, real heightOffset returns nothing"

SetTextTagColor=SetTextTagColor
SetTextTagColor="SetTextTagColor(",~whichTextTag,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetTextTagColorHint="[NATIVE] native SetTextTagColor takes texttag whichTextTag, integer red, integer green, integer blue, integer alpha returns nothing"

SetTextTagVelocity=SetTextTagVelocity
SetTextTagVelocity="SetTextTagVelocity(",~whichTextTag,", ",~xvel,", ",~yvel,")"
SetTextTagVelocityHint="[NATIVE] native SetTextTagVelocity takes texttag whichTextTag, real xvel, real yvel returns nothing"

SetTextTagVisibility=SetTextTagVisibility
SetTextTagVisibility="SetTextTagVisibility(",~whichTextTag,", ",~flag,")"
SetTextTagVisibilityHint="[NATIVE] native SetTextTagVisibility takes texttag whichTextTag, boolean flag returns nothing"

SetTextTagSuspended=SetTextTagSuspended
SetTextTagSuspended="SetTextTagSuspended(",~whichTextTag,", ",~flag,")"
SetTextTagSuspendedHint="[NATIVE] native SetTextTagSuspended takes texttag whichTextTag, boolean flag returns nothing"

SetTextTagPermanent=SetTextTagPermanent
SetTextTagPermanent="SetTextTagPermanent(",~whichTextTag,", ",~flag,")"
SetTextTagPermanentHint="[NATIVE] native SetTextTagPermanent takes texttag whichTextTag, boolean flag returns nothing"

SetTextTagAge=SetTextTagAge
SetTextTagAge="SetTextTagAge(",~whichTextTag,", ",~age,")"
SetTextTagAgeHint="[NATIVE] native SetTextTagAge takes texttag whichTextTag, real age returns nothing"

SetTextTagLifespan=SetTextTagLifespan
SetTextTagLifespan="SetTextTagLifespan(",~whichTextTag,", ",~lifespan,")"
SetTextTagLifespanHint="[NATIVE] native SetTextTagLifespan takes texttag whichTextTag, real lifespan returns nothing"

SetTextTagFadepoint=SetTextTagFadepoint
SetTextTagFadepoint="SetTextTagFadepoint(",~whichTextTag,", ",~fadepoint,")"
SetTextTagFadepointHint="[NATIVE] native SetTextTagFadepoint takes texttag whichTextTag, real fadepoint returns nothing"

CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE] native CreateQuest takes nothing returns quest"

DestroyQuest=DestroyQuest
DestroyQuest="DestroyQuest(",~whichQuest,")"
DestroyQuestHint="[NATIVE] native DestroyQuest takes quest whichQuest returns nothing"

QuestSetTitle=QuestSetTitle
QuestSetTitle="QuestSetTitle(",~whichQuest,", ",~title,")"
QuestSetTitleHint="[NATIVE] native QuestSetTitle takes quest whichQuest, string title returns nothing"

QuestSetDescription=QuestSetDescription
QuestSetDescription="QuestSetDescription(",~whichQuest,", ",~description,")"
QuestSetDescriptionHint="[NATIVE] native QuestSetDescription takes quest whichQuest, string description returns nothing"

QuestSetIconPath=QuestSetIconPath
QuestSetIconPath="QuestSetIconPath(",~whichQuest,", ",~iconPath,")"
QuestSetIconPathHint="[NATIVE] native QuestSetIconPath takes quest whichQuest, string iconPath returns nothing"

QuestSetRequired=QuestSetRequired
QuestSetRequired="QuestSetRequired(",~whichQuest,", ",~required,")"
QuestSetRequiredHint="[NATIVE] native QuestSetRequired takes quest whichQuest, boolean required returns nothing"

QuestSetCompleted=QuestSetCompleted
QuestSetCompleted="QuestSetCompleted(",~whichQuest,", ",~completed,")"
QuestSetCompletedHint="[NATIVE] native QuestSetCompleted takes quest whichQuest, boolean completed returns nothing"

QuestSetDiscovered=QuestSetDiscovered
QuestSetDiscovered="QuestSetDiscovered(",~whichQuest,", ",~discovered,")"
QuestSetDiscoveredHint="[NATIVE] native QuestSetDiscovered takes quest whichQuest, boolean discovered returns nothing"

QuestSetFailed=QuestSetFailed
QuestSetFailed="QuestSetFailed(",~whichQuest,", ",~failed,")"
QuestSetFailedHint="[NATIVE] native QuestSetFailed takes quest whichQuest, boolean failed returns nothing"

QuestSetEnabled=QuestSetEnabled
QuestSetEnabled="QuestSetEnabled(",~whichQuest,", ",~enabled,")"
QuestSetEnabledHint="[NATIVE] native QuestSetEnabled takes quest whichQuest, boolean enabled returns nothing"

QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(",~whichQuest,")"
QuestCreateItemHint="[NATIVE] native QuestCreateItem takes quest whichQuest returns questitem"

QuestItemSetDescription=QuestItemSetDescription
QuestItemSetDescription="QuestItemSetDescription(",~whichQuestItem,", ",~description,")"
QuestItemSetDescriptionHint="[NATIVE] native QuestItemSetDescription takes questitem whichQuestItem, string description returns nothing"

QuestItemSetCompleted=QuestItemSetCompleted
QuestItemSetCompleted="QuestItemSetCompleted(",~whichQuestItem,", ",~completed,")"
QuestItemSetCompletedHint="[NATIVE] native QuestItemSetCompleted takes questitem whichQuestItem, boolean completed returns nothing"

CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE] native CreateDefeatCondition takes nothing returns defeatcondition"

DestroyDefeatCondition=DestroyDefeatCondition
DestroyDefeatCondition="DestroyDefeatCondition(",~whichCondition,")"
DestroyDefeatConditionHint="[NATIVE] native DestroyDefeatCondition takes defeatcondition whichCondition returns nothing"

DefeatConditionSetDescription=DefeatConditionSetDescription
DefeatConditionSetDescription="DefeatConditionSetDescription(",~whichCondition,", ",~description,")"
DefeatConditionSetDescriptionHint="[NATIVE] native DefeatConditionSetDescription takes defeatcondition whichCondition, string description returns nothing"

FlashQuestDialogButton=FlashQuestDialogButton
FlashQuestDialogButton="FlashQuestDialogButton(",")"
FlashQuestDialogButtonHint="[NATIVE] native FlashQuestDialogButton takes nothing returns nothing"

ForceQuestDialogUpdate=ForceQuestDialogUpdate
ForceQuestDialogUpdate="ForceQuestDialogUpdate(",")"
ForceQuestDialogUpdateHint="[NATIVE] native ForceQuestDialogUpdate takes nothing returns nothing"

CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(",~whichTimer,")"
CreateTimerDialogHint="[NATIVE] native CreateTimerDialog takes timer whichTimer returns timerdialog"

DestroyTimerDialog=DestroyTimerDialog
DestroyTimerDialog="DestroyTimerDialog(",~whichDialog,")"
DestroyTimerDialogHint="[NATIVE] native DestroyTimerDialog takes timerdialog whichDialog returns nothing"

TimerDialogSetTitle=TimerDialogSetTitle
TimerDialogSetTitle="TimerDialogSetTitle(",~whichDialog,", ",~title,")"
TimerDialogSetTitleHint="[NATIVE] native TimerDialogSetTitle takes timerdialog whichDialog, string title returns nothing"

TimerDialogSetTitleColor=TimerDialogSetTitleColor
TimerDialogSetTitleColor="TimerDialogSetTitleColor(",~whichDialog,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
TimerDialogSetTitleColorHint="[NATIVE] native TimerDialogSetTitleColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing"

TimerDialogSetTimeColor=TimerDialogSetTimeColor
TimerDialogSetTimeColor="TimerDialogSetTimeColor(",~whichDialog,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
TimerDialogSetTimeColorHint="[NATIVE] native TimerDialogSetTimeColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing"

TimerDialogSetSpeed=TimerDialogSetSpeed
TimerDialogSetSpeed="TimerDialogSetSpeed(",~whichDialog,", ",~speedMultFactor,")"
TimerDialogSetSpeedHint="[NATIVE] native TimerDialogSetSpeed takes timerdialog whichDialog, real speedMultFactor returns nothing"

TimerDialogDisplay=TimerDialogDisplay
TimerDialogDisplay="TimerDialogDisplay(",~whichDialog,", ",~display,")"
TimerDialogDisplayHint="[NATIVE] native TimerDialogDisplay takes timerdialog whichDialog, boolean display returns nothing"

TimerDialogSetRealTimeRemaining=TimerDialogSetRealTimeRemaining
TimerDialogSetRealTimeRemaining="TimerDialogSetRealTimeRemaining(",~whichDialog,", ",~timeRemaining,")"
TimerDialogSetRealTimeRemainingHint="[NATIVE] native TimerDialogSetRealTimeRemaining takes timerdialog whichDialog, real timeRemaining returns nothing"

CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE] native CreateLeaderboard takes nothing returns leaderboard"

DestroyLeaderboard=DestroyLeaderboard
DestroyLeaderboard="DestroyLeaderboard(",~whichLeaderboard,")"
DestroyLeaderboardHint="[NATIVE] native DestroyLeaderboard takes leaderboard whichLeaderboard returns nothing"

LeaderboardDisplay=LeaderboardDisplay
LeaderboardDisplay="LeaderboardDisplay(",~whichLeaderboard,", ",~show,")"
LeaderboardDisplayHint="[NATIVE] native LeaderboardDisplay takes leaderboard whichLeaderboard, boolean show returns nothing"

LeaderboardGetItemCount=LeaderboardGetItemCount
LeaderboardGetItemCount="LeaderboardGetItemCount(",~whichLeaderboard,")"
LeaderboardGetItemCountHint="[NATIVE] native LeaderboardGetItemCount takes leaderboard whichLeaderboard returns integer"

LeaderboardSetSizeByItemCount=LeaderboardSetSizeByItemCount
LeaderboardSetSizeByItemCount="LeaderboardSetSizeByItemCount(",~whichLeaderboard,", ",~count,")"
LeaderboardSetSizeByItemCountHint="[NATIVE] native LeaderboardSetSizeByItemCount takes leaderboard whichLeaderboard, integer count returns nothing"

LeaderboardAddItem=LeaderboardAddItem
LeaderboardAddItem="LeaderboardAddItem(",~whichLeaderboard,", ",~label,", ",~value,", ",~whichPlayer,")"
LeaderboardAddItemHint="[NATIVE] native LeaderboardAddItem takes leaderboard whichLeaderboard, string label, integer value, player whichPlayer returns nothing"

LeaderboardRemoveItem=LeaderboardRemoveItem
LeaderboardRemoveItem="LeaderboardRemoveItem(",~whichLeaderboard,", ",~index,")"
LeaderboardRemoveItemHint="[NATIVE] native LeaderboardRemoveItem takes leaderboard whichLeaderboard, integer index returns nothing"

LeaderboardRemovePlayerItem=LeaderboardRemovePlayerItem
LeaderboardRemovePlayerItem="LeaderboardRemovePlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardRemovePlayerItemHint="[NATIVE] native LeaderboardRemovePlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns nothing"

LeaderboardClear=LeaderboardClear
LeaderboardClear="LeaderboardClear(",~whichLeaderboard,")"
LeaderboardClearHint="[NATIVE] native LeaderboardClear takes leaderboard whichLeaderboard returns nothing"

LeaderboardSortItemsByValue=LeaderboardSortItemsByValue
LeaderboardSortItemsByValue="LeaderboardSortItemsByValue(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByValueHint="[NATIVE] native LeaderboardSortItemsByValue takes leaderboard whichLeaderboard, boolean ascending returns nothing"

LeaderboardSortItemsByPlayer=LeaderboardSortItemsByPlayer
LeaderboardSortItemsByPlayer="LeaderboardSortItemsByPlayer(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByPlayerHint="[NATIVE] native LeaderboardSortItemsByPlayer takes leaderboard whichLeaderboard, boolean ascending returns nothing"

LeaderboardSortItemsByLabel=LeaderboardSortItemsByLabel
LeaderboardSortItemsByLabel="LeaderboardSortItemsByLabel(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByLabelHint="[NATIVE] native LeaderboardSortItemsByLabel takes leaderboard whichLeaderboard, boolean ascending returns nothing"

LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardHasPlayerItemHint="[NATIVE] native LeaderboardHasPlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns boolean"

LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardGetPlayerIndexHint="[NATIVE] native LeaderboardGetPlayerIndex takes leaderboard whichLeaderboard, player whichPlayer returns integer"

LeaderboardSetLabel=LeaderboardSetLabel
LeaderboardSetLabel="LeaderboardSetLabel(",~whichLeaderboard,", ",~label,")"
LeaderboardSetLabelHint="[NATIVE] native LeaderboardSetLabel takes leaderboard whichLeaderboard, string label returns nothing"

LeaderboardGetLabelText=LeaderboardGetLabelText
LeaderboardGetLabelText="LeaderboardGetLabelText(",~whichLeaderboard,")"
LeaderboardGetLabelTextHint="[NATIVE] native LeaderboardGetLabelText takes leaderboard whichLeaderboard returns string"

PlayerSetLeaderboard=PlayerSetLeaderboard
PlayerSetLeaderboard="PlayerSetLeaderboard(",~toPlayer,", ",~whichLeaderboard,")"
PlayerSetLeaderboardHint="[NATIVE] native PlayerSetLeaderboard takes player toPlayer, leaderboard whichLeaderboard returns nothing"

PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(",~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE] native PlayerGetLeaderboard takes player toPlayer returns leaderboard"

LeaderboardSetLabelColor=LeaderboardSetLabelColor
LeaderboardSetLabelColor="LeaderboardSetLabelColor(",~whichLeaderboard,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetLabelColorHint="[NATIVE] native LeaderboardSetLabelColor takes leaderboard whichLeaderboard, integer red, integer green, integer blue, integer alpha returns nothing"

LeaderboardSetValueColor=LeaderboardSetValueColor
LeaderboardSetValueColor="LeaderboardSetValueColor(",~whichLeaderboard,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetValueColorHint="[NATIVE] native LeaderboardSetValueColor takes leaderboard whichLeaderboard, integer red, integer green, integer blue, integer alpha returns nothing"

LeaderboardSetStyle=LeaderboardSetStyle
LeaderboardSetStyle="LeaderboardSetStyle(",~whichLeaderboard,", ",~showLabel,", ",~showNames,", ",~showValues,", ",~showIcons,")"
LeaderboardSetStyleHint="[NATIVE] native LeaderboardSetStyle takes leaderboard whichLeaderboard, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing"

LeaderboardSetItemValue=LeaderboardSetItemValue
LeaderboardSetItemValue="LeaderboardSetItemValue(",~whichLeaderboard,", ",~whichItem,", ",~val,")"
LeaderboardSetItemValueHint="[NATIVE] native LeaderboardSetItemValue takes leaderboard whichLeaderboard, integer whichItem, integer val returns nothing"

LeaderboardSetItemLabel=LeaderboardSetItemLabel
LeaderboardSetItemLabel="LeaderboardSetItemLabel(",~whichLeaderboard,", ",~whichItem,", ",~val,")"
LeaderboardSetItemLabelHint="[NATIVE] native LeaderboardSetItemLabel takes leaderboard whichLeaderboard, integer whichItem, string val returns nothing"

LeaderboardSetItemStyle=LeaderboardSetItemStyle
LeaderboardSetItemStyle="LeaderboardSetItemStyle(",~whichLeaderboard,", ",~whichItem,", ",~showLabel,", ",~showValue,", ",~showIcon,")"
LeaderboardSetItemStyleHint="[NATIVE] native LeaderboardSetItemStyle takes leaderboard whichLeaderboard, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon returns nothing"

LeaderboardSetItemLabelColor=LeaderboardSetItemLabelColor
LeaderboardSetItemLabelColor="LeaderboardSetItemLabelColor(",~whichLeaderboard,", ",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetItemLabelColorHint="[NATIVE] native LeaderboardSetItemLabelColor takes leaderboard whichLeaderboard, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing"

LeaderboardSetItemValueColor=LeaderboardSetItemValueColor
LeaderboardSetItemValueColor="LeaderboardSetItemValueColor(",~whichLeaderboard,", ",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetItemValueColorHint="[NATIVE] native LeaderboardSetItemValueColor takes leaderboard whichLeaderboard, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing"

CreateMultiboard=CreateMultiboard
CreateMultiboard="CreateMultiboard(",")"
CreateMultiboardHint="[NATIVE] native CreateMultiboard takes nothing returns multiboard"

MultiboardGetTitleText=MultiboardGetTitleText
MultiboardGetTitleText="MultiboardGetTitleText(",~whichMultiboard,")"
MultiboardGetTitleTextHint="[NATIVE] native MultiboardGetTitleText takes multiboard whichMultiboard returns string"

MultiboardGetRowCount=MultiboardGetRowCount
MultiboardGetRowCount="MultiboardGetRowCount(",~whichMultiboard,")"
MultiboardGetRowCountHint="[NATIVE] native MultiboardGetRowCount takes multiboard whichMultiboard returns integer"

MultiboardGetColumnCount=MultiboardGetColumnCount
MultiboardGetColumnCount="MultiboardGetColumnCount(",~whichMultiboard,")"
MultiboardGetColumnCountHint="[NATIVE] native MultiboardGetColumnCount takes multiboard whichMultiboard returns integer"

MultiboardGetItem=MultiboardGetItem
MultiboardGetItem="MultiboardGetItem(",~whichMultiboard,", ",~row,", ",~column,")"
MultiboardGetItemHint="[NATIVE] native MultiboardGetItem takes multiboard whichMultiboard, integer row, integer column returns multiboarditem"

MultiboardSuppressDisplay=MultiboardSuppressDisplay
MultiboardSuppressDisplay="MultiboardSuppressDisplay(",~flag,")"
MultiboardSuppressDisplayHint="[NATIVE] native MultiboardSuppressDisplay takes boolean flag returns nothing"

SetCameraPosition=SetCameraPosition
SetCameraPosition="SetCameraPosition(",~x,", ",~y,")"
SetCameraPositionHint="[NATIVE] native SetCameraPosition takes real x, real y returns nothing"

SetCameraQuickPosition=SetCameraQuickPosition
SetCameraQuickPosition="SetCameraQuickPosition(",~x,", ",~y,")"
SetCameraQuickPositionHint="[NATIVE] native SetCameraQuickPosition takes real x, real y returns nothing"

SetCameraBounds=SetCameraBounds
SetCameraBounds="SetCameraBounds(",~x1,", ",~y1,", ",~x2,", ",~y2,", ",~x3,", ",~y3,", ",~x4,", ",~y4,")"
SetCameraBoundsHint="[NATIVE] native SetCameraBounds takes real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4 returns nothing"

StopCamera=StopCamera
StopCamera="StopCamera(",")"
StopCameraHint="[NATIVE] native StopCamera takes nothing returns nothing"

SetCinematicCamera=SetCinematicCamera
SetCinematicCamera="SetCinematicCamera(",~cameraModelFile,")"
SetCinematicCameraHint="[NATIVE] native SetCinematicCamera takes string cameraModelFile returns nothing"

SetCameraRotateMode=SetCameraRotateMode
SetCameraRotateMode="SetCameraRotateMode(",~x,", ",~y,", ",~radiansToSweep,", ",~duration,")"
SetCameraRotateModeHint="[NATIVE] native SetCameraRotateMode takes real x, real y, real radiansToSweep, real duration returns nothing"

SetCameraField=SetCameraField
SetCameraField="SetCameraField(",~whichField,", ",~value,", ",~duration,")"
SetCameraFieldHint="[NATIVE] native SetCameraField takes camerafield whichField, real value, real duration returns nothing"

AdjustCameraField=AdjustCameraField
AdjustCameraField="AdjustCameraField(",~whichField,", ",~offset,", ",~duration,")"
AdjustCameraFieldHint="[NATIVE] native AdjustCameraField takes camerafield whichField, real offset, real duration returns nothing"

SetCameraTargetController=SetCameraTargetController
SetCameraTargetController="SetCameraTargetController(",~whichUnit,", ",~xoffset,", ",~yoffset,", ",~inheritOrientation,")"
SetCameraTargetControllerHint="[NATIVE] native SetCameraTargetController takes unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing"

SetCameraOrientController=SetCameraOrientController
SetCameraOrientController="SetCameraOrientController(",~whichUnit,", ",~xoffset,", ",~yoffset,")"
SetCameraOrientControllerHint="[NATIVE] native SetCameraOrientController takes unit whichUnit, real xoffset, real yoffset returns nothing"

CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE] native CreateCameraSetup takes nothing returns camerasetup"

CameraSetupSetField=CameraSetupSetField
CameraSetupSetField="CameraSetupSetField(",~whichCameraSetup,", ",~whichField,", ",~value,", ",~duration,")"
CameraSetupSetFieldHint="[NATIVE] native CameraSetupSetField takes camerasetup whichCameraSetup, camerafield whichField, real value, real duration returns nothing"

CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(",~whichCameraSetup,", ",~whichField,")"
CameraSetupGetFieldHint="[NATIVE] native CameraSetupGetField takes camerasetup whichCameraSetup, camerafield whichField returns real"

CameraSetupSetDestPosition=CameraSetupSetDestPosition
CameraSetupSetDestPosition="CameraSetupSetDestPosition(",~whichCameraSetup,", ",~x,", ",~y,", ",~duration,")"
CameraSetupSetDestPositionHint="[NATIVE] native CameraSetupSetDestPosition takes camerasetup whichCameraSetup, real x, real y, real duration returns nothing"

CameraSetupGetDestPositionLoc=CameraSetupGetDestPositionLoc
CameraSetupGetDestPositionLoc="CameraSetupGetDestPositionLoc(",~whichCameraSetup,")"
CameraSetupGetDestPositionLocHint="[NATIVE] native CameraSetupGetDestPositionLoc takes camerasetup whichCameraSetup returns location"

CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(",~whichCameraSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE] native CameraSetupGetDestPositionX takes camerasetup whichCameraSetup returns real"

CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(",~whichCameraSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE] native CameraSetupGetDestPositionY takes camerasetup whichCameraSetup returns real"

CameraSetupApply=CameraSetupApply
CameraSetupApply="CameraSetupApply(",~whichCameraSetup,", ",~doPan,", ",~panTimed,")"
CameraSetupApplyHint="[NATIVE] native CameraSetupApply takes camerasetup whichCameraSetup, boolean doPan, boolean panTimed returns nothing"

CameraSetupApplyWithZ=CameraSetupApplyWithZ
CameraSetupApplyWithZ="CameraSetupApplyWithZ(",~whichCameraSetup,", ",~zDestOffset,")"
CameraSetupApplyWithZHint="[NATIVE] native CameraSetupApplyWithZ takes camerasetup whichCameraSetup, real zDestOffset returns nothing"

CameraSetupApplyForceDuration=CameraSetupApplyForceDuration
CameraSetupApplyForceDuration="CameraSetupApplyForceDuration(",~whichCameraSetup,", ",~doPan,", ",~forceDuration,")"
CameraSetupApplyForceDurationHint="[NATIVE] native CameraSetupApplyForceDuration takes camerasetup whichCameraSetup, boolean doPan, real forceDuration returns nothing"

CameraSetupApplyForceDurationWithZ=CameraSetupApplyForceDurationWithZ
CameraSetupApplyForceDurationWithZ="CameraSetupApplyForceDurationWithZ(",~whichCameraSetup,", ",~zDestOffset,", ",~forceDuration,")"
CameraSetupApplyForceDurationWithZHint="[NATIVE] native CameraSetupApplyForceDurationWithZ takes camerasetup whichCameraSetup, real zDestOffset, real forceDuration returns nothing"

CameraSetTargetNoise=CameraSetTargetNoise
CameraSetTargetNoise="CameraSetTargetNoise(",~mag,", ",~velocity,")"
CameraSetTargetNoiseHint="[NATIVE] native CameraSetTargetNoise takes real mag, real velocity returns nothing"

CameraSetSourceNoise=CameraSetSourceNoise
CameraSetSourceNoise="CameraSetSourceNoise(",~mag,", ",~velocity,")"
CameraSetSourceNoiseHint="[NATIVE] native CameraSetSourceNoise takes real mag, real velocity returns nothing"

CameraSetTargetNoiseEx=CameraSetTargetNoiseEx
CameraSetTargetNoiseEx="CameraSetTargetNoiseEx(",~mag,", ",~velocity,", ",~vertOnly,")"
CameraSetTargetNoiseExHint="[NATIVE] native CameraSetTargetNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing"

CameraSetSourceNoiseEx=CameraSetSourceNoiseEx
CameraSetSourceNoiseEx="CameraSetSourceNoiseEx(",~mag,", ",~velocity,", ",~vertOnly,")"
CameraSetSourceNoiseExHint="[NATIVE] native CameraSetSourceNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing"

CameraSetSmoothingFactor=CameraSetSmoothingFactor
CameraSetSmoothingFactor="CameraSetSmoothingFactor(",~factor,")"
CameraSetSmoothingFactorHint="[NATIVE] native CameraSetSmoothingFactor takes real factor returns nothing"

SetCineFilterTexture=SetCineFilterTexture
SetCineFilterTexture="SetCineFilterTexture(",~filename,")"
SetCineFilterTextureHint="[NATIVE] native SetCineFilterTexture takes string filename returns nothing"

SetCineFilterBlendMode=SetCineFilterBlendMode
SetCineFilterBlendMode="SetCineFilterBlendMode(",~whichMode,")"
SetCineFilterBlendModeHint="[NATIVE] native SetCineFilterBlendMode takes blendmode whichMode returns nothing"

SetCineFilterTexMapFlags=SetCineFilterTexMapFlags
SetCineFilterTexMapFlags="SetCineFilterTexMapFlags(",~whichFlags,")"
SetCineFilterTexMapFlagsHint="[NATIVE] native SetCineFilterTexMapFlags takes texmapflags whichFlags returns nothing"

SetCineFilterStartUV=SetCineFilterStartUV
SetCineFilterStartUV="SetCineFilterStartUV(",~minu,", ",~minv,", ",~maxu,", ",~maxv,")"
SetCineFilterStartUVHint="[NATIVE] native SetCineFilterStartUV takes real minu, real minv, real maxu, real maxv returns nothing"

SetCineFilterEndUV=SetCineFilterEndUV
SetCineFilterEndUV="SetCineFilterEndUV(",~minu,", ",~minv,", ",~maxu,", ",~maxv,")"
SetCineFilterEndUVHint="[NATIVE] native SetCineFilterEndUV takes real minu, real minv, real maxu, real maxv returns nothing"

SetCineFilterStartColor=SetCineFilterStartColor
SetCineFilterStartColor="SetCineFilterStartColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetCineFilterStartColorHint="[NATIVE] native SetCineFilterStartColor takes integer red, integer green, integer blue, integer alpha returns nothing"

SetCineFilterEndColor=SetCineFilterEndColor
SetCineFilterEndColor="SetCineFilterEndColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetCineFilterEndColorHint="[NATIVE] native SetCineFilterEndColor takes integer red, integer green, integer blue, integer alpha returns nothing"

SetCineFilterDuration=SetCineFilterDuration
SetCineFilterDuration="SetCineFilterDuration(",~duration,")"
SetCineFilterDurationHint="[NATIVE] native SetCineFilterDuration takes real duration returns nothing"

DisplayCineFilter=DisplayCineFilter
DisplayCineFilter="DisplayCineFilter(",~flag,")"
DisplayCineFilterHint="[NATIVE] native DisplayCineFilter takes boolean flag returns nothing"

SetCinematicScene=SetCinematicScene
SetCinematicScene="SetCinematicScene(",~unitTypeId,", ",~color,", ",~speakerTitle,", ",~text,", ",~sceneDuration,", ",~voiceoverDuration,")"
SetCinematicSceneHint="[NATIVE] native SetCinematicScene takes integer unitTypeId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing"

EndCinematicScene=EndCinematicScene
EndCinematicScene="EndCinematicScene(",")"
EndCinematicSceneHint="[NATIVE] native EndCinematicScene takes nothing returns nothing"

ForceCinematicSubtitles=ForceCinematicSubtitles
ForceCinematicSubtitles="ForceCinematicSubtitles(",~flag,")"
ForceCinematicSubtitlesHint="[NATIVE] native ForceCinematicSubtitles takes boolean flag returns nothing"

NewSoundEnvironment=NewSoundEnvironment
NewSoundEnvironment="NewSoundEnvironment(",~environmentName,")"
NewSoundEnvironmentHint="[NATIVE] native NewSoundEnvironment takes string environmentName returns nothing"

CreateSound=CreateSound
CreateSound="CreateSound(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
CreateSoundHint="[NATIVE] native CreateSound takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"

CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE] native CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"

CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE] native CreateSoundFromLabel takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"

CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE] native CreateMIDISound takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"

SetSoundParamsFromLabel=SetSoundParamsFromLabel
SetSoundParamsFromLabel="SetSoundParamsFromLabel(",~soundHandle,", ",~soundLabel,")"
SetSoundParamsFromLabelHint="[NATIVE] native SetSoundParamsFromLabel takes sound soundHandle, string soundLabel returns nothing"

SetSoundDistanceCutoff=SetSoundDistanceCutoff
SetSoundDistanceCutoff="SetSoundDistanceCutoff(",~soundHandle,", ",~cutoff,")"
SetSoundDistanceCutoffHint="[NATIVE] native SetSoundDistanceCutoff takes sound soundHandle, real cutoff returns nothing"

SetSoundChannel=SetSoundChannel
SetSoundChannel="SetSoundChannel(",~soundHandle,", ",~channel,")"
SetSoundChannelHint="[NATIVE] native SetSoundChannel takes sound soundHandle, integer channel returns nothing"

SetSoundVolume=SetSoundVolume
SetSoundVolume="SetSoundVolume(",~soundHandle,", ",~volume,")"
SetSoundVolumeHint="[NATIVE] native SetSoundVolume takes sound soundHandle, integer volume returns nothing"

SetSoundPitch=SetSoundPitch
SetSoundPitch="SetSoundPitch(",~soundHandle,", ",~pitch,")"
SetSoundPitchHint="[NATIVE] native SetSoundPitch takes sound soundHandle, real pitch returns nothing"

SetSoundPlayPosition=SetSoundPlayPosition
SetSoundPlayPosition="SetSoundPlayPosition(",~soundHandle,", ",~millisecs,")"
SetSoundPlayPositionHint="[NATIVE] native SetSoundPlayPosition takes sound soundHandle, integer millisecs returns nothing"

SetSoundConeAngles=SetSoundConeAngles
SetSoundConeAngles="SetSoundConeAngles(",~soundHandle,", ",~inside,", ",~outside,", ",~outsideVolume,")"
SetSoundConeAnglesHint="[NATIVE] native SetSoundConeAngles takes sound soundHandle, real inside, real outside, integer outsideVolume returns nothing"

SetSoundConeOrientation=SetSoundConeOrientation
SetSoundConeOrientation="SetSoundConeOrientation(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundConeOrientationHint="[NATIVE] native SetSoundConeOrientation takes sound soundHandle, real x, real y, real z returns nothing"

SetSoundPosition=SetSoundPosition
SetSoundPosition="SetSoundPosition(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundPositionHint="[NATIVE] native SetSoundPosition takes sound soundHandle, real x, real y, real z returns nothing"

SetSoundVelocity=SetSoundVelocity
SetSoundVelocity="SetSoundVelocity(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundVelocityHint="[NATIVE] native SetSoundVelocity takes sound soundHandle, real x, real y, real z returns nothing"

StartSound=StartSound
StartSound="StartSound(",~soundHandle,")"
StartSoundHint="[NATIVE] native StartSound takes sound soundHandle returns nothing"

StopSound=StopSound
StopSound="StopSound(",~soundHandle,", ",~killWhenDone,", ",~fadeOut,")"
StopSoundHint="[NATIVE] native StopSound takes sound soundHandle, boolean killWhenDone, boolean fadeOut returns nothing"

KillSoundWhenDone=KillSoundWhenDone
KillSoundWhenDone="KillSoundWhenDone(",~soundHandle,")"
KillSoundWhenDoneHint="[NATIVE] native KillSoundWhenDone takes sound soundHandle returns nothing"

SetMapMusic=SetMapMusic
SetMapMusic="SetMapMusic(",~musicName,", ",~random,", ",~index,")"
SetMapMusicHint="[NATIVE] native SetMapMusic takes string musicName, boolean random, integer index returns nothing"

ClearMapMusic=ClearMapMusic
ClearMapMusic="ClearMapMusic(",")"
ClearMapMusicHint="[NATIVE] native ClearMapMusic takes nothing returns nothing"

PlayMusic=PlayMusic
PlayMusic="PlayMusic(",~musicName,")"
PlayMusicHint="[NATIVE] native PlayMusic takes string musicName returns nothing"

PlayMusicEx=PlayMusicEx
PlayMusicEx="PlayMusicEx(",~musicName,", ",~frommsecs,", ",~fadeinmsecs,")"
PlayMusicExHint="[NATIVE] native PlayMusicEx takes string musicName, integer frommsecs, integer fadeinmsecs returns nothing"

StopMusic=StopMusic
StopMusic="StopMusic(",~fadeOut,")"
StopMusicHint="[NATIVE] native StopMusic takes boolean fadeOut returns nothing"

ResumeMusic=ResumeMusic
ResumeMusic="ResumeMusic(",")"
ResumeMusicHint="[NATIVE] native ResumeMusic takes nothing returns nothing"

PlayThematicMusic=PlayThematicMusic
PlayThematicMusic="PlayThematicMusic(",~musicFileName,")"
PlayThematicMusicHint="[NATIVE] native PlayThematicMusic takes string musicFileName returns nothing"

PlayThematicMusicEx=PlayThematicMusicEx
PlayThematicMusicEx="PlayThematicMusicEx(",~musicFileName,", ",~frommsecs,")"
PlayThematicMusicExHint="[NATIVE] native PlayThematicMusicEx takes string musicFileName, integer frommsecs returns nothing"

EndThematicMusic=EndThematicMusic
EndThematicMusic="EndThematicMusic(",")"
EndThematicMusicHint="[NATIVE] native EndThematicMusic takes nothing returns nothing"

SetMusicVolume=SetMusicVolume
SetMusicVolume="SetMusicVolume(",~volume,")"
SetMusicVolumeHint="[NATIVE] native SetMusicVolume takes integer volume returns nothing"

SetMusicPlayPosition=SetMusicPlayPosition
SetMusicPlayPosition="SetMusicPlayPosition(",~millisecs,")"
SetMusicPlayPositionHint="[NATIVE] native SetMusicPlayPosition takes integer millisecs returns nothing"

SetThematicMusicPlayPosition=SetThematicMusicPlayPosition
SetThematicMusicPlayPosition="SetThematicMusicPlayPosition(",~millisecs,")"
SetThematicMusicPlayPositionHint="[NATIVE] native SetThematicMusicPlayPosition takes integer millisecs returns nothing"

SetSoundDuration=SetSoundDuration
SetSoundDuration="SetSoundDuration(",~soundHandle,", ",~duration,")"
SetSoundDurationHint="[NATIVE] native SetSoundDuration takes sound soundHandle, integer duration returns nothing"

VolumeGroupSetVolume=VolumeGroupSetVolume
VolumeGroupSetVolume="VolumeGroupSetVolume(",~vgroup,", ",~scale,")"
VolumeGroupSetVolumeHint="[NATIVE] native VolumeGroupSetVolume takes volumegroup vgroup, real scale returns nothing"

VolumeGroupReset=VolumeGroupReset
VolumeGroupReset="VolumeGroupReset(",")"
VolumeGroupResetHint="[NATIVE] native VolumeGroupReset takes nothing returns nothing"

RegisterStackedSound=RegisterStackedSound
RegisterStackedSound="RegisterStackedSound(",~soundHandle,", ",~byPosition,", ",~rectwidth,", ",~rectheight,")"
RegisterStackedSoundHint="[NATIVE] native RegisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing"

UnregisterStackedSound=UnregisterStackedSound
UnregisterStackedSound="UnregisterStackedSound(",~soundHandle,", ",~byPosition,", ",~rectwidth,", ",~rectheight,")"
UnregisterStackedSoundHint="[NATIVE] native UnregisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing"

AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(",~whichRect,", ",~effectID,")"
AddWeatherEffectHint="[NATIVE] native AddWeatherEffect takes rect whichRect, integer effectID returns weathereffect"

RemoveWeatherEffect=RemoveWeatherEffect
RemoveWeatherEffect="RemoveWeatherEffect(",~whichEffect,")"
RemoveWeatherEffectHint="[NATIVE] native RemoveWeatherEffect takes weathereffect whichEffect returns nothing"

TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~permanent,")"
TerrainDeformCraterHint="[NATIVE] native TerrainDeformCrater takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation"

TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~count,", ",~spaceWaves,", ",~timeWaves,", ",~radiusStartPct,", ",~limitNeg,")"
TerrainDeformRippleHint="[NATIVE] native TerrainDeformRipple takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation"

TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(",~x,", ",~y,", ",~dirX,", ",~dirY,", ",~distance,", ",~speed,", ",~radius,", ",~depth,", ",~trailTime,", ",~count,")"
TerrainDeformWaveHint="[NATIVE] native TerrainDeformWave takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation"

TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(",~x,", ",~y,", ",~radius,", ",~minDelta,", ",~maxDelta,", ",~duration,", ",~updateInterval,")"
TerrainDeformRandomHint="[NATIVE] native TerrainDeformRandom takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation"

TerrainDeformStop=TerrainDeformStop
TerrainDeformStop="TerrainDeformStop(",~deformation,", ",~duration,")"
TerrainDeformStopHint="[NATIVE] native TerrainDeformStop takes terraindeformation deformation, integer duration returns nothing"

AddSpecialEffect=AddSpecialEffect
AddSpecialEffect="AddSpecialEffect(",~modelName,", ",~x,", ",~y,")"
AddSpecialEffectHint="[NATIVE] native AddSpecialEffect takes string modelName, real x, real y returns effect"

AddSpecialEffectLoc=AddSpecialEffectLoc
AddSpecialEffectLoc="AddSpecialEffectLoc(",~modelName,", ",~where,")"
AddSpecialEffectLocHint="[NATIVE] native AddSpecialEffectLoc takes string modelName, location where returns effect"

AddSpecialEffectTargetUnit=AddSpecialEffectTarget (Unit)
AddSpecialEffectTargetUnit="AddSpecialEffectTargetUnit(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetUnitHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, unit targetWidget, string attachPointName returns effect"

AddSpecialEffectTargetItem=AddSpecialEffectTarget (Item)
AddSpecialEffectTargetItem="AddSpecialEffectTargetItem(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetItemHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, item targetWidget, string attachPointName returns effect"

AddSpecialEffectTargetDestructable=AddSpecialEffectTarget (Destructable)
AddSpecialEffectTargetDestructable="AddSpecialEffectTargetDestructable(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetDestructableHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, destructable targetWidget, string attachPointName returns effect"

DestroyEffect=DestroyEffect
DestroyEffect="DestroyEffect(",~whichEffect,")"
DestroyEffectHint="[NATIVE] native DestroyEffect takes effect whichEffect returns nothing"

AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(",~abilityString,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectHint="[NATIVE] native AddSpellEffect takes string abilityString, effecttype whichEffectType, real x, real y returns effect"

AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(",~abilityString,", ",~whichEffectType,", ",~where,")"
AddSpellEffectLocHint="[NATIVE] native AddSpellEffectLoc takes string abilityString, effecttype whichEffectType, location where returns effect"

AddSpellEffectById=AddSpellEffectById
AddSpellEffectById="AddSpellEffectById(",~abilityTypeId,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectByIdHint="[NATIVE] native AddSpellEffectById takes integer abilityTypeId, effecttype whichEffectType, real x, real y returns effect"

AddSpellEffectTargetUnit=AddSpellEffectTarget (Unit)
AddSpellEffectTargetUnit="AddSpellEffectTargetUnit(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetUnitHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, unit targetWidget, string attachPoint returns effect"

AddSpellEffectTargetItem=AddSpellEffectTarget (Item)
AddSpellEffectTargetItem="AddSpellEffectTargetItem(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetItemHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, item targetWidget, string attachPoint returns effect"

AddSpellEffectTargetDestructable=AddSpellEffectTarget (Destructable)
AddSpellEffectTargetDestructable="AddSpellEffectTargetDestructable(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetDestructableHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, destructable targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdUnit=AddSpellEffectTargetById (Unit)
AddSpellEffectTargetByIdUnit="AddSpellEffectTargetByIdUnit(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdUnitHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, unit targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdItem=AddSpellEffectTargetById (Item)
AddSpellEffectTargetByIdItem="AddSpellEffectTargetByIdItem(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdItemHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, item targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdDestructable=AddSpellEffectTargetById (Destructable)
AddSpellEffectTargetByIdDestructable="AddSpellEffectTargetByIdDestructable(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdDestructableHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, destructable targetWidget, string attachPoint returns effect"

AddLightning=AddLightning
AddLightning="AddLightning(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
AddLightningHint="[NATIVE] native AddLightning takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning"

DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(",~whichBolt,")"
DestroyLightningHint="[NATIVE] native DestroyLightning takes lightning whichBolt returns boolean"

MoveLightning=MoveLightning
MoveLightning="MoveLightning(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
MoveLightningHint="[NATIVE] native MoveLightning takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean"

SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(",~whichBolt,", ",~r,", ",~g,", ",~b,", ",~a,")"
SetLightningColorHint="[NATIVE] native SetLightningColor takes lightning whichBolt, real r, real g, real b, real a returns boolean"

SetWaterBaseColor=SetWaterBaseColor
SetWaterBaseColor="SetWaterBaseColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWaterBaseColorHint="[NATIVE] native SetWaterBaseColor takes integer red, integer green, integer blue, integer alpha returns nothing"

SetTerrainType=SetTerrainType
SetTerrainType="SetTerrainType(",~x,", ",~y,", ",~terrainType,", ",~variation,", ",~area,", ",~shape,")"
SetTerrainTypeHint="[NATIVE] native SetTerrainType takes real x, real y, integer terrainType, integer variation, integer area, integer shape returns nothing"

SetTerrainPathable=SetTerrainPathable
SetTerrainPathable="SetTerrainPathable(",~x,", ",~y,", ",~whichPathingType,", ",~flag,")"
SetTerrainPathableHint="[NATIVE] native SetTerrainPathable takes real x, real y, pathingtype whichPathingType, boolean flag returns nothing"

CreateImage=CreateImage
CreateImage="CreateImage(",~file,", ",~sizeX,", ",~sizeY,", ",~sizeZ,", ",~posX,", ",~posY,", ",~posZ,", ",~originX,", ",~originY,", ",~originZ,", ",~imageType,")"
CreateImageHint="[NATIVE] native CreateImage takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image"

ShowImage=ShowImage
ShowImage="ShowImage(",~whichImage,", ",~flag,")"
ShowImageHint="[NATIVE] native ShowImage takes image whichImage, boolean flag returns nothing"

SetImagePosition=SetImagePosition
SetImagePosition="SetImagePosition(",~whichImage,", ",~x,", ",~y,", ",~z,")"
SetImagePositionHint="[NATIVE] native SetImagePosition takes image whichImage, real x, real y, real z returns nothing"

SetImageColor=SetImageColor
SetImageColor="SetImageColor(",~whichImage,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetImageColorHint="[NATIVE] native SetImageColor takes image whichImage, integer red, integer green, integer blue, integer alpha returns nothing"

CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(",~x,", ",~y,", ",~name,", ",~red,", ",~green,", ",~blue,", ",~alpha,", ",~forcePaused,", ",~noBirthTime,")"
CreateUbersplatHint="[NATIVE] native CreateUbersplat takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat"

ShowUbersplat=ShowUbersplat
ShowUbersplat="ShowUbersplat(",~whichSplat,", ",~flag,")"
ShowUbersplatHint="[NATIVE] native ShowUbersplat takes ubersplat whichSplat, boolean flag returns nothing"

SetBlight=SetBlight
SetBlight="SetBlight(",~whichPlayer,", ",~x,", ",~y,", ",~radius,", ",~addBlight,")"
SetBlightHint="[NATIVE] native SetBlight takes player whichPlayer, real x, real y, real radius, boolean addBlight returns nothing"

SetBlightRect=SetBlightRect
SetBlightRect="SetBlightRect(",~whichPlayer,", ",~whichRect,", ",~addBlight,")"
SetBlightRectHint="[NATIVE] native SetBlightRect takes player whichPlayer, rect whichRect, boolean addBlight returns nothing"

SetBlightPoint=SetBlightPoint
SetBlightPoint="SetBlightPoint(",~whichPlayer,", ",~x,", ",~y,", ",~addBlight,")"
SetBlightPointHint="[NATIVE] native SetBlightPoint takes player whichPlayer, real x, real y, boolean addBlight returns nothing"

SetBlightLoc=SetBlightLoc
SetBlightLoc="SetBlightLoc(",~whichPlayer,", ",~whichLocation,", ",~radius,", ",~addBlight,")"
SetBlightLocHint="[NATIVE] native SetBlightLoc takes player whichPlayer, location whichLocation, real radius, boolean addBlight returns nothing"

CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
CreateBlightedGoldmineHint="[NATIVE] native CreateBlightedGoldmine takes player whichPlayer, real x, real y, real facing returns unit"

SetDoodadAnimation=SetDoodadAnimation
SetDoodadAnimation="SetDoodadAnimation(",~x,", ",~y,", ",~radius,", ",~doodadID,", ",~nearestOnly,", ",~animName,", ",~animRandom,")"
SetDoodadAnimationHint="[NATIVE] native SetDoodadAnimation takes real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom returns nothing"

SetDoodadAnimationRect=SetDoodadAnimationRect
SetDoodadAnimationRect="SetDoodadAnimationRect(",~whichRect,", ",~doodadID,", ",~animName,", ",~animRandom,")"
SetDoodadAnimationRectHint="[NATIVE] native SetDoodadAnimationRect takes rect whichRect, integer doodadID, string animName, boolean animRandom returns nothing"

PauseCompAI=PauseCompAI
PauseCompAI="PauseCompAI(",~whichPlayer,", ",~pause,")"
PauseCompAIHint="[NATIVE] native PauseCompAI takes player whichPlayer, boolean pause returns nothing"

Cheat=Cheat
Cheat="Cheat(",~cheatStr,")"
CheatHint="[NATIVE] native Cheat takes string cheatStr returns nothing"

PreloadStart=PreloadStart
PreloadStart="PreloadStart(",")"
PreloadStartHint="[NATIVE] native PreloadStart takes nothing returns nothing"

PreloadRefresh=PreloadRefresh
PreloadRefresh="PreloadRefresh(",")"
PreloadRefreshHint="[NATIVE] native PreloadRefresh takes nothing returns nothing"

PreloadEndEx=PreloadEndEx
PreloadEndEx="PreloadEndEx(",")"
PreloadEndExHint="[NATIVE] native PreloadEndEx takes nothing returns nothing"

PreloadGenClear=PreloadGenClear
PreloadGenClear="PreloadGenClear(",")"
PreloadGenClearHint="[NATIVE] native PreloadGenClear takes nothing returns nothing"

PreloadGenStart=PreloadGenStart
PreloadGenStart="PreloadGenStart(",")"
PreloadGenStartHint="[NATIVE] native PreloadGenStart takes nothing returns nothing"

PreloadGenEnd=PreloadGenEnd
PreloadGenEnd="PreloadGenEnd(",~filename,")"
PreloadGenEndHint="[NATIVE] native PreloadGenEnd takes string filename returns nothing"

RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(",~parentScriptFile,", ",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptExHint="[UjAPI] native RunJassScriptEx takes string parentScriptFile, string helperScriptFile, string jassScriptFile returns jassthread"

RunJassScript=RunJassScript
RunJassScript="RunJassScript(",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptHint="[UjAPI] native RunJassScript takes string helperScriptFile, string jassScriptFile returns jassthread"

RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(",~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI] native RunJassScriptSimple takes string jassScriptFile returns jassthread"

StopJassThread=StopJassThread
StopJassThread="StopJassThread(",~thread,")"
StopJassThreadHint="[UjAPI] native StopJassThread takes jassthread thread returns boolean"

SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalIntegerHint="[UjAPI] native SetJassGlobalInteger takes jassthread thread, string variableName, integer value returns boolean"

SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalRealHint="[UjAPI] native SetJassGlobalReal takes jassthread thread, string variableName, real value returns boolean"

SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalHandleHint="[UjAPI] native SetJassGlobalHandle takes jassthread thread, string variableName, handle value returns boolean"

SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalBooleanHint="[UjAPI] native SetJassGlobalBoolean takes jassthread thread, string variableName, boolean value returns boolean"

SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(",~variableName,", ",~value,")"
SetJassLocalIntegerHint="[UjAPI] native SetJassLocalInteger takes string variableName, integer value returns boolean"

SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(",~variableName,", ",~value,")"
SetJassLocalRealHint="[UjAPI] native SetJassLocalReal takes string variableName, real value returns boolean"

SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(",~variableName,", ",~value,")"
SetJassLocalHandleHint="[UjAPI] native SetJassLocalHandle takes string variableName, handle value returns boolean"

SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(",~variableName,", ",~value,")"
SetJassLocalBooleanHint="[UjAPI] native SetJassLocalBoolean takes string variableName, boolean value returns boolean"

EnableOperationLimit=EnableOperationLimit
EnableOperationLimit="EnableOperationLimit(",~enable,")"
EnableOperationLimitHint="[UjAPI] native EnableOperationLimit takes boolean enable returns nothing"

SetOperationLimit=SetOperationLimit
SetOperationLimit="SetOperationLimit(",~opLimit,")"
SetOperationLimitHint="[UjAPI] native SetOperationLimit takes integer opLimit returns nothing"

ExecuteCode=ExecuteCode
ExecuteCode="ExecuteCode(",~c,")"
ExecuteCodeHint="[UjAPI] native ExecuteCode takes code c returns nothing"

ExecuteFuncEx=ExecuteFuncEx
ExecuteFuncEx="ExecuteFuncEx(",~funcName,")"
ExecuteFuncExHint="[UjAPI] native ExecuteFuncEx takes string funcName returns nothing"

CallNative=CallNative
CallNative="CallNative(",~funcName,", ",~params,")"
CallNativeHint="[UjAPI] native CallNative takes string funcName, string params returns integer"

CallFunction=CallFunction
CallFunction="CallFunction(",~funcName,", ",~signature,", ",~params,")"
CallFunctionHint="[UjAPI] native CallFunction takes string funcName, string signature, string params returns integer"

ConsoleEnable=ConsoleEnable
ConsoleEnable="ConsoleEnable(",~enable,")"
ConsoleEnableHint="[UjAPI] native ConsoleEnable takes boolean enable returns nothing"

ConsolePrint=ConsolePrint
ConsolePrint="ConsolePrint(",~s,")"
ConsolePrintHint="[UjAPI] native ConsolePrint takes string s returns nothing"

ConsolePause=ConsolePause
ConsolePause="ConsolePause(",~s,")"
ConsolePauseHint="[UjAPI] native ConsolePause takes string s returns nothing"

TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(",~filePath,")"
TextFileOpenHint="[UjAPI] native TextFileOpen takes string filePath returns textfilehandle"

TextFileExists=TextFileExists
TextFileExists="TextFileExists(",~filePath,")"
TextFileExistsHint="[UjAPI] native TextFileExists takes string filePath returns boolean"

TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(",~filePath,")"
TextFileGetSizeByPathHint="[UjAPI] native TextFileGetSizeByPath takes string filePath returns integer"

TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(",~whichTextFile,")"
TextFileGetSizeHint="[UjAPI] native TextFileGetSize takes textfilehandle whichTextFile returns integer"

TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(",~whichTextFile,")"
TextFileGetPathHint="[UjAPI] native TextFileGetPath takes textfilehandle whichTextFile returns string"

TextFileClose=TextFileClose
TextFileClose="TextFileClose(",~whichTextFile,")"
TextFileCloseHint="[UjAPI] native TextFileClose takes textfilehandle whichTextFile returns nothing"

TextFileClear=TextFileClear
TextFileClear="TextFileClear(",~whichTextFile,")"
TextFileClearHint="[UjAPI] native TextFileClear takes textfilehandle whichTextFile returns nothing"

TextFileDelete=TextFileDelete
TextFileDelete="TextFileDelete(",~whichTextFile,")"
TextFileDeleteHint="[UjAPI] native TextFileDelete takes textfilehandle whichTextFile returns nothing"

TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(",~whichTextFile,")"
TextFileCountLinesHint="[UjAPI] native TextFileCountLines takes textfilehandle whichTextFile returns integer"

TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(",~whichTextFile,", ",~lineNumber,")"
TextFileReadLineHint="[UjAPI] native TextFileReadLine takes textfilehandle whichTextFile, integer lineNumber returns string"

TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(",~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI] native TextFileReadAllLines takes textfilehandle whichTextFile returns string"

TextFileRead=TextFileRead
TextFileRead="TextFileRead(",~whichTextFile,")"
TextFileReadHint="[UjAPI] native TextFileRead takes textfilehandle whichTextFile returns string"

TextFileWriteLine=TextFileWriteLine
TextFileWriteLine="TextFileWriteLine(",~whichTextFile,", ",~text,")"
TextFileWriteLineHint="[UjAPI] native TextFileWriteLine takes textfilehandle whichTextFile, string text returns nothing"

SetVisionMax=SetVisionMax
SetVisionMax="SetVisionMax(",~value,")"
SetVisionMaxHint="[UjAPI] native SetVisionMax takes real value returns nothing"

SetAttackSpeedMinBonus=SetAttackSpeedMinBonus
SetAttackSpeedMinBonus="SetAttackSpeedMinBonus(",~value,")"
SetAttackSpeedMinBonusHint="[UjAPI] native SetAttackSpeedMinBonus takes real value returns nothing"

SetAttackSpeedMaxBonus=SetAttackSpeedMaxBonus
SetAttackSpeedMaxBonus="SetAttackSpeedMaxBonus(",~value,")"
SetAttackSpeedMaxBonusHint="[UjAPI] native SetAttackSpeedMaxBonus takes real value returns nothing"

SetMoveSpeedMinAllowed=SetMoveSpeedMinAllowed
SetMoveSpeedMinAllowed="SetMoveSpeedMinAllowed(",~value,")"
SetMoveSpeedMinAllowedHint="[UjAPI] native SetMoveSpeedMinAllowed takes real value returns nothing"

SetMoveSpeedMaxAllowed=SetMoveSpeedMaxAllowed
SetMoveSpeedMaxAllowed="SetMoveSpeedMaxAllowed(",~value,")"
SetMoveSpeedMaxAllowedHint="[UjAPI] native SetMoveSpeedMaxAllowed takes real value returns nothing"

EnableSelection=EnableSelection
EnableSelection="EnableSelection(",~enable,")"
EnableSelectionHint="[UjAPI] native EnableSelection takes boolean enable returns nothing"

EnableSelectionCircle=EnableSelectionCircle
EnableSelectionCircle="EnableSelectionCircle(",~enable,")"
EnableSelectionCircleHint="[UjAPI] native EnableSelectionCircle takes boolean enable returns nothing"

EnableTargetIndicator=EnableTargetIndicator
EnableTargetIndicator="EnableTargetIndicator(",~enable,")"
EnableTargetIndicatorHint="[UjAPI] native EnableTargetIndicator takes boolean enable returns nothing"

EnableRenderStage=EnableRenderStage
EnableRenderStage="EnableRenderStage(",~renderStage,", ",~enable,")"
EnableRenderStageHint="[UjAPI] native EnableRenderStage takes renderstage renderStage, boolean enable returns nothing"

EnableStatbar=EnableStatbar
EnableStatbar="EnableStatbar(",~enable,")"
EnableStatbarHint="[UjAPI] native EnableStatbar takes boolean enable returns nothing"

SetMapFogZ=SetMapFogZ
SetMapFogZ="SetMapFogZ(",~z,")"
SetMapFogZHint="[UjAPI] native SetMapFogZ takes real z returns nothing"

SetMapFogColour=SetMapFogColour
SetMapFogColour="SetMapFogColour(",~colour,")"
SetMapFogColourHint="[UjAPI] native SetMapFogColour takes integer colour returns nothing"

TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(",~whichTrigger,")"
TriggerCountEventsHint="[UjAPI] native TriggerCountEvents takes trigger whichTrigger returns integer"

TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(",~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI] native TriggerCountConditions takes trigger whichTrigger returns integer"

TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(",~whichTrigger,")"
TriggerCountActionsHint="[UjAPI] native TriggerCountActions takes trigger whichTrigger returns integer"

TriggerRemoveEvent=TriggerRemoveEvent
TriggerRemoveEvent="TriggerRemoveEvent(",~whichTrigger,", ",~whichEvent,")"
TriggerRemoveEventHint="[UjAPI] native TriggerRemoveEvent takes trigger whichTrigger, event whichEvent returns nothing"

TriggerRemoveEventId=TriggerRemoveEventId
TriggerRemoveEventId="TriggerRemoveEventId(",~whichTrigger,", ",~whichEventId,", ",~removeAllOccurences,")"
TriggerRemoveEventIdHint="[UjAPI] native TriggerRemoveEventId takes trigger whichTrigger, eventid whichEventId, boolean removeAllOccurences returns nothing"

TriggerClearEvents=TriggerClearEvents
TriggerClearEvents="TriggerClearEvents(",~whichTrigger,")"
TriggerClearEventsHint="[UjAPI] native TriggerClearEvents takes trigger whichTrigger returns nothing"

TriggerClear=TriggerClear
TriggerClear="TriggerClear(",~whichTrigger,")"
TriggerClearHint="[UjAPI] native TriggerClear takes trigger whichTrigger returns nothing"

RemoveSound=RemoveSound
RemoveSound="RemoveSound(",~whichSound,")"
RemoveSoundHint="[UjAPI] native RemoveSound takes sound whichSound returns nothing"

ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
ReplaceSoundHint="[UjAPI] native ReplaceSound takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"

ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI] native ReplaceSoundWithLabel takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"

ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(",~whichSound,", ",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI] native ReplaceSoundFromLabel takes sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"

ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(",~whichSound,", ",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI] native ReplaceMIDISound takes sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"

BenchmarkStart=BenchmarkStart
BenchmarkStart="BenchmarkStart(",")"
BenchmarkStartHint="[UjAPI] native BenchmarkStart takes nothing returns nothing"

BenchmarkEnd=BenchmarkEnd
BenchmarkEnd="BenchmarkEnd(",")"
BenchmarkEndHint="[UjAPI] native BenchmarkEnd takes nothing returns nothing"

BenchmarkReset=BenchmarkReset
BenchmarkReset="BenchmarkReset(",")"
BenchmarkResetHint="[UjAPI] native BenchmarkReset takes nothing returns nothing"

BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(",~benchType,")"
BenchmarkGetElapsedHint="[UjAPI] native BenchmarkGetElapsed takes integer benchType returns string"

SetScreenFieldOfView=SetScreenFieldOfView
SetScreenFieldOfView="SetScreenFieldOfView(",~fov,")"
SetScreenFieldOfViewHint="[UjAPI] native SetScreenFieldOfView takes real fov returns nothing"

SetWidescreenState=SetWidescreenState
SetWidescreenState="SetWidescreenState(",~flag,")"
SetWidescreenStateHint="[UjAPI] native SetWidescreenState takes boolean flag returns nothing"

SetCursorEnabled=SetCursorEnabled
SetCursorEnabled="SetCursorEnabled(",~enable,")"
SetCursorEnabledHint="[UjAPI] native SetCursorEnabled takes boolean enable returns nothing"

SetCursorAnimationLocked=SetCursorAnimationLocked
SetCursorAnimationLocked="SetCursorAnimationLocked(",~isLock,")"
SetCursorAnimationLockedHint="[UjAPI] native SetCursorAnimationLocked takes boolean isLock returns nothing"

SetMouseScreenRelativeX=SetMouseScreenRelativeX
SetMouseScreenRelativeX="SetMouseScreenRelativeX(",~x,")"
SetMouseScreenRelativeXHint="[UjAPI] native SetMouseScreenRelativeX takes real x returns nothing"

SetMouseScreenRelativeY=SetMouseScreenRelativeY
SetMouseScreenRelativeY="SetMouseScreenRelativeY(",~y,")"
SetMouseScreenRelativeYHint="[UjAPI] native SetMouseScreenRelativeY takes real y returns nothing"

SetMouseScreenRelativePosition=SetMouseScreenRelativePosition
SetMouseScreenRelativePosition="SetMouseScreenRelativePosition(",~x,", ",~y,")"
SetMouseScreenRelativePositionHint="[UjAPI] native SetMouseScreenRelativePosition takes real x, real y returns nothing"

SetMouseScreenAbsoluteX=SetMouseScreenAbsoluteX
SetMouseScreenAbsoluteX="SetMouseScreenAbsoluteX(",~x,")"
SetMouseScreenAbsoluteXHint="[UjAPI] native SetMouseScreenAbsoluteX takes real x returns nothing"

SetMouseScreenAbsoluteY=SetMouseScreenAbsoluteY
SetMouseScreenAbsoluteY="SetMouseScreenAbsoluteY(",~y,")"
SetMouseScreenAbsoluteYHint="[UjAPI] native SetMouseScreenAbsoluteY takes real y returns nothing"

SetMouseScreenAbsolutePosition=SetMouseScreenAbsolutePosition
SetMouseScreenAbsolutePosition="SetMouseScreenAbsolutePosition(",~x,", ",~y,")"
SetMouseScreenAbsolutePositionHint="[UjAPI] native SetMouseScreenAbsolutePosition takes real x, real y returns nothing"

SetMouseScreenPixelX=SetMouseScreenPixelX
SetMouseScreenPixelX="SetMouseScreenPixelX(",~x,")"
SetMouseScreenPixelXHint="[UjAPI] native SetMouseScreenPixelX takes integer x returns nothing"

SetMouseScreenPixelY=SetMouseScreenPixelY
SetMouseScreenPixelY="SetMouseScreenPixelY(",~y,")"
SetMouseScreenPixelYHint="[UjAPI] native SetMouseScreenPixelY takes integer y returns nothing"

SetMouseScreenPixelPosition=SetMouseScreenPixelPosition
SetMouseScreenPixelPosition="SetMouseScreenPixelPosition(",~x,", ",~y,")"
SetMouseScreenPixelPositionHint="[UjAPI] native SetMouseScreenPixelPosition takes integer x, integer y returns nothing"

DisplayWarningMessage=DisplayWarningMessage
DisplayWarningMessage="DisplayWarningMessage(",~toPlayer,", ",~message,")"
DisplayWarningMessageHint="[UjAPI] native DisplayWarningMessage takes player toPlayer, string message returns nothing"

DisplayTimedWarningMessage=DisplayTimedWarningMessage
DisplayTimedWarningMessage="DisplayTimedWarningMessage(",~toPlayer,", ",~duration,", ",~message,")"
DisplayTimedWarningMessageHint="[UjAPI] native DisplayTimedWarningMessage takes player toPlayer, real duration, string message returns nothing"

DisplayChatMessageEx=DisplayChatMessageEx
DisplayChatMessageEx="DisplayChatMessageEx(",~whichPlayer,", ",~recipient,", ",~duration,", ",~addToLog,", ",~message,")"
DisplayChatMessageExHint="[UjAPI] native DisplayChatMessageEx takes player whichPlayer, integer recipient, real duration, boolean addToLog, string message returns nothing"

DisplayChatMessage=DisplayChatMessage
DisplayChatMessage="DisplayChatMessage(",~whichPlayer,", ",~recipient,", ",~message,")"
DisplayChatMessageHint="[UjAPI] native DisplayChatMessage takes player whichPlayer, integer recipient, string message returns nothing"

DisplayTimedChatMessage=DisplayTimedChatMessage
DisplayTimedChatMessage="DisplayTimedChatMessage(",~whichPlayer,", ",~recipient,", ",~duration,", ",~message,")"
DisplayTimedChatMessageHint="[UjAPI] native DisplayTimedChatMessage takes player whichPlayer, integer recipient, real duration, string message returns nothing"

EnumHandlesOfType=EnumHandlesOfType
EnumHandlesOfType="EnumHandlesOfType(",~handleBaseTypeId,", ",~filter,", ",~handlerFunc,")"
EnumHandlesOfTypeHint="[UjAPI] native EnumHandlesOfType takes integer handleBaseTypeId, boolexpr filter, code handlerFunc returns nothing"

DestroyQuestItem=DestroyQuestItem
DestroyQuestItem="DestroyQuestItem(",~whichQuestItem,")"
DestroyQuestItemHint="[UjAPI] native DestroyQuestItem takes questitem whichQuestItem returns nothing"

AntiHackEnable=AntiHackEnable
AntiHackEnable="AntiHackEnable(",~enable,")"
AntiHackEnableHint="[UjAPI] native AntiHackEnable takes boolean enable returns nothing"

AntiHackEnableAddressCheck=AntiHackEnableAddressCheck
AntiHackEnableAddressCheck="AntiHackEnableAddressCheck(",~enable,")"
AntiHackEnableAddressCheckHint="[UjAPI] native AntiHackEnableAddressCheck takes boolean enable returns nothing"

AntiHackEnableBreakpointCheck=AntiHackEnableBreakpointCheck
AntiHackEnableBreakpointCheck="AntiHackEnableBreakpointCheck(",~enable,")"
AntiHackEnableBreakpointCheckHint="[UjAPI] native AntiHackEnableBreakpointCheck takes boolean enable returns nothing"

AntiHackEnableProcessCheck=AntiHackEnableProcessCheck
AntiHackEnableProcessCheck="AntiHackEnableProcessCheck(",~enable,")"
AntiHackEnableProcessCheckHint="[UjAPI] native AntiHackEnableProcessCheck takes boolean enable returns nothing"

AntiHackEnableModuleCheck=AntiHackEnableModuleCheck
AntiHackEnableModuleCheck="AntiHackEnableModuleCheck(",~enable,")"
AntiHackEnableModuleCheckHint="[UjAPI] native AntiHackEnableModuleCheck takes boolean enable returns nothing"

AntiHackEnableKick=AntiHackEnableKick
AntiHackEnableKick="AntiHackEnableKick(",~enable,")"
AntiHackEnableKickHint="[UjAPI] native AntiHackEnableKick takes boolean enable returns nothing"

SaveHandle=SaveHandle
SaveHandle="SaveHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandle,")"
SaveHandleHint="[UjAPI] native SaveHandle takes hashtable whichHashtable, integer parentKey, integer childKey, handle whichHandle returns boolean"

SaveCode=SaveCode
SaveCode="SaveCode(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichCode,")"
SaveCodeHint="[UjAPI] native SaveCode takes hashtable whichHashtable, integer parentKey, integer childKey, code whichCode returns boolean"

SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI] native SaveAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, attacktype whichAttackType returns boolean"

SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI] native SaveDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, damagetype whichDamageType returns boolean"

SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI] native SaveWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, weapontype whichWeaponType returns boolean"

SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBuff,")"
SaveBuffHandleHint="[UjAPI] native SaveBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey, buff whichBuff returns boolean"

SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichsprite,")"
SaveSpriteHandleHint="[UjAPI] native SaveSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sprite whichsprite returns boolean"

SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI] native SaveWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, war3image whichWar3Image returns boolean"

SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI] native SaveDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey, doodad whichDoodad returns boolean"

SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFile,")"
SaveTextFileHandleHint="[UjAPI] native SaveTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, textfilehandle whichFile returns boolean"

SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI] native SaveProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, projectile whichProjectile returns boolean"

SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFrame,")"
SaveFrameHandleHint="[UjAPI] native SaveFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey, framehandle whichFrame returns boolean"

SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandleList,")"
SaveHandleListHint="[UjAPI] native SaveHandleList takes hashtable whichHashtable, integer parentKey, integer childKey, handlelist whichHandleList returns boolean"

LoadHandle=LoadHandle
LoadHandle="LoadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleHint="[UjAPI] native LoadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns handle"

LoadCode=LoadCode
LoadCode="LoadCode(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadCodeHint="[UjAPI] native LoadCode takes hashtable whichHashtable, integer parentKey, integer childKey returns code"

LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAttackTypeHandleHint="[UjAPI] native LoadAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns attacktype"

LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDamageTypeHandleHint="[UjAPI] native LoadDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns damagetype"

LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI] native LoadWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns weapontype"

LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBuffHandleHint="[UjAPI] native LoadBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns buff"

LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSpriteHandleHint="[UjAPI] native LoadSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sprite"

LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWar3ImageHandleHint="[UjAPI] native LoadWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns war3image"

LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDoodadHandleHint="[UjAPI] native LoadDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns doodad"

LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextFileHandleHint="[UjAPI] native LoadTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns textfilehandle"

LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadProjectileHandleHint="[UjAPI] native LoadProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns projectile"

LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFrameHandleHint="[UjAPI] native LoadFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns framehandle"

LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleListHint="[UjAPI] native LoadHandleList takes hashtable whichHashtable, integer parentKey, integer childKey returns handlelist"

SetPlayerMuted=SetPlayerMuted
SetPlayerMuted="SetPlayerMuted(",~whichPlayer,", ",~isMute,")"
SetPlayerMutedHint="[UjAPI] native SetPlayerMuted takes player whichPlayer, boolean isMute returns nothing"

SetPlayerMutedForPlayer=SetPlayerMutedForPlayer
SetPlayerMutedForPlayer="SetPlayerMutedForPlayer(",~whichPlayer,", ",~toPlayer,", ",~isMute,")"
SetPlayerMutedForPlayerHint="[UjAPI] native SetPlayerMutedForPlayer takes player whichPlayer, player toPlayer, boolean isMute returns nothing"

ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(",~whichForce,", ",~whichPlayer,")"
ForceHasPlayerHint="[UjAPI] native ForceHasPlayer takes force whichForce, player whichPlayer returns boolean"

ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(",~whichForce,")"
ForceCountPlayersHint="[UjAPI] native ForceCountPlayers takes force whichForce returns integer"

SetFogModifierForPlayer=SetFogModifierForPlayer
SetFogModifierForPlayer="SetFogModifierForPlayer(",~whichFogModifier,", ",~whichPlayer,")"
SetFogModifierForPlayerHint="[UjAPI] native SetFogModifierForPlayer takes fogmodifier whichFogModifier, player whichPlayer returns nothing"

SetFogModifierFogState=SetFogModifierFogState
SetFogModifierFogState="SetFogModifierFogState(",~whichFogModifier,", ",~whichState,", ",~isSet,")"
SetFogModifierFogStateHint="[UjAPI] native SetFogModifierFogState takes fogmodifier whichFogModifier, fogstate whichState, boolean isSet returns nothing"

SetFogModifierX=SetFogModifierX
SetFogModifierX="SetFogModifierX(",~whichFogModifier,", ",~x,")"
SetFogModifierXHint="[UjAPI] native SetFogModifierX takes fogmodifier whichFogModifier, real x returns nothing"

SetFogModifierY=SetFogModifierY
SetFogModifierY="SetFogModifierY(",~whichFogModifier,", ",~y,")"
SetFogModifierYHint="[UjAPI] native SetFogModifierY takes fogmodifier whichFogModifier, real y returns nothing"

SetFogModifierZ=SetFogModifierZ
SetFogModifierZ="SetFogModifierZ(",~whichFogModifier,", ",~z,")"
SetFogModifierZHint="[UjAPI] native SetFogModifierZ takes fogmodifier whichFogModifier, real z returns nothing"

SetFogModifierRadius=SetFogModifierRadius
SetFogModifierRadius="SetFogModifierRadius(",~whichFogModifier,", ",~radius,")"
SetFogModifierRadiusHint="[UjAPI] native SetFogModifierRadius takes fogmodifier whichFogModifier, real radius returns nothing"

SetFogModifierRadiusEx=SetFogModifierRadiusEx
SetFogModifierRadiusEx="SetFogModifierRadiusEx(",~whichFogModifier,", ",~x,", ",~y,", ",~radius,")"
SetFogModifierRadiusExHint="[UjAPI] native SetFogModifierRadiusEx takes fogmodifier whichFogModifier, real x, real y, real radius returns nothing"

SetFogModifierPosition=SetFogModifierPosition
SetFogModifierPosition="SetFogModifierPosition(",~whichFogModifier,", ",~x,", ",~y,")"
SetFogModifierPositionHint="[UjAPI] native SetFogModifierPosition takes fogmodifier whichFogModifier, real x, real y returns nothing"

SetFogModifierPositionWithZ=SetFogModifierPositionWithZ
SetFogModifierPositionWithZ="SetFogModifierPositionWithZ(",~whichFogModifier,", ",~x,", ",~y,", ",~z,")"
SetFogModifierPositionWithZHint="[UjAPI] native SetFogModifierPositionWithZ takes fogmodifier whichFogModifier, real x, real y, real z returns nothing"

SetFogModifierPositionLoc=SetFogModifierPositionLoc
SetFogModifierPositionLoc="SetFogModifierPositionLoc(",~whichFogModifier,", ",~whichLocation,")"
SetFogModifierPositionLocHint="[UjAPI] native SetFogModifierPositionLoc takes fogmodifier whichFogModifier, location whichLocation returns nothing"

SetFogModifierRect=SetFogModifierRect
SetFogModifierRect="SetFogModifierRect(",~whichFogModifier,", ",~whichRect,")"
SetFogModifierRectHint="[UjAPI] native SetFogModifierRect takes fogmodifier whichFogModifier, rect whichRect returns nothing"

SetFogModifierRectEx=SetFogModifierRectEx
SetFogModifierRectEx="SetFogModifierRectEx(",~whichFogModifier,", ",~minX,", ",~minY,", ",~maxX,", ",~maxY,")"
SetFogModifierRectExHint="[UjAPI] native SetFogModifierRectEx takes fogmodifier whichFogModifier, real minX, real minY, real maxX, real maxY returns nothing"

GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(",~whichGroup,")"
GroupGetCountHint="[UjAPI] native GroupGetCount takes group whichGroup returns integer"

GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(",~whichGroup,", ",~whichUnit,")"
GroupContainsUnitHint="[UjAPI] native GroupContainsUnit takes group whichGroup, unit whichUnit returns boolean"

GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(",~whichGroup,", ",~index,")"
GroupGetUnitByIndexHint="[UjAPI] native GroupGetUnitByIndex takes group whichGroup, integer index returns unit"

GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(",~whichGroup,")"
GroupForEachUnitHint="[UjAPI] native GroupForEachUnit takes group whichGroup returns unit"

GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupAddGroupExHint="[UjAPI] native GroupAddGroupEx takes group destGroup, group sourceGroup returns integer"

GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI] native GroupRemoveGroupEx takes group destGroup, group sourceGroup returns integer"

SetTradeSource=SetTradeSource
SetTradeSource="SetTradeSource(",~whichPlayer,")"
SetTradeSourceHint="[UjAPI] native SetTradeSource takes player whichPlayer returns nothing"

SetTradeTarget=SetTradeTarget
SetTradeTarget="SetTradeTarget(",~whichPlayer,")"
SetTradeTargetHint="[UjAPI] native SetTradeTarget takes player whichPlayer returns nothing"

SetTradeGold=SetTradeGold
SetTradeGold="SetTradeGold(",~amount,")"
SetTradeGoldHint="[UjAPI] native SetTradeGold takes integer amount returns nothing"

SetTradeLumber=SetTradeLumber
SetTradeLumber="SetTradeLumber(",~amount,")"
SetTradeLumberHint="[UjAPI] native SetTradeLumber takes integer amount returns nothing"

SetTradeState=SetTradeState
SetTradeState="SetTradeState(",~whichTradeState,", ",~isSet,")"
SetTradeStateHint="[UjAPI] native SetTradeState takes tradestate whichTradeState, boolean isSet returns nothing"

TradePlayerResources=TradePlayerResources
TradePlayerResources="TradePlayerResources(",~fromPlayer,", ",~toPlayer,", ",~gold,", ",~lumber,")"
TradePlayerResourcesHint="[UjAPI] native TradePlayerResources takes player fromPlayer, player toPlayer, integer gold, integer lumber returns nothing"

HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI] native HandleListCreate takes nothing returns handlelist"

HandleListDestroy=HandleListDestroy
HandleListDestroy="HandleListDestroy(",~whichHandleList,")"
HandleListDestroyHint="[UjAPI] native HandleListDestroy takes handlelist whichHandleList returns nothing"

HandleListAddHandle=HandleListAddHandle
HandleListAddHandle="HandleListAddHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListAddHandleHint="[UjAPI] native HandleListAddHandle takes handlelist whichHandleList, handle whichHandle returns nothing"

HandleListRemoveHandle=HandleListRemoveHandle
HandleListRemoveHandle="HandleListRemoveHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListRemoveHandleHint="[UjAPI] native HandleListRemoveHandle takes handlelist whichHandleList, handle whichHandle returns nothing"

HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(",~destHandleList,", ",~sourceHandleList,")"
HandleListAddListHint="[UjAPI] native HandleListAddList takes handlelist destHandleList, handlelist sourceHandleList returns integer"

HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(",~destHandleList,", ",~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI] native HandleListRemoveList takes handlelist destHandleList, handlelist sourceHandleList returns integer"

HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(",~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI] native HandleListRemoveEmpty takes handlelist whichHandleList returns integer"

HandleListClear=HandleListClear
HandleListClear="HandleListClear(",~whichHandleList,")"
HandleListClearHint="[UjAPI] native HandleListClear takes handlelist whichHandleList returns nothing"

HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListContainsHandleHint="[UjAPI] native HandleListContainsHandle takes handlelist whichHandleList, handle whichHandle returns boolean"

HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(",~whichHandleList,", ",~typeId,")"
HandleListContainsTypeIdHint="[UjAPI] native HandleListContainsTypeId takes handlelist whichHandleList, integer typeId returns boolean"

HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(",~whichHandleList,")"
HandleListGetCountHint="[UjAPI] native HandleListGetCount takes handlelist whichHandleList returns integer"

HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(",~whichHandleList,", ",~handleTypeId,")"
HandleListGetCountExHint="[UjAPI] native HandleListGetCountEx takes handlelist whichHandleList, integer handleTypeId returns integer"

HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(",~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI] native HandleListGetAgentCount takes handlelist whichHandleList returns integer"

HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(",~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI] native HandleListGetWidgetCount takes handlelist whichHandleList returns integer"

HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(",~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI] native HandleListGetUnitCount takes handlelist whichHandleList returns integer"

HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(",~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI] native HandleListGetItemCount takes handlelist whichHandleList returns integer"

HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(",~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI] native HandleListGetDestructableCount takes handlelist whichHandleList returns integer"

HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(",~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI] native HandleListGetDoodadCount takes handlelist whichHandleList returns integer"

HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(",~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI] native HandleListGetAbilityCount takes handlelist whichHandleList returns integer"

HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(",~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI] native HandleListGetBuffCount takes handlelist whichHandleList returns integer"

HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(",~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI] native HandleListGetSpriteCount takes handlelist whichHandleList returns integer"

HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(",~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI] native HandleListGetEffectCount takes handlelist whichHandleList returns integer"

HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(",~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI] native HandleListGetProjectileCount takes handlelist whichHandleList returns integer"

HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(",~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI] native HandleListGetFrameCount takes handlelist whichHandleList returns integer"

HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(",~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI] native HandleListGetOrderCount takes handlelist whichHandleList returns integer"

HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(",~whichHandleList,", ",~index,")"
HandleListGetHandleByIndexHint="[UjAPI] native HandleListGetHandleByIndex takes handlelist whichHandleList, integer index returns handle"

HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(",~whichHandleList,", ",~handleTypeId,", ",~index,")"
HandleListGetHandleByIndexExHint="[UjAPI] native HandleListGetHandleByIndexEx takes handlelist whichHandleList, integer handleTypeId, integer index returns handle"

HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(",~whichHandleList,", ",~typeId,", ",~index,")"
HandleListGetHandleByIdHint="[UjAPI] native HandleListGetHandleById takes handlelist whichHandleList, integer typeId, integer index returns handle"

HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAgentByIndexHint="[UjAPI] native HandleListGetAgentByIndex takes handlelist whichHandleList, integer index returns agent"

HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(",~whichHandleList,", ",~index,")"
HandleListGetWidgetByIndexHint="[UjAPI] native HandleListGetWidgetByIndex takes handlelist whichHandleList, integer index returns widget"

HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(",~whichHandleList,", ",~index,")"
HandleListGetUnitByIndexHint="[UjAPI] native HandleListGetUnitByIndex takes handlelist whichHandleList, integer index returns unit"

HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(",~whichHandleList,", ",~index,")"
HandleListGetItemByIndexHint="[UjAPI] native HandleListGetItemByIndex takes handlelist whichHandleList, integer index returns item"

HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDestructableByIndexHint="[UjAPI] native HandleListGetDestructableByIndex takes handlelist whichHandleList, integer index returns destructable"

HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDoodadByIndexHint="[UjAPI] native HandleListGetDoodadByIndex takes handlelist whichHandleList, integer index returns doodad"

HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAbilityByIndexHint="[UjAPI] native HandleListGetAbilityByIndex takes handlelist whichHandleList, integer index returns ability"

HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(",~whichHandleList,", ",~index,")"
HandleListGetBuffByIndexHint="[UjAPI] native HandleListGetBuffByIndex takes handlelist whichHandleList, integer index returns buff"

HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(",~whichHandleList,", ",~index,")"
HandleListGetSpriteByIndexHint="[UjAPI] native HandleListGetSpriteByIndex takes handlelist whichHandleList, integer index returns sprite"

HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(",~whichHandleList,", ",~index,")"
HandleListGetEffectByIndexHint="[UjAPI] native HandleListGetEffectByIndex takes handlelist whichHandleList, integer index returns effect"

HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(",~whichHandleList,", ",~index,")"
HandleListGetProjectileByIndexHint="[UjAPI] native HandleListGetProjectileByIndex takes handlelist whichHandleList, integer index returns projectile"

HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(",~whichHandleList,", ",~index,")"
HandleListGetFrameByIndexHint="[UjAPI] native HandleListGetFrameByIndex takes handlelist whichHandleList, integer index returns framehandle"

HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(",~whichHandleList,", ",~index,")"
HandleListGetOrderByIndexHint="[UjAPI] native HandleListGetOrderByIndex takes handlelist whichHandleList, integer index returns orderhandle"

HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI] native HandleListGetFilterHandle takes nothing returns handle"

HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI] native HandleListGetFilterAgent takes nothing returns agent"

HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI] native HandleListGetFilterWidget takes nothing returns widget"

HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI] native HandleListGetFilterUnit takes nothing returns unit"

HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI] native HandleListGetFilterItem takes nothing returns item"

HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI] native HandleListGetFilterDestructable takes nothing returns destructable"

HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI] native HandleListGetFilterDoodad takes nothing returns doodad"

HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI] native HandleListGetFilterAbility takes nothing returns ability"

HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI] native HandleListGetFilterBuff takes nothing returns buff"

HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI] native HandleListGetFilterSprite takes nothing returns sprite"

HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI] native HandleListGetFilterEffect takes nothing returns effect"

HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI] native HandleListGetFilterProjectile takes nothing returns projectile"

HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI] native HandleListGetFilterFrame takes nothing returns framehandle"

HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI] native HandleListGetFilterOrder takes nothing returns orderhandle"

HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI] native HandleListGetEnumHandle takes nothing returns handle"

HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI] native HandleListGetEnumAgent takes nothing returns agent"

HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI] native HandleListGetEnumWidget takes nothing returns widget"

HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI] native HandleListGetEnumUnit takes nothing returns unit"

HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI] native HandleListGetEnumItem takes nothing returns item"

HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI] native HandleListGetEnumDestructable takes nothing returns destructable"

HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI] native HandleListGetEnumDoodad takes nothing returns doodad"

HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI] native HandleListGetEnumAbility takes nothing returns ability"

HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI] native HandleListGetEnumBuff takes nothing returns buff"

HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI] native HandleListGetEnumSprite takes nothing returns sprite"

HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI] native HandleListGetEnumEffect takes nothing returns effect"

HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI] native HandleListGetEnumProjectile takes nothing returns projectile"

HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI] native HandleListGetEnumFrame takes nothing returns framehandle"

HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI] native HandleListGetEnumOrder takes nothing returns orderhandle"

HandleListEnumInRange=HandleListEnumInRange
HandleListEnumInRange="HandleListEnumInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumInRangeHint="[UjAPI] native HandleListEnumInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumInRangeEx=HandleListEnumInRangeEx
HandleListEnumInRangeEx="HandleListEnumInRangeEx(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRangeExHint="[UjAPI] native HandleListEnumInRangeEx takes handlelist whichHandleList, real x, real y, real radius, integer handleTypeId, boolexpr filter returns nothing"

HandleListEnumAgentsInRange=HandleListEnumAgentsInRange
HandleListEnumAgentsInRange="HandleListEnumAgentsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumAgentsInRangeHint="[UjAPI] native HandleListEnumAgentsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumWidgetsInRange=HandleListEnumWidgetsInRange
HandleListEnumWidgetsInRange="HandleListEnumWidgetsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumWidgetsInRangeHint="[UjAPI] native HandleListEnumWidgetsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumUnitsInRange=HandleListEnumUnitsInRange
HandleListEnumUnitsInRange="HandleListEnumUnitsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumUnitsInRangeHint="[UjAPI] native HandleListEnumUnitsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumItemsInRange=HandleListEnumItemsInRange
HandleListEnumItemsInRange="HandleListEnumItemsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumItemsInRangeHint="[UjAPI] native HandleListEnumItemsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumDestructablesInRange=HandleListEnumDestructablesInRange
HandleListEnumDestructablesInRange="HandleListEnumDestructablesInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumDestructablesInRangeHint="[UjAPI] native HandleListEnumDestructablesInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumDoodadsInRange=HandleListEnumDoodadsInRange
HandleListEnumDoodadsInRange="HandleListEnumDoodadsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumDoodadsInRangeHint="[UjAPI] native HandleListEnumDoodadsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumSpecialEffectsInRange=HandleListEnumSpecialEffectsInRange
HandleListEnumSpecialEffectsInRange="HandleListEnumSpecialEffectsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumSpecialEffectsInRangeHint="[UjAPI] native HandleListEnumSpecialEffectsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumProjectilesInRange=HandleListEnumProjectilesInRange
HandleListEnumProjectilesInRange="HandleListEnumProjectilesInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumProjectilesInRangeHint="[UjAPI] native HandleListEnumProjectilesInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"

HandleListEnumInRangeOfLoc=HandleListEnumInRangeOfLoc
HandleListEnumInRangeOfLoc="HandleListEnumInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumInRangeOfLocHint="[UjAPI] native HandleListEnumInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumInRangeOfLocEx=HandleListEnumInRangeOfLocEx
HandleListEnumInRangeOfLocEx="HandleListEnumInRangeOfLocEx(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRangeOfLocExHint="[UjAPI] native HandleListEnumInRangeOfLocEx takes handlelist whichHandleList, location whichLocation, real radius, integer handleTypeId, boolexpr filter returns nothing"

HandleListEnumAgentsInRangeOfLoc=HandleListEnumAgentsInRangeOfLoc
HandleListEnumAgentsInRangeOfLoc="HandleListEnumAgentsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumAgentsInRangeOfLocHint="[UjAPI] native HandleListEnumAgentsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumWidgetsInRangeOfLoc=HandleListEnumWidgetsInRangeOfLoc
HandleListEnumWidgetsInRangeOfLoc="HandleListEnumWidgetsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumWidgetsInRangeOfLocHint="[UjAPI] native HandleListEnumWidgetsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumUnitsInRangeOfLoc=HandleListEnumUnitsInRangeOfLoc
HandleListEnumUnitsInRangeOfLoc="HandleListEnumUnitsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumUnitsInRangeOfLocHint="[UjAPI] native HandleListEnumUnitsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumItemsInRangeOfLoc=HandleListEnumItemsInRangeOfLoc
HandleListEnumItemsInRangeOfLoc="HandleListEnumItemsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumItemsInRangeOfLocHint="[UjAPI] native HandleListEnumItemsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumDestructablesInRangeOfLoc=HandleListEnumDestructablesInRangeOfLoc
HandleListEnumDestructablesInRangeOfLoc="HandleListEnumDestructablesInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumDestructablesInRangeOfLocHint="[UjAPI] native HandleListEnumDestructablesInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumDoodadsInRangeOfLoc=HandleListEnumDoodadsInRangeOfLoc
HandleListEnumDoodadsInRangeOfLoc="HandleListEnumDoodadsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumDoodadsInRangeOfLocHint="[UjAPI] native HandleListEnumDoodadsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumSpecialEffectsInRangeOfLoc=HandleListEnumSpecialEffectsInRangeOfLoc
HandleListEnumSpecialEffectsInRangeOfLoc="HandleListEnumSpecialEffectsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumSpecialEffectsInRangeOfLocHint="[UjAPI] native HandleListEnumSpecialEffectsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumProjectilesInRangeOfLoc=HandleListEnumProjectilesInRangeOfLoc
HandleListEnumProjectilesInRangeOfLoc="HandleListEnumProjectilesInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumProjectilesInRangeOfLocHint="[UjAPI] native HandleListEnumProjectilesInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"

HandleListEnumInRect=HandleListEnumInRect
HandleListEnumInRect="HandleListEnumInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumInRectHint="[UjAPI] native HandleListEnumInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumInRectEx=HandleListEnumInRectEx
HandleListEnumInRectEx="HandleListEnumInRectEx(",~whichHandleList,", ",~whichRect,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRectExHint="[UjAPI] native HandleListEnumInRectEx takes handlelist whichHandleList, rect whichRect, integer handleTypeId, boolexpr filter returns nothing"

HandleListEnumAgentsInRect=HandleListEnumAgentsInRect
HandleListEnumAgentsInRect="HandleListEnumAgentsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumAgentsInRectHint="[UjAPI] native HandleListEnumAgentsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumWidgetsInRect=HandleListEnumWidgetsInRect
HandleListEnumWidgetsInRect="HandleListEnumWidgetsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumWidgetsInRectHint="[UjAPI] native HandleListEnumWidgetsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumUnitsInRect=HandleListEnumUnitsInRect
HandleListEnumUnitsInRect="HandleListEnumUnitsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumUnitsInRectHint="[UjAPI] native HandleListEnumUnitsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumItemsInRect=HandleListEnumItemsInRect
HandleListEnumItemsInRect="HandleListEnumItemsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumItemsInRectHint="[UjAPI] native HandleListEnumItemsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumDestructablesInRect=HandleListEnumDestructablesInRect
HandleListEnumDestructablesInRect="HandleListEnumDestructablesInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumDestructablesInRectHint="[UjAPI] native HandleListEnumDestructablesInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumDoodadsInRect=HandleListEnumDoodadsInRect
HandleListEnumDoodadsInRect="HandleListEnumDoodadsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumDoodadsInRectHint="[UjAPI] native HandleListEnumDoodadsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumSpecialEffectsInRect=HandleListEnumSpecialEffectsInRect
HandleListEnumSpecialEffectsInRect="HandleListEnumSpecialEffectsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumSpecialEffectsInRectHint="[UjAPI] native HandleListEnumSpecialEffectsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumProjectilesInRect=HandleListEnumProjectilesInRect
HandleListEnumProjectilesInRect="HandleListEnumProjectilesInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumProjectilesInRectHint="[UjAPI] native HandleListEnumProjectilesInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"

HandleListEnumById=HandleListEnumById
HandleListEnumById="HandleListEnumById(",~whichHandleList,", ",~handleTypeId,", ",~filter,")"
HandleListEnumByIdHint="[UjAPI] native HandleListEnumById takes handlelist whichHandleList, integer handleTypeId, boolexpr filter returns nothing"

HandleListEnumByIdEx=HandleListEnumByIdEx
HandleListEnumByIdEx="HandleListEnumByIdEx(",~whichHandleList,", ",~handleTypeId,", ",~typeId,", ",~filter,")"
HandleListEnumByIdExHint="[UjAPI] native HandleListEnumByIdEx takes handlelist whichHandleList, integer handleTypeId, integer typeId, boolexpr filter returns nothing"

HandleListEnumUnitAbilities=HandleListEnumUnitAbilities
HandleListEnumUnitAbilities="HandleListEnumUnitAbilities(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitAbilitiesHint="[UjAPI] native HandleListEnumUnitAbilities takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"

HandleListEnumUnitBuffs=HandleListEnumUnitBuffs
HandleListEnumUnitBuffs="HandleListEnumUnitBuffs(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitBuffsHint="[UjAPI] native HandleListEnumUnitBuffs takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"

HandleListEnumUnitOrders=HandleListEnumUnitOrders
HandleListEnumUnitOrders="HandleListEnumUnitOrders(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitOrdersHint="[UjAPI] native HandleListEnumUnitOrders takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"

HandleListForEach=HandleListForEach
HandleListForEach="HandleListForEach(",~whichHandleList,", ",~c,")"
HandleListForEachHint="[UjAPI] native HandleListForEach takes handlelist whichHandleList, code c returns nothing"

HandleListForEachById=HandleListForEachById
HandleListForEachById="HandleListForEachById(",~whichHandleList,", ",~handleTypeId,", ",~c,")"
HandleListForEachByIdHint="[UjAPI] native HandleListForEachById takes handlelist whichHandleList, integer handleTypeId, code c returns nothing"

HandleListForEachByIdEx=HandleListForEachByIdEx
HandleListForEachByIdEx="HandleListForEachByIdEx(",~whichHandleList,", ",~handleTypeId,", ",~typeId,", ",~c,")"
HandleListForEachByIdExHint="[UjAPI] native HandleListForEachByIdEx takes handlelist whichHandleList, integer handleTypeId, integer typeId, code c returns nothing"

SetBaseTextTagFont=SetBaseTextTagFont
SetBaseTextTagFont="SetBaseTextTagFont(",~fontName,", ",~size,", ",~flags,")"
SetBaseTextTagFontHint="[UjAPI] native SetBaseTextTagFont takes string fontName, real size, integer flags returns nothing"

SetTextTagX=SetTextTagX
SetTextTagX="SetTextTagX(",~whichTextTag,", ",~x,")"
SetTextTagXHint="[UjAPI] native SetTextTagX takes texttag whichTextTag, real x returns nothing"

SetTextTagY=SetTextTagY
SetTextTagY="SetTextTagY(",~whichTextTag,", ",~y,")"
SetTextTagYHint="[UjAPI] native SetTextTagY takes texttag whichTextTag, real y returns nothing"

SetTextTagZ=SetTextTagZ
SetTextTagZ="SetTextTagZ(",~whichTextTag,", ",~z,")"
SetTextTagZHint="[UjAPI] native SetTextTagZ takes texttag whichTextTag, real z returns nothing"

SetTextTagHeight=SetTextTagHeight
SetTextTagHeight="SetTextTagHeight(",~whichTextTag,", ",~height,")"
SetTextTagHeightHint="[UjAPI] native SetTextTagHeight takes texttag whichTextTag, real height returns nothing"

SetTextTagPositionLoc=SetTextTagPositionLoc
SetTextTagPositionLoc="SetTextTagPositionLoc(",~whichTextTag,", ",~whichLocation,")"
SetTextTagPositionLocHint="[UjAPI] native SetTextTagPositionLoc takes texttag whichTextTag, location whichLocation returns nothing"

SetTextTagAlpha=SetTextTagAlpha
SetTextTagAlpha="SetTextTagAlpha(",~whichTextTag,", ",~alpha,")"
SetTextTagAlphaHint="[UjAPI] native SetTextTagAlpha takes texttag whichTextTag, integer alpha returns nothing"

SetTextTagVelocityX=SetTextTagVelocityX
SetTextTagVelocityX="SetTextTagVelocityX(",~whichTextTag,", ",~velX,")"
SetTextTagVelocityXHint="[UjAPI] native SetTextTagVelocityX takes texttag whichTextTag, real velX returns nothing"

SetTextTagVelocityY=SetTextTagVelocityY
SetTextTagVelocityY="SetTextTagVelocityY(",~whichTextTag,", ",~velY,")"
SetTextTagVelocityYHint="[UjAPI] native SetTextTagVelocityY takes texttag whichTextTag, real velY returns nothing"

SetTextTagVelocityZ=SetTextTagVelocityZ
SetTextTagVelocityZ="SetTextTagVelocityZ(",~whichTextTag,", ",~velZ,")"
SetTextTagVelocityZHint="[UjAPI] native SetTextTagVelocityZ takes texttag whichTextTag, real velZ returns nothing"

SetTextTagShadowColour=SetTextTagShadowColour
SetTextTagShadowColour="SetTextTagShadowColour(",~whichTextTag,", ",~colour,")"
SetTextTagShadowColourHint="[UjAPI] native SetTextTagShadowColour takes texttag whichTextTag, integer colour returns nothing"

SetTextTagShadowAlpha=SetTextTagShadowAlpha
SetTextTagShadowAlpha="SetTextTagShadowAlpha(",~whichTextTag,", ",~alpha,")"
SetTextTagShadowAlphaHint="[UjAPI] native SetTextTagShadowAlpha takes texttag whichTextTag, integer alpha returns nothing"

SetTextTagFont=SetTextTagFont
SetTextTagFont="SetTextTagFont(",~whichTextTag,", ",~fontName,", ",~size,", ",~flags,")"
SetTextTagFontHint="[UjAPI] native SetTextTagFont takes texttag whichTextTag, string fontName, real size, integer flags returns nothing"

SetLightningSourceX=SetLightningSourceX
SetLightningSourceX="SetLightningSourceX(",~whichBolt,", ",~value,")"
SetLightningSourceXHint="[UjAPI] native SetLightningSourceX takes lightning whichBolt, real value returns nothing"

SetLightningSourceY=SetLightningSourceY
SetLightningSourceY="SetLightningSourceY(",~whichBolt,", ",~value,")"
SetLightningSourceYHint="[UjAPI] native SetLightningSourceY takes lightning whichBolt, real value returns nothing"

SetLightningSourceZ=SetLightningSourceZ
SetLightningSourceZ="SetLightningSourceZ(",~whichBolt,", ",~value,")"
SetLightningSourceZHint="[UjAPI] native SetLightningSourceZ takes lightning whichBolt, real value returns nothing"

SetLightningSourcePositionLoc=SetLightningSourcePositionLoc
SetLightningSourcePositionLoc="SetLightningSourcePositionLoc(",~whichBolt,", ",~whichLocation,")"
SetLightningSourcePositionLocHint="[UjAPI] native SetLightningSourcePositionLoc takes lightning whichBolt, location whichLocation returns nothing"

SetLightningTargetX=SetLightningTargetX
SetLightningTargetX="SetLightningTargetX(",~whichBolt,", ",~value,")"
SetLightningTargetXHint="[UjAPI] native SetLightningTargetX takes lightning whichBolt, real value returns nothing"

SetLightningTargetY=SetLightningTargetY
SetLightningTargetY="SetLightningTargetY(",~whichBolt,", ",~value,")"
SetLightningTargetYHint="[UjAPI] native SetLightningTargetY takes lightning whichBolt, real value returns nothing"

SetLightningTargetZ=SetLightningTargetZ
SetLightningTargetZ="SetLightningTargetZ(",~whichBolt,", ",~value,")"
SetLightningTargetZHint="[UjAPI] native SetLightningTargetZ takes lightning whichBolt, real value returns nothing"

SetLightningTargetPositionLoc=SetLightningTargetPositionLoc
SetLightningTargetPositionLoc="SetLightningTargetPositionLoc(",~whichBolt,", ",~whichLocation,")"
SetLightningTargetPositionLocHint="[UjAPI] native SetLightningTargetPositionLoc takes lightning whichBolt, location whichLocation returns nothing"

SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(",~whichBolt,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetLightningColourHint="[UjAPI] native SetLightningColour takes lightning whichBolt, integer red, integer green, integer blue, integer alpha returns boolean"

SetLightningLength=SetLightningLength
SetLightningLength="SetLightningLength(",~whichBolt,", ",~value,")"
SetLightningLengthHint="[UjAPI] native SetLightningLength takes lightning whichBolt, real value returns nothing"

SetLightningWidth=SetLightningWidth
SetLightningWidth="SetLightningWidth(",~whichBolt,", ",~value,")"
SetLightningWidthHint="[UjAPI] native SetLightningWidth takes lightning whichBolt, real value returns nothing"

SetLightningNoiseScaling=SetLightningNoiseScaling
SetLightningNoiseScaling="SetLightningNoiseScaling(",~whichBolt,", ",~value,")"
SetLightningNoiseScalingHint="[UjAPI] native SetLightningNoiseScaling takes lightning whichBolt, real value returns nothing"

SetLightningTextureCoordinates=SetLightningTextureCoordinates
SetLightningTextureCoordinates="SetLightningTextureCoordinates(",~whichBolt,", ",~value,")"
SetLightningTextureCoordinatesHint="[UjAPI] native SetLightningTextureCoordinates takes lightning whichBolt, real value returns nothing"

SetLightningDuration=SetLightningDuration
SetLightningDuration="SetLightningDuration(",~whichBolt,", ",~value,")"
SetLightningDurationHint="[UjAPI] native SetLightningDuration takes lightning whichBolt, real value returns nothing"

SetLightningTexture=SetLightningTexture
SetLightningTexture="SetLightningTexture(",~whichBolt,", ",~textureName,")"
SetLightningTextureHint="[UjAPI] native SetLightningTexture takes lightning whichBolt, string textureName returns nothing"

CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(",~file,", ",~sizeX,", ",~sizeY,", ",~posX,", ",~posY,", ",~posZ,", ",~imageType,")"
CreateImageSimpleHint="[UjAPI] native CreateImageSimple takes string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType returns image"

SetImageX=SetImageX
SetImageX="SetImageX(",~whichImage,", ",~sizeX,")"
SetImageXHint="[UjAPI] native SetImageX takes image whichImage, real sizeX returns nothing"

SetImageY=SetImageY
SetImageY="SetImageY(",~whichImage,", ",~sizeY,")"
SetImageYHint="[UjAPI] native SetImageY takes image whichImage, real sizeY returns nothing"

SetImageZ=SetImageZ
SetImageZ="SetImageZ(",~whichImage,", ",~sizeZ,")"
SetImageZHint="[UjAPI] native SetImageZ takes image whichImage, real sizeZ returns nothing"

SetImagePositionLoc=SetImagePositionLoc
SetImagePositionLoc="SetImagePositionLoc(",~whichImage,", ",~whichLocation,")"
SetImagePositionLocHint="[UjAPI] native SetImagePositionLoc takes image whichImage, location whichLocation returns nothing"

SetImageOriginX=SetImageOriginX
SetImageOriginX="SetImageOriginX(",~whichImage,", ",~originX,")"
SetImageOriginXHint="[UjAPI] native SetImageOriginX takes image whichImage, real originX returns nothing"

SetImageOriginY=SetImageOriginY
SetImageOriginY="SetImageOriginY(",~whichImage,", ",~originY,")"
SetImageOriginYHint="[UjAPI] native SetImageOriginY takes image whichImage, real originY returns nothing"

SetImageOrigin=SetImageOrigin
SetImageOrigin="SetImageOrigin(",~whichImage,", ",~origin,")"
SetImageOriginHint="[UjAPI] native SetImageOrigin takes image whichImage, real origin returns nothing"

SetImageOriginEx=SetImageOriginEx
SetImageOriginEx="SetImageOriginEx(",~whichImage,", ",~originX,", ",~originY,")"
SetImageOriginExHint="[UjAPI] native SetImageOriginEx takes image whichImage, real originX, real originY returns nothing"

SetImageSizeX=SetImageSizeX
SetImageSizeX="SetImageSizeX(",~whichImage,", ",~sizeX,")"
SetImageSizeXHint="[UjAPI] native SetImageSizeX takes image whichImage, real sizeX returns nothing"

SetImageSizeY=SetImageSizeY
SetImageSizeY="SetImageSizeY(",~whichImage,", ",~sizeY,")"
SetImageSizeYHint="[UjAPI] native SetImageSizeY takes image whichImage, real sizeY returns nothing"

SetImageSize=SetImageSize
SetImageSize="SetImageSize(",~whichImage,", ",~size,")"
SetImageSizeHint="[UjAPI] native SetImageSize takes image whichImage, real size returns nothing"

SetImageSizeEx=SetImageSizeEx
SetImageSizeEx="SetImageSizeEx(",~whichImage,", ",~sizeX,", ",~sizeY,")"
SetImageSizeExHint="[UjAPI] native SetImageSizeEx takes image whichImage, real sizeX, real sizeY returns nothing"

SetImageTexture=SetImageTexture
SetImageTexture="SetImageTexture(",~whichImage,", ",~imagePath,")"
SetImageTextureHint="[UjAPI] native SetImageTexture takes image whichImage, string imagePath returns nothing"

TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(",~whichTimer,")"
TimerIsPausedHint="[UjAPI] native TimerIsPaused takes timer whichTimer returns boolean"

TimerRestart=TimerRestart
TimerRestart="TimerRestart(",~whichTimer,")"
TimerRestartHint="[UjAPI] native TimerRestart takes timer whichTimer returns nothing"

TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(",~whichTimer,")"
TimerIsPeriodicHint="[UjAPI] native TimerIsPeriodic takes timer whichTimer returns boolean"

TimerSetPeriodic=TimerSetPeriodic
TimerSetPeriodic="TimerSetPeriodic(",~whichTimer,", ",~isPeriodic,")"
TimerSetPeriodicHint="[UjAPI] native TimerSetPeriodic takes timer whichTimer, boolean isPeriodic returns nothing"

TimerSetRemaining=TimerSetRemaining
TimerSetRemaining="TimerSetRemaining(",~whichTimer,", ",~remaining,")"
TimerSetRemainingHint="[UjAPI] native TimerSetRemaining takes timer whichTimer, real remaining returns nothing"

TimerSetTimeout=TimerSetTimeout
TimerSetTimeout="TimerSetTimeout(",~whichTimer,", ",~timeout,")"
TimerSetTimeoutHint="[UjAPI] native TimerSetTimeout takes timer whichTimer, real timeout returns nothing"

TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(",~whichTimer,")"
TimerGetCallbackHint="[UjAPI] native TimerGetCallback takes timer whichTimer returns code"

TimerSetCallback=TimerSetCallback
TimerSetCallback="TimerSetCallback(",~whichTimer,", ",~whichFunction,")"
TimerSetCallbackHint="[UjAPI] native TimerSetCallback takes timer whichTimer, code whichFunction returns nothing"

SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerFieldById takes integer abilityTypeId, abilityintegerfield whichField, integer value returns boolean"

SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanFieldById takes integer abilityTypeId, abilitybooleanfield whichField, boolean value returns boolean"

SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI] native SetAbilityBaseRealFieldById takes integer abilityTypeId, abilityrealfield whichField, real value returns boolean"

SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerLevelFieldById takes integer abilityTypeId, abilityintegerlevelfield whichField, integer level, integer value returns boolean"

SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanLevelFieldById takes integer abilityTypeId, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"

SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI] native SetAbilityBaseRealLevelFieldById takes integer abilityTypeId, abilityreallevelfield whichField, integer level, real value returns boolean"

SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"

AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"

AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"

AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityIntegerFieldHint="[UjAPI] native SetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField, integer value returns boolean"

SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityBooleanFieldHint="[UjAPI] native SetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField, boolean value returns boolean"

SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityRealFieldHint="[UjAPI] native SetAbilityRealField takes ability whichAbility, abilityrealfield whichField, real value returns boolean"

SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI] native SetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value returns boolean"

SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI] native SetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"

SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityRealLevelFieldHint="[UjAPI] native SetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level, real value returns boolean"

SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI] native SetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"

AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI] native AddAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI] native RemoveAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI] native SetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"

AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI] native AddAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI] native RemoveAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI] native SetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"

AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI] native AddAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI] native RemoveAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(",~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI] native ResetAbilityFieldData takes ability whichAbility returns boolean"

CreateAbility=CreateAbility
CreateAbility="CreateAbility(",~abilityTypeId,")"
CreateAbilityHint="[UjAPI] native CreateAbility takes integer abilityTypeId returns ability"

RemoveAbility=RemoveAbility
RemoveAbility="RemoveAbility(",~whichAbility,")"
RemoveAbilityHint="[UjAPI] native RemoveAbility takes ability whichAbility returns nothing"

SetAbilityOwner=SetAbilityOwner
SetAbilityOwner="SetAbilityOwner(",~whichAbility,", ",~whichUnit,")"
SetAbilityOwnerHint="[UjAPI] native SetAbilityOwner takes ability whichAbility, unit whichUnit returns nothing"

SetAbilityOwningAbility=SetAbilityOwningAbility
SetAbilityOwningAbility="SetAbilityOwningAbility(",~whichAbility,", ",~whichSpellbook,")"
SetAbilityOwningAbilityHint="[UjAPI] native SetAbilityOwningAbility takes ability whichAbility, ability whichSpellbook returns nothing"

SetAbilityOwningItem=SetAbilityOwningItem
SetAbilityOwningItem="SetAbilityOwningItem(",~whichAbility,", ",~whichItem,")"
SetAbilityOwningItemHint="[UjAPI] native SetAbilityOwningItem takes ability whichAbility, item whichItem returns nothing"

SetAbilityOrderId=SetAbilityOrderId
SetAbilityOrderId="SetAbilityOrderId(",~whichAbility,", ",~orderId,")"
SetAbilityOrderIdHint="[UjAPI] native SetAbilityOrderId takes ability whichAbility, integer orderId returns nothing"

ResetAbilityOrder=ResetAbilityOrder
ResetAbilityOrder="ResetAbilityOrder(",~whichAbility,")"
ResetAbilityOrderHint="[UjAPI] native ResetAbilityOrder takes ability whichAbility returns nothing"

SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(",~whichAbility,", ",~level,")"
SetAbilityLevelHint="[UjAPI] native SetAbilityLevel takes ability whichAbility, integer level returns integer"

SetAbilityEnabled=SetAbilityEnabled
SetAbilityEnabled="SetAbilityEnabled(",~whichAbility,", ",~enable,")"
SetAbilityEnabledHint="[UjAPI] native SetAbilityEnabled takes ability whichAbility, boolean enable returns nothing"

ShowAbility=ShowAbility
ShowAbility="ShowAbility(",~whichAbility,", ",~show,")"
ShowAbilityHint="[UjAPI] native ShowAbility takes ability whichAbility, boolean show returns nothing"

SetAbilityOrderEnabled=SetAbilityOrderEnabled
SetAbilityOrderEnabled="SetAbilityOrderEnabled(",~whichAbility,", ",~enable,")"
SetAbilityOrderEnabledHint="[UjAPI] native SetAbilityOrderEnabled takes ability whichAbility, boolean enable returns nothing"

SetAbilityPassive=SetAbilityPassive
SetAbilityPassive="SetAbilityPassive(",~whichAbility,", ",~enable,")"
SetAbilityPassiveHint="[UjAPI] native SetAbilityPassive takes ability whichAbility, boolean enable returns nothing"

SetAbilityCastTime=SetAbilityCastTime
SetAbilityCastTime="SetAbilityCastTime(",~whichAbility,", ",~castTime,")"
SetAbilityCastTimeHint="[UjAPI] native SetAbilityCastTime takes ability whichAbility, real castTime returns nothing"

SetAbilityCastPoint=SetAbilityCastPoint
SetAbilityCastPoint="SetAbilityCastPoint(",~whichAbility,", ",~castPoint,")"
SetAbilityCastPointHint="[UjAPI] native SetAbilityCastPoint takes ability whichAbility, real castPoint returns nothing"

SetAbilityBackswing=SetAbilityBackswing
SetAbilityBackswing="SetAbilityBackswing(",~whichAbility,", ",~backswing,")"
SetAbilityBackswingHint="[UjAPI] native SetAbilityBackswing takes ability whichAbility, real backswing returns nothing"

SetAbilityCooldown=SetAbilityCooldown
SetAbilityCooldown="SetAbilityCooldown(",~whichAbility,", ",~cooldown,")"
SetAbilityCooldownHint="[UjAPI] native SetAbilityCooldown takes ability whichAbility, real cooldown returns nothing"

SetAbilityRemainingCooldown=SetAbilityRemainingCooldown
SetAbilityRemainingCooldown="SetAbilityRemainingCooldown(",~whichAbility,", ",~cooldown,")"
SetAbilityRemainingCooldownHint="[UjAPI] native SetAbilityRemainingCooldown takes ability whichAbility, real cooldown returns nothing"

StartAbilityCooldown=StartAbilityCooldown
StartAbilityCooldown="StartAbilityCooldown(",~whichAbility,", ",~cooldown,")"
StartAbilityCooldownHint="[UjAPI] native StartAbilityCooldown takes ability whichAbility, real cooldown returns nothing"

DisableAbility=DisableAbility
DisableAbility="DisableAbility(",~whichAbility,", ",~hide,", ",~disable,")"
DisableAbilityHint="[UjAPI] native DisableAbility takes ability whichAbility, boolean hide, boolean disable returns nothing"

EnableAbility=EnableAbility
EnableAbility="EnableAbility(",~whichAbility,", ",~show,", ",~enable,")"
EnableAbilityHint="[UjAPI] native EnableAbility takes ability whichAbility, boolean show, boolean enable returns nothing"

CastAbility=CastAbility
CastAbility="CastAbility(",~whichAbility,")"
CastAbilityHint="[UjAPI] native CastAbility takes ability whichAbility returns boolean"

CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(",~whichAbility,", ",~targX,", ",~targY,")"
CastAbilityGroundHint="[UjAPI] native CastAbilityGround takes ability whichAbility, real targX, real targY returns boolean"

CastAbilityTargetUnit=CastAbilityTarget (Unit)
CastAbilityTargetUnit="CastAbilityTargetUnit(",~whichAbility,", ",~target,")"
CastAbilityTargetUnitHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, unit target returns boolean"

CastAbilityTargetItem=CastAbilityTarget (Item)
CastAbilityTargetItem="CastAbilityTargetItem(",~whichAbility,", ",~target,")"
CastAbilityTargetItemHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, item target returns boolean"

CastAbilityTargetDestructable=CastAbilityTarget (Destructable)
CastAbilityTargetDestructable="CastAbilityTargetDestructable(",~whichAbility,", ",~target,")"
CastAbilityTargetDestructableHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, destructable target returns boolean"

EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI] native EnumUnitAbilities takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"

SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI] native SetBuffBaseIntegerFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI] native SetBuffBaseBooleanFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI] native SetBuffBaseRealFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native SetBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer index, integer value returns boolean"

AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native AddBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native SetBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, integer index, boolean value returns boolean"

AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native AddBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI] native SetBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, integer index, real value returns boolean"

AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI] native AddBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffIntegerFieldHint="[UjAPI] native SetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffBooleanFieldHint="[UjAPI] native SetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffRealFieldHint="[UjAPI] native SetBuffRealField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI] native SetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index, integer value returns boolean"

AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI] native AddBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI] native RemoveBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI] native SetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index, boolean value returns boolean"

AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI] native AddBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI] native RemoveBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffRealArrayFieldHint="[UjAPI] native SetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index, real value returns boolean"

AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffRealArrayFieldHint="[UjAPI] native AddBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI] native RemoveBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(",~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI] native ResetBuffFieldData takes buff whichBuff returns boolean"

CreateBuff=CreateBuff
CreateBuff="CreateBuff(",~buffTypeId,")"
CreateBuffHint="[UjAPI] native CreateBuff takes integer buffTypeId returns buff"

RemoveBuff=RemoveBuff
RemoveBuff="RemoveBuff(",~whichBuff,")"
RemoveBuffHint="[UjAPI] native RemoveBuff takes buff whichBuff returns nothing"

SetBuffOwner=SetBuffOwner
SetBuffOwner="SetBuffOwner(",~whichBuff,", ",~whichUnit,")"
SetBuffOwnerHint="[UjAPI] native SetBuffOwner takes buff whichBuff, unit whichUnit returns nothing"

SetBuffOwningAbility=SetBuffOwningAbility
SetBuffOwningAbility="SetBuffOwningAbility(",~whichBuff,", ",~whichAbility,")"
SetBuffOwningAbilityHint="[UjAPI] native SetBuffOwningAbility takes buff whichBuff, ability whichAbility returns nothing"

SetBuffDispellable=SetBuffDispellable
SetBuffDispellable="SetBuffDispellable(",~whichBuff,", ",~isSet,")"
SetBuffDispellableHint="[UjAPI] native SetBuffDispellable takes buff whichBuff, boolean isSet returns nothing"

SetBuffDrawEnabled=SetBuffDrawEnabled
SetBuffDrawEnabled="SetBuffDrawEnabled(",~whichBuff,", ",~isSet,")"
SetBuffDrawEnabledHint="[UjAPI] native SetBuffDrawEnabled takes buff whichBuff, boolean isSet returns nothing"

SetBuffLevel=SetBuffLevel
SetBuffLevel="SetBuffLevel(",~whichBuff,", ",~level,")"
SetBuffLevelHint="[UjAPI] native SetBuffLevel takes buff whichBuff, integer level returns nothing"

SetBuffRemainingDuration=SetBuffRemainingDuration
SetBuffRemainingDuration="SetBuffRemainingDuration(",~whichBuff,", ",~duration,")"
SetBuffRemainingDurationHint="[UjAPI] native SetBuffRemainingDuration takes buff whichBuff, real duration returns nothing"

PauseBuff=PauseBuff
PauseBuff="PauseBuff(",~whichBuff,", ",~pause,")"
PauseBuffHint="[UjAPI] native PauseBuff takes buff whichBuff, boolean pause returns nothing"

RefreshBuff=RefreshBuff
RefreshBuff="RefreshBuff(",~whichBuff,")"
RefreshBuffHint="[UjAPI] native RefreshBuff takes buff whichBuff returns nothing"

EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitBuffsHint="[UjAPI] native EnumUnitBuffs takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"

SetWar3ImageVisible=SetWar3ImageVisible
SetWar3ImageVisible="SetWar3ImageVisible(",~whichWar3Image,", ",~visible,")"
SetWar3ImageVisibleHint="[UjAPI] native SetWar3ImageVisible takes war3image whichWar3Image, boolean visible returns nothing"

SetWar3ImageInvulnerable=SetWar3ImageInvulnerable
SetWar3ImageInvulnerable="SetWar3ImageInvulnerable(",~whichWar3Image,", ",~invulnerable,")"
SetWar3ImageInvulnerableHint="[UjAPI] native SetWar3ImageInvulnerable takes war3image whichWar3Image, boolean invulnerable returns nothing"

SetWar3ImagePositionLoc=SetWar3ImagePositionLoc
SetWar3ImagePositionLoc="SetWar3ImagePositionLoc(",~whichWar3Image,", ",~whichLocation,")"
SetWar3ImagePositionLocHint="[UjAPI] native SetWar3ImagePositionLoc takes war3image whichWar3Image, location whichLocation returns nothing"

SetWar3ImagePosition=SetWar3ImagePosition
SetWar3ImagePosition="SetWar3ImagePosition(",~whichWar3Image,", ",~x,", ",~y,")"
SetWar3ImagePositionHint="[UjAPI] native SetWar3ImagePosition takes war3image whichWar3Image, real x, real y returns nothing"

SetWar3ImagePositionWithZ=SetWar3ImagePositionWithZ
SetWar3ImagePositionWithZ="SetWar3ImagePositionWithZ(",~whichWar3Image,", ",~x,", ",~y,", ",~z,")"
SetWar3ImagePositionWithZHint="[UjAPI] native SetWar3ImagePositionWithZ takes war3image whichWar3Image, real x, real y, real z returns nothing"

SetWar3ImageX=SetWar3ImageX
SetWar3ImageX="SetWar3ImageX(",~whichWar3Image,", ",~x,")"
SetWar3ImageXHint="[UjAPI] native SetWar3ImageX takes war3image whichWar3Image, real x returns nothing"

SetWar3ImageY=SetWar3ImageY
SetWar3ImageY="SetWar3ImageY(",~whichWar3Image,", ",~y,")"
SetWar3ImageYHint="[UjAPI] native SetWar3ImageY takes war3image whichWar3Image, real y returns nothing"

SetWar3ImageZ=SetWar3ImageZ
SetWar3ImageZ="SetWar3ImageZ(",~whichWar3Image,", ",~z,")"
SetWar3ImageZHint="[UjAPI] native SetWar3ImageZ takes war3image whichWar3Image, real z returns nothing"

ResetWar3ImageZ=ResetWar3ImageZ
ResetWar3ImageZ="ResetWar3ImageZ(",~whichWar3Image,")"
ResetWar3ImageZHint="[UjAPI] native ResetWar3ImageZ takes war3image whichWar3Image returns nothing"

SetWar3ImageHeight=SetWar3ImageHeight
SetWar3ImageHeight="SetWar3ImageHeight(",~whichWar3Image,", ",~height,")"
SetWar3ImageHeightHint="[UjAPI] native SetWar3ImageHeight takes war3image whichWar3Image, real height returns nothing"

SetWar3ImagePlayerColour=SetWar3ImagePlayerColour
SetWar3ImagePlayerColour="SetWar3ImagePlayerColour(",~whichWar3Image,", ",~color,")"
SetWar3ImagePlayerColourHint="[UjAPI] native SetWar3ImagePlayerColour takes war3image whichWar3Image, playercolor color returns nothing"

SetWar3ImageVertexColour=SetWar3ImageVertexColour
SetWar3ImageVertexColour="SetWar3ImageVertexColour(",~whichWar3Image,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWar3ImageVertexColourHint="[UjAPI] native SetWar3ImageVertexColour takes war3image whichWar3Image, integer red, integer green, integer blue, integer alpha returns nothing"

SetWar3ImageTimeScale=SetWar3ImageTimeScale
SetWar3ImageTimeScale="SetWar3ImageTimeScale(",~whichWar3Image,", ",~timeScale,")"
SetWar3ImageTimeScaleHint="[UjAPI] native SetWar3ImageTimeScale takes war3image whichWar3Image, real timeScale returns nothing"

SetWar3ImageScale=SetWar3ImageScale
SetWar3ImageScale="SetWar3ImageScale(",~whichWar3Image,", ",~scale,")"
SetWar3ImageScaleHint="[UjAPI] native SetWar3ImageScale takes war3image whichWar3Image, real scale returns nothing"

SetWar3ImageFacing=SetWar3ImageFacing
SetWar3ImageFacing="SetWar3ImageFacing(",~whichWar3Image,", ",~facing,", ",~isInstant,")"
SetWar3ImageFacingHint="[UjAPI] native SetWar3ImageFacing takes war3image whichWar3Image, real facing, boolean isInstant returns nothing"

SetWar3ImageMatrixScale=SetWar3ImageMatrixScale
SetWar3ImageMatrixScale="SetWar3ImageMatrixScale(",~whichWar3Image,", ",~x,", ",~y,", ",~z,")"
SetWar3ImageMatrixScaleHint="[UjAPI] native SetWar3ImageMatrixScale takes war3image whichWar3Image, real x, real y, real z returns nothing"

ResetWar3ImageMatrix=ResetWar3ImageMatrix
ResetWar3ImageMatrix="ResetWar3ImageMatrix(",~whichWar3Image,")"
ResetWar3ImageMatrixHint="[UjAPI] native ResetWar3ImageMatrix takes war3image whichWar3Image returns nothing"

SetWar3ImageOrientationEx=SetWar3ImageOrientationEx
SetWar3ImageOrientationEx="SetWar3ImageOrientationEx(",~whichWar3Image,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWar3ImageOrientationExHint="[UjAPI] native SetWar3ImageOrientationEx takes war3image whichWar3Image, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetWar3ImageOrientation=SetWar3ImageOrientation
SetWar3ImageOrientation="SetWar3ImageOrientation(",~whichWar3Image,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWar3ImageOrientationHint="[UjAPI] native SetWar3ImageOrientation takes war3image whichWar3Image, real yaw, real pitch, real roll returns nothing"

SetWar3ImageYaw=SetWar3ImageYaw
SetWar3ImageYaw="SetWar3ImageYaw(",~whichWar3Image,", ",~yaw,")"
SetWar3ImageYawHint="[UjAPI] native SetWar3ImageYaw takes war3image whichWar3Image, real yaw returns nothing"

SetWar3ImagePitch=SetWar3ImagePitch
SetWar3ImagePitch="SetWar3ImagePitch(",~whichWar3Image,", ",~pitch,")"
SetWar3ImagePitchHint="[UjAPI] native SetWar3ImagePitch takes war3image whichWar3Image, real pitch returns nothing"

SetWar3ImageRoll=SetWar3ImageRoll
SetWar3ImageRoll="SetWar3ImageRoll(",~whichWar3Image,", ",~roll,")"
SetWar3ImageRollHint="[UjAPI] native SetWar3ImageRoll takes war3image whichWar3Image, real roll returns nothing"

SetWar3ImageModel=SetWar3ImageModel
SetWar3ImageModel="SetWar3ImageModel(",~whichWar3Image,", ",~modelFile,")"
SetWar3ImageModelHint="[UjAPI] native SetWar3ImageModel takes war3image whichWar3Image, string modelFile returns nothing"

SetWar3ImageModelEx=SetWar3ImageModelEx
SetWar3ImageModelEx="SetWar3ImageModelEx(",~whichWar3Image,", ",~modelFile,", ",~playerId,")"
SetWar3ImageModelExHint="[UjAPI] native SetWar3ImageModelEx takes war3image whichWar3Image, string modelFile, integer playerId returns nothing"

SetWar3ImageMaterialTexture=SetWar3ImageMaterialTexture
SetWar3ImageMaterialTexture="SetWar3ImageMaterialTexture(",~whichWar3Image,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWar3ImageMaterialTextureHint="[UjAPI] native SetWar3ImageMaterialTexture takes war3image whichWar3Image, string textureName, integer materialId, integer textureIndex returns nothing"

SetWar3ImageTexture=SetWar3ImageTexture
SetWar3ImageTexture="SetWar3ImageTexture(",~whichWar3Image,", ",~textureName,", ",~textureIndex,")"
SetWar3ImageTextureHint="[UjAPI] native SetWar3ImageTexture takes war3image whichWar3Image, string textureName, integer textureIndex returns nothing"

SetWar3ImageReplaceableTexture=SetWar3ImageReplaceableTexture
SetWar3ImageReplaceableTexture="SetWar3ImageReplaceableTexture(",~whichWar3Image,", ",~textureName,", ",~textureIndex,")"
SetWar3ImageReplaceableTextureHint="[UjAPI] native SetWar3ImageReplaceableTexture takes war3image whichWar3Image, string textureName, integer textureIndex returns nothing"

SetWar3ImageAnimationWithRarityByIndex=SetWar3ImageAnimationWithRarityByIndex
SetWar3ImageAnimationWithRarityByIndex="SetWar3ImageAnimationWithRarityByIndex(",~whichWar3Image,", ",~animIndex,", ",~rarity,")"
SetWar3ImageAnimationWithRarityByIndexHint="[UjAPI] native SetWar3ImageAnimationWithRarityByIndex takes war3image whichWar3Image, integer animIndex, raritycontrol rarity returns nothing"

SetWar3ImageAnimationWithRarity=SetWar3ImageAnimationWithRarity
SetWar3ImageAnimationWithRarity="SetWar3ImageAnimationWithRarity(",~whichWar3Image,", ",~animationName,", ",~rarity,")"
SetWar3ImageAnimationWithRarityHint="[UjAPI] native SetWar3ImageAnimationWithRarity takes war3image whichWar3Image, string animationName, raritycontrol rarity returns nothing"

SetWar3ImageAnimationByIndex=SetWar3ImageAnimationByIndex
SetWar3ImageAnimationByIndex="SetWar3ImageAnimationByIndex(",~whichWar3Image,", ",~animIndex,")"
SetWar3ImageAnimationByIndexHint="[UjAPI] native SetWar3ImageAnimationByIndex takes war3image whichWar3Image, integer animIndex returns nothing"

SetWar3ImageAnimation=SetWar3ImageAnimation
SetWar3ImageAnimation="SetWar3ImageAnimation(",~whichWar3Image,", ",~animationName,")"
SetWar3ImageAnimationHint="[UjAPI] native SetWar3ImageAnimation takes war3image whichWar3Image, string animationName returns nothing"

QueueWar3ImageAnimationByIndex=QueueWar3ImageAnimationByIndex
QueueWar3ImageAnimationByIndex="QueueWar3ImageAnimationByIndex(",~whichWar3Image,", ",~animIndex,")"
QueueWar3ImageAnimationByIndexHint="[UjAPI] native QueueWar3ImageAnimationByIndex takes war3image whichWar3Image, integer animIndex returns nothing"

QueueWar3ImageAnimation=QueueWar3ImageAnimation
QueueWar3ImageAnimation="QueueWar3ImageAnimation(",~whichWar3Image,", ",~animationName,")"
QueueWar3ImageAnimationHint="[UjAPI] native QueueWar3ImageAnimation takes war3image whichWar3Image, string animationName returns nothing"

SetWar3ImageAnimationOffsetPercent=SetWar3ImageAnimationOffsetPercent
SetWar3ImageAnimationOffsetPercent="SetWar3ImageAnimationOffsetPercent(",~whichWar3Image,", ",~percent,")"
SetWar3ImageAnimationOffsetPercentHint="[UjAPI] native SetWar3ImageAnimationOffsetPercent takes war3image whichWar3Image, real percent returns nothing"

SetWar3ImageAnimationFrozen=SetWar3ImageAnimationFrozen
SetWar3ImageAnimationFrozen="SetWar3ImageAnimationFrozen(",~whichWar3Image,", ",~isFreeze,")"
SetWar3ImageAnimationFrozenHint="[UjAPI] native SetWar3ImageAnimationFrozen takes war3image whichWar3Image, boolean isFreeze returns nothing"

CreateSprite=CreateSprite
CreateSprite="CreateSprite(",~isUber,")"
CreateSpriteHint="[UjAPI] native CreateSprite takes boolean isUber returns sprite"

DetachSprite=DetachSprite
DetachSprite="DetachSprite(",~whichSprite,")"
DetachSpriteHint="[UjAPI] native DetachSprite takes sprite whichSprite returns nothing"

RemoveSprite=RemoveSprite
RemoveSprite="RemoveSprite(",~whichSprite,")"
RemoveSpriteHint="[UjAPI] native RemoveSprite takes sprite whichSprite returns nothing"

SetSpritePosition=SetSpritePosition
SetSpritePosition="SetSpritePosition(",~whichSprite,", ",~x,", ",~y,")"
SetSpritePositionHint="[UjAPI] native SetSpritePosition takes sprite whichSprite, real x, real y returns nothing"

SetSpritePositionWithZ=SetSpritePositionWithZ
SetSpritePositionWithZ="SetSpritePositionWithZ(",~whichSprite,", ",~x,", ",~y,", ",~z,")"
SetSpritePositionWithZHint="[UjAPI] native SetSpritePositionWithZ takes sprite whichSprite, real x, real y, real z returns nothing"

SetSpritePositionLoc=SetSpritePositionLoc
SetSpritePositionLoc="SetSpritePositionLoc(",~whichSprite,", ",~loc,")"
SetSpritePositionLocHint="[UjAPI] native SetSpritePositionLoc takes sprite whichSprite, location loc returns nothing"

SetSpriteX=SetSpriteX
SetSpriteX="SetSpriteX(",~whichSprite,", ",~x,")"
SetSpriteXHint="[UjAPI] native SetSpriteX takes sprite whichSprite, real x returns nothing"

SetSpriteY=SetSpriteY
SetSpriteY="SetSpriteY(",~whichSprite,", ",~y,")"
SetSpriteYHint="[UjAPI] native SetSpriteY takes sprite whichSprite, real y returns nothing"

SetSpriteZ=SetSpriteZ
SetSpriteZ="SetSpriteZ(",~whichSprite,", ",~z,")"
SetSpriteZHint="[UjAPI] native SetSpriteZ takes sprite whichSprite, real z returns nothing"

SetSpriteHeight=SetSpriteHeight
SetSpriteHeight="SetSpriteHeight(",~whichSprite,", ",~height,")"
SetSpriteHeightHint="[UjAPI] native SetSpriteHeight takes sprite whichSprite, real height returns nothing"

SetSpriteScale=SetSpriteScale
SetSpriteScale="SetSpriteScale(",~whichSprite,", ",~scale,")"
SetSpriteScaleHint="[UjAPI] native SetSpriteScale takes sprite whichSprite, real scale returns nothing"

SetSpriteTimeScale=SetSpriteTimeScale
SetSpriteTimeScale="SetSpriteTimeScale(",~whichSprite,", ",~timescale,")"
SetSpriteTimeScaleHint="[UjAPI] native SetSpriteTimeScale takes sprite whichSprite, real timescale returns nothing"

SetSpritePlayerColour=SetSpritePlayerColour
SetSpritePlayerColour="SetSpritePlayerColour(",~whichSprite,", ",~color,")"
SetSpritePlayerColourHint="[UjAPI] native SetSpritePlayerColour takes sprite whichSprite, playercolor color returns nothing"

SetSpriteColour=SetSpriteColour
SetSpriteColour="SetSpriteColour(",~whichSprite,", ",~colour,")"
SetSpriteColourHint="[UjAPI] native SetSpriteColour takes sprite whichSprite, integer colour returns nothing"

SetSpriteAlpha=SetSpriteAlpha
SetSpriteAlpha="SetSpriteAlpha(",~whichSprite,", ",~alpha,")"
SetSpriteAlphaHint="[UjAPI] native SetSpriteAlpha takes sprite whichSprite, integer alpha returns nothing"

SetSpriteVertexColour=SetSpriteVertexColour
SetSpriteVertexColour="SetSpriteVertexColour(",~whichSprite,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetSpriteVertexColourHint="[UjAPI] native SetSpriteVertexColour takes sprite whichSprite, integer red, integer green, integer blue, integer alpha returns nothing"

SetSpriteMatrixScale=SetSpriteMatrixScale
SetSpriteMatrixScale="SetSpriteMatrixScale(",~whichSprite,", ",~x,", ",~y,", ",~z,")"
SetSpriteMatrixScaleHint="[UjAPI] native SetSpriteMatrixScale takes sprite whichSprite, real x, real y, real z returns nothing"

ResetSpriteMatrix=ResetSpriteMatrix
ResetSpriteMatrix="ResetSpriteMatrix(",~whichSprite,")"
ResetSpriteMatrixHint="[UjAPI] native ResetSpriteMatrix takes sprite whichSprite returns nothing"

SetSpriteOrientationEx=SetSpriteOrientationEx
SetSpriteOrientationEx="SetSpriteOrientationEx(",~whichSprite,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetSpriteOrientationExHint="[UjAPI] native SetSpriteOrientationEx takes sprite whichSprite, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetSpriteYaw=SetSpriteYaw
SetSpriteYaw="SetSpriteYaw(",~whichSprite,", ",~yaw,")"
SetSpriteYawHint="[UjAPI] native SetSpriteYaw takes sprite whichSprite, real yaw returns nothing"

SetSpriteFacing=SetSpriteFacing
SetSpriteFacing="SetSpriteFacing(",~whichSprite,", ",~facing,")"
SetSpriteFacingHint="[UjAPI] native SetSpriteFacing takes sprite whichSprite, real facing returns nothing"

SetSpritePitch=SetSpritePitch
SetSpritePitch="SetSpritePitch(",~whichSprite,", ",~pitch,")"
SetSpritePitchHint="[UjAPI] native SetSpritePitch takes sprite whichSprite, real pitch returns nothing"

SetSpriteRoll=SetSpriteRoll
SetSpriteRoll="SetSpriteRoll(",~whichSprite,", ",~roll,")"
SetSpriteRollHint="[UjAPI] native SetSpriteRoll takes sprite whichSprite, real roll returns nothing"

SetSpriteOrientation=SetSpriteOrientation
SetSpriteOrientation="SetSpriteOrientation(",~whichSprite,", ",~yaw,", ",~pitch,", ",~roll,")"
SetSpriteOrientationHint="[UjAPI] native SetSpriteOrientation takes sprite whichSprite, real yaw, real pitch, real roll returns nothing"

SetSpriteMaterialTexture=SetSpriteMaterialTexture
SetSpriteMaterialTexture="SetSpriteMaterialTexture(",~whichSprite,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetSpriteMaterialTextureHint="[UjAPI] native SetSpriteMaterialTexture takes sprite whichSprite, string textureName, integer materialId, integer textureIndex returns nothing"

SetSpriteTexture=SetSpriteTexture
SetSpriteTexture="SetSpriteTexture(",~whichSprite,", ",~textureName,", ",~textureIndex,")"
SetSpriteTextureHint="[UjAPI] native SetSpriteTexture takes sprite whichSprite, string textureName, integer textureIndex returns nothing"

SetSpriteReplaceableTexture=SetSpriteReplaceableTexture
SetSpriteReplaceableTexture="SetSpriteReplaceableTexture(",~whichSprite,", ",~textureName,", ",~textureIndex,")"
SetSpriteReplaceableTextureHint="[UjAPI] native SetSpriteReplaceableTexture takes sprite whichSprite, string textureName, integer textureIndex returns nothing"

SetSpriteModel=SetSpriteModel
SetSpriteModel="SetSpriteModel(",~whichSprite,", ",~modelName,")"
SetSpriteModelHint="[UjAPI] native SetSpriteModel takes sprite whichSprite, string modelName returns nothing"

SetSpriteModelEx=SetSpriteModelEx
SetSpriteModelEx="SetSpriteModelEx(",~whichSprite,", ",~modelName,", ",~playerColour,")"
SetSpriteModelExHint="[UjAPI] native SetSpriteModelEx takes sprite whichSprite, string modelName, integer playerColour returns nothing"

SetSpriteAnimationWithRarityByIndex=SetSpriteAnimationWithRarityByIndex
SetSpriteAnimationWithRarityByIndex="SetSpriteAnimationWithRarityByIndex(",~whichSprite,", ",~animIndex,", ",~rarity,")"
SetSpriteAnimationWithRarityByIndexHint="[UjAPI] native SetSpriteAnimationWithRarityByIndex takes sprite whichSprite, integer animIndex, raritycontrol rarity returns nothing"

SetSpriteAnimationWithRarity=SetSpriteAnimationWithRarity
SetSpriteAnimationWithRarity="SetSpriteAnimationWithRarity(",~whichSprite,", ",~animationName,", ",~rarity,")"
SetSpriteAnimationWithRarityHint="[UjAPI] native SetSpriteAnimationWithRarity takes sprite whichSprite, string animationName, raritycontrol rarity returns nothing"

SetSpriteAnimationByIndex=SetSpriteAnimationByIndex
SetSpriteAnimationByIndex="SetSpriteAnimationByIndex(",~whichSprite,", ",~animIndex,")"
SetSpriteAnimationByIndexHint="[UjAPI] native SetSpriteAnimationByIndex takes sprite whichSprite, integer animIndex returns nothing"

SetSpriteAnimation=SetSpriteAnimation
SetSpriteAnimation="SetSpriteAnimation(",~whichSprite,", ",~animationName,")"
SetSpriteAnimationHint="[UjAPI] native SetSpriteAnimation takes sprite whichSprite, string animationName returns nothing"

QueueSpriteAnimationByIndex=QueueSpriteAnimationByIndex
QueueSpriteAnimationByIndex="QueueSpriteAnimationByIndex(",~whichSprite,", ",~animIndex,")"
QueueSpriteAnimationByIndexHint="[UjAPI] native QueueSpriteAnimationByIndex takes sprite whichSprite, integer animIndex returns nothing"

QueueSpriteAnimation=QueueSpriteAnimation
QueueSpriteAnimation="QueueSpriteAnimation(",~whichSprite,", ",~animationName,")"
QueueSpriteAnimationHint="[UjAPI] native QueueSpriteAnimation takes sprite whichSprite, string animationName returns nothing"

SetSpriteAnimationOffsetPercent=SetSpriteAnimationOffsetPercent
SetSpriteAnimationOffsetPercent="SetSpriteAnimationOffsetPercent(",~whichSprite,", ",~percent,")"
SetSpriteAnimationOffsetPercentHint="[UjAPI] native SetSpriteAnimationOffsetPercent takes sprite whichSprite, real percent returns nothing"

SetSpriteAnimationFrozen=SetSpriteAnimationFrozen
SetSpriteAnimationFrozen="SetSpriteAnimationFrozen(",~whichSprite,", ",~isFreeze,")"
SetSpriteAnimationFrozenHint="[UjAPI] native SetSpriteAnimationFrozen takes sprite whichSprite, boolean isFreeze returns nothing"

CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadHint="[UjAPI] native CreateDoodad takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns doodad"

CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(",~objectTypeId,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadZHint="[UjAPI] native CreateDoodadZ takes integer objectTypeId, real x, real y, real z, real facing, real scale, integer variation returns doodad"

RemoveDoodad=RemoveDoodad
RemoveDoodad="RemoveDoodad(",~whichDoodad,")"
RemoveDoodadHint="[UjAPI] native RemoveDoodad takes doodad whichDoodad returns nothing"

SetDoodadColour=SetDoodadColour
SetDoodadColour="SetDoodadColour(",~whichDoodad,", ",~colour,")"
SetDoodadColourHint="[UjAPI] native SetDoodadColour takes doodad whichDoodad, integer colour returns nothing"

SetDoodadVertexColour=SetDoodadVertexColour
SetDoodadVertexColour="SetDoodadVertexColour(",~whichDoodad,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetDoodadVertexColourHint="[UjAPI] native SetDoodadVertexColour takes doodad whichDoodad, integer red, integer green, integer blue, integer alpha returns nothing"

SetDoodadScale=SetDoodadScale
SetDoodadScale="SetDoodadScale(",~whichDoodad,", ",~scale,")"
SetDoodadScaleHint="[UjAPI] native SetDoodadScale takes doodad whichDoodad, real scale returns nothing"

SetDoodadTimeScale=SetDoodadTimeScale
SetDoodadTimeScale="SetDoodadTimeScale(",~whichDoodad,", ",~timeScale,")"
SetDoodadTimeScaleHint="[UjAPI] native SetDoodadTimeScale takes doodad whichDoodad, real timeScale returns nothing"

SetDoodadX=SetDoodadX
SetDoodadX="SetDoodadX(",~whichDoodad,", ",~x,")"
SetDoodadXHint="[UjAPI] native SetDoodadX takes doodad whichDoodad, real x returns nothing"

SetDoodadY=SetDoodadY
SetDoodadY="SetDoodadY(",~whichDoodad,", ",~y,")"
SetDoodadYHint="[UjAPI] native SetDoodadY takes doodad whichDoodad, real y returns nothing"

SetDoodadZ=SetDoodadZ
SetDoodadZ="SetDoodadZ(",~whichDoodad,", ",~z,")"
SetDoodadZHint="[UjAPI] native SetDoodadZ takes doodad whichDoodad, real z returns nothing"

SetDoodadPosition=SetDoodadPosition
SetDoodadPosition="SetDoodadPosition(",~whichDoodad,", ",~x,", ",~y,")"
SetDoodadPositionHint="[UjAPI] native SetDoodadPosition takes doodad whichDoodad, real x, real y returns nothing"

SetDoodadPositionWithZ=SetDoodadPositionWithZ
SetDoodadPositionWithZ="SetDoodadPositionWithZ(",~whichDoodad,", ",~x,", ",~y,", ",~z,")"
SetDoodadPositionWithZHint="[UjAPI] native SetDoodadPositionWithZ takes doodad whichDoodad, real x, real y, real z returns nothing"

SetDoodadPositionLoc=SetDoodadPositionLoc
SetDoodadPositionLoc="SetDoodadPositionLoc(",~whichDoodad,", ",~whichLocation,")"
SetDoodadPositionLocHint="[UjAPI] native SetDoodadPositionLoc takes doodad whichDoodad, location whichLocation returns nothing"

SetDoodadMatrixScale=SetDoodadMatrixScale
SetDoodadMatrixScale="SetDoodadMatrixScale(",~whichDoodad,", ",~x,", ",~y,", ",~z,")"
SetDoodadMatrixScaleHint="[UjAPI] native SetDoodadMatrixScale takes doodad whichDoodad, real x, real y, real z returns nothing"

ResetDoodadMatrix=ResetDoodadMatrix
ResetDoodadMatrix="ResetDoodadMatrix(",~whichDoodad,")"
ResetDoodadMatrixHint="[UjAPI] native ResetDoodadMatrix takes doodad whichDoodad returns nothing"

SetDoodadOrientationEx=SetDoodadOrientationEx
SetDoodadOrientationEx="SetDoodadOrientationEx(",~whichDoodad,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetDoodadOrientationExHint="[UjAPI] native SetDoodadOrientationEx takes doodad whichDoodad, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetDoodadYaw=SetDoodadYaw
SetDoodadYaw="SetDoodadYaw(",~whichDoodad,", ",~yaw,")"
SetDoodadYawHint="[UjAPI] native SetDoodadYaw takes doodad whichDoodad, real yaw returns nothing"

SetDoodadFacing=SetDoodadFacing
SetDoodadFacing="SetDoodadFacing(",~whichDoodad,", ",~facing,")"
SetDoodadFacingHint="[UjAPI] native SetDoodadFacing takes doodad whichDoodad, real facing returns nothing"

SetDoodadPitch=SetDoodadPitch
SetDoodadPitch="SetDoodadPitch(",~whichDoodad,", ",~pitch,")"
SetDoodadPitchHint="[UjAPI] native SetDoodadPitch takes doodad whichDoodad, real pitch returns nothing"

SetDoodadRoll=SetDoodadRoll
SetDoodadRoll="SetDoodadRoll(",~whichDoodad,", ",~roll,")"
SetDoodadRollHint="[UjAPI] native SetDoodadRoll takes doodad whichDoodad, real roll returns nothing"

SetDoodadOrientation=SetDoodadOrientation
SetDoodadOrientation="SetDoodadOrientation(",~whichDoodad,", ",~yaw,", ",~pitch,", ",~roll,")"
SetDoodadOrientationHint="[UjAPI] native SetDoodadOrientation takes doodad whichDoodad, real yaw, real pitch, real roll returns nothing"

SetDoodadPlayerColour=SetDoodadPlayerColour
SetDoodadPlayerColour="SetDoodadPlayerColour(",~whichDoodad,", ",~color,")"
SetDoodadPlayerColourHint="[UjAPI] native SetDoodadPlayerColour takes doodad whichDoodad, playercolor color returns nothing"

SetDoodadModel=SetDoodadModel
SetDoodadModel="SetDoodadModel(",~whichDoodad,", ",~modelFile,")"
SetDoodadModelHint="[UjAPI] native SetDoodadModel takes doodad whichDoodad, string modelFile returns nothing"

SetDoodadModelEx=SetDoodadModelEx
SetDoodadModelEx="SetDoodadModelEx(",~whichDoodad,", ",~modelFile,", ",~playerId,")"
SetDoodadModelExHint="[UjAPI] native SetDoodadModelEx takes doodad whichDoodad, string modelFile, integer playerId returns nothing"

SetDoodadMaterialTexture=SetDoodadMaterialTexture
SetDoodadMaterialTexture="SetDoodadMaterialTexture(",~whichDoodad,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetDoodadMaterialTextureHint="[UjAPI] native SetDoodadMaterialTexture takes doodad whichDoodad, string textureName, integer materialId, integer textureIndex returns nothing"

SetDoodadTexture=SetDoodadTexture
SetDoodadTexture="SetDoodadTexture(",~whichDoodad,", ",~textureName,", ",~textureIndex,")"
SetDoodadTextureHint="[UjAPI] native SetDoodadTexture takes doodad whichDoodad, string textureName, integer textureIndex returns nothing"

SetDoodadReplaceableTexture=SetDoodadReplaceableTexture
SetDoodadReplaceableTexture="SetDoodadReplaceableTexture(",~whichDoodad,", ",~textureName,", ",~textureIndex,")"
SetDoodadReplaceableTextureHint="[UjAPI] native SetDoodadReplaceableTexture takes doodad whichDoodad, string textureName, integer textureIndex returns nothing"

ShowDoodad=ShowDoodad
ShowDoodad="ShowDoodad(",~whichDoodad,", ",~isShow,")"
ShowDoodadHint="[UjAPI] native ShowDoodad takes doodad whichDoodad, boolean isShow returns nothing"

SetDoodadAnimationWithRarityByIndex=SetDoodadAnimationWithRarityByIndex
SetDoodadAnimationWithRarityByIndex="SetDoodadAnimationWithRarityByIndex(",~whichDoodad,", ",~animIndex,", ",~rarity,")"
SetDoodadAnimationWithRarityByIndexHint="[UjAPI] native SetDoodadAnimationWithRarityByIndex takes doodad whichDoodad, integer animIndex, raritycontrol rarity returns nothing"

SetDoodadAnimationWithRarity=SetDoodadAnimationWithRarity
SetDoodadAnimationWithRarity="SetDoodadAnimationWithRarity(",~whichDoodad,", ",~animationName,", ",~rarity,")"
SetDoodadAnimationWithRarityHint="[UjAPI] native SetDoodadAnimationWithRarity takes doodad whichDoodad, string animationName, raritycontrol rarity returns nothing"

SetDoodadAnimationByIndex=SetDoodadAnimationByIndex
SetDoodadAnimationByIndex="SetDoodadAnimationByIndex(",~whichDoodad,", ",~animIndex,")"
SetDoodadAnimationByIndexHint="[UjAPI] native SetDoodadAnimationByIndex takes doodad whichDoodad, integer animIndex returns nothing"

SetDoodadAnimationEx=SetDoodadAnimationEx
SetDoodadAnimationEx="SetDoodadAnimationEx(",~whichDoodad,", ",~animationName,")"
SetDoodadAnimationExHint="[UjAPI] native SetDoodadAnimationEx takes doodad whichDoodad, string animationName returns nothing"

QueueDoodadAnimationByIndex=QueueDoodadAnimationByIndex
QueueDoodadAnimationByIndex="QueueDoodadAnimationByIndex(",~whichDoodad,", ",~animIndex,")"
QueueDoodadAnimationByIndexHint="[UjAPI] native QueueDoodadAnimationByIndex takes doodad whichDoodad, integer animIndex returns nothing"

QueueDoodadAnimation=QueueDoodadAnimation
QueueDoodadAnimation="QueueDoodadAnimation(",~whichDoodad,", ",~animationName,")"
QueueDoodadAnimationHint="[UjAPI] native QueueDoodadAnimation takes doodad whichDoodad, string animationName returns nothing"

SetDoodadAnimationOffsetPercent=SetDoodadAnimationOffsetPercent
SetDoodadAnimationOffsetPercent="SetDoodadAnimationOffsetPercent(",~whichDoodad,", ",~percent,")"
SetDoodadAnimationOffsetPercentHint="[UjAPI] native SetDoodadAnimationOffsetPercent takes doodad whichDoodad, real percent returns nothing"

SetDoodadAnimationFrozen=SetDoodadAnimationFrozen
SetDoodadAnimationFrozen="SetDoodadAnimationFrozen(",~whichDoodad,", ",~isFreeze,")"
SetDoodadAnimationFrozenHint="[UjAPI] native SetDoodadAnimationFrozen takes doodad whichDoodad, boolean isFreeze returns nothing"

EnumDoodadsInRange=EnumDoodadsInRange
EnumDoodadsInRange="EnumDoodadsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRangeHint="[UjAPI] native EnumDoodadsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

EnumDoodadsInRangeEx=EnumDoodadsInRangeEx
EnumDoodadsInRangeEx="EnumDoodadsInRangeEx(",~x,", ",~y,", ",~radius,", ",~typeId,", ",~nearestOnly,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRangeExHint="[UjAPI] native EnumDoodadsInRangeEx takes real x, real y, real radius, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc returns nothing"

EnumDoodadsInRect=EnumDoodadsInRect
EnumDoodadsInRect="EnumDoodadsInRect(",~whichRect,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRectHint="[UjAPI] native EnumDoodadsInRect takes rect whichRect, boolexpr filter, code handlerFunc returns nothing"

EnumDoodadsInRectEx=EnumDoodadsInRectEx
EnumDoodadsInRectEx="EnumDoodadsInRectEx(",~whichRect,", ",~typeId,", ",~nearestOnly,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRectExHint="[UjAPI] native EnumDoodadsInRectEx takes rect whichRect, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc returns nothing"

SetSpecialEffectVisible=SetSpecialEffectVisible
SetSpecialEffectVisible="SetSpecialEffectVisible(",~whichEffect,", ",~visibility,")"
SetSpecialEffectVisibleHint="[UjAPI] native SetSpecialEffectVisible takes effect whichEffect, boolean visibility returns nothing"

SetSpecialEffectPosition=SetSpecialEffectPosition
SetSpecialEffectPosition="SetSpecialEffectPosition(",~whichEffect,", ",~x,", ",~y,")"
SetSpecialEffectPositionHint="[UjAPI] native SetSpecialEffectPosition takes effect whichEffect, real x, real y returns nothing"

SetSpecialEffectPositionWithZ=SetSpecialEffectPositionWithZ
SetSpecialEffectPositionWithZ="SetSpecialEffectPositionWithZ(",~whichEffect,", ",~x,", ",~y,", ",~z,")"
SetSpecialEffectPositionWithZHint="[UjAPI] native SetSpecialEffectPositionWithZ takes effect whichEffect, real x, real y, real z returns nothing"

SetSpecialEffectPositionLoc=SetSpecialEffectPositionLoc
SetSpecialEffectPositionLoc="SetSpecialEffectPositionLoc(",~whichEffect,", ",~loc,")"
SetSpecialEffectPositionLocHint="[UjAPI] native SetSpecialEffectPositionLoc takes effect whichEffect, location loc returns nothing"

SetSpecialEffectX=SetSpecialEffectX
SetSpecialEffectX="SetSpecialEffectX(",~whichEffect,", ",~x,")"
SetSpecialEffectXHint="[UjAPI] native SetSpecialEffectX takes effect whichEffect, real x returns nothing"

SetSpecialEffectY=SetSpecialEffectY
SetSpecialEffectY="SetSpecialEffectY(",~whichEffect,", ",~y,")"
SetSpecialEffectYHint="[UjAPI] native SetSpecialEffectY takes effect whichEffect, real y returns nothing"

SetSpecialEffectZ=SetSpecialEffectZ
SetSpecialEffectZ="SetSpecialEffectZ(",~whichEffect,", ",~z,")"
SetSpecialEffectZHint="[UjAPI] native SetSpecialEffectZ takes effect whichEffect, real z returns nothing"

SetSpecialEffectHeight=SetSpecialEffectHeight
SetSpecialEffectHeight="SetSpecialEffectHeight(",~whichEffect,", ",~height,")"
SetSpecialEffectHeightHint="[UjAPI] native SetSpecialEffectHeight takes effect whichEffect, real height returns nothing"

SetSpecialEffectScale=SetSpecialEffectScale
SetSpecialEffectScale="SetSpecialEffectScale(",~whichEffect,", ",~scale,")"
SetSpecialEffectScaleHint="[UjAPI] native SetSpecialEffectScale takes effect whichEffect, real scale returns nothing"

SetSpecialEffectTimeScale=SetSpecialEffectTimeScale
SetSpecialEffectTimeScale="SetSpecialEffectTimeScale(",~whichEffect,", ",~timescale,")"
SetSpecialEffectTimeScaleHint="[UjAPI] native SetSpecialEffectTimeScale takes effect whichEffect, real timescale returns nothing"

SetSpecialEffectPlayerColour=SetSpecialEffectPlayerColour
SetSpecialEffectPlayerColour="SetSpecialEffectPlayerColour(",~whichEffect,", ",~color,")"
SetSpecialEffectPlayerColourHint="[UjAPI] native SetSpecialEffectPlayerColour takes effect whichEffect, playercolor color returns nothing"

SetSpecialEffectColour=SetSpecialEffectColour
SetSpecialEffectColour="SetSpecialEffectColour(",~whichEffect,", ",~colour,")"
SetSpecialEffectColourHint="[UjAPI] native SetSpecialEffectColour takes effect whichEffect, integer colour returns nothing"

SetSpecialEffectAlpha=SetSpecialEffectAlpha
SetSpecialEffectAlpha="SetSpecialEffectAlpha(",~whichEffect,", ",~alpha,")"
SetSpecialEffectAlphaHint="[UjAPI] native SetSpecialEffectAlpha takes effect whichEffect, integer alpha returns nothing"

SetSpecialEffectVertexColour=SetSpecialEffectVertexColour
SetSpecialEffectVertexColour="SetSpecialEffectVertexColour(",~whichEffect,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetSpecialEffectVertexColourHint="[UjAPI] native SetSpecialEffectVertexColour takes effect whichEffect, integer red, integer green, integer blue, integer alpha returns nothing"

SetSpecialEffectMatrixScale=SetSpecialEffectMatrixScale
SetSpecialEffectMatrixScale="SetSpecialEffectMatrixScale(",~whichEffect,", ",~x,", ",~y,", ",~z,")"
SetSpecialEffectMatrixScaleHint="[UjAPI] native SetSpecialEffectMatrixScale takes effect whichEffect, real x, real y, real z returns nothing"

ResetSpecialEffectMatrix=ResetSpecialEffectMatrix
ResetSpecialEffectMatrix="ResetSpecialEffectMatrix(",~whichEffect,")"
ResetSpecialEffectMatrixHint="[UjAPI] native ResetSpecialEffectMatrix takes effect whichEffect returns nothing"

SetSpecialEffectOrientationEx=SetSpecialEffectOrientationEx
SetSpecialEffectOrientationEx="SetSpecialEffectOrientationEx(",~whichEffect,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetSpecialEffectOrientationExHint="[UjAPI] native SetSpecialEffectOrientationEx takes effect whichEffect, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetSpecialEffectYaw=SetSpecialEffectYaw
SetSpecialEffectYaw="SetSpecialEffectYaw(",~whichEffect,", ",~yaw,")"
SetSpecialEffectYawHint="[UjAPI] native SetSpecialEffectYaw takes effect whichEffect, real yaw returns nothing"

SetSpecialEffectFacing=SetSpecialEffectFacing
SetSpecialEffectFacing="SetSpecialEffectFacing(",~whichEffect,", ",~facing,")"
SetSpecialEffectFacingHint="[UjAPI] native SetSpecialEffectFacing takes effect whichEffect, real facing returns nothing"

SetSpecialEffectPitch=SetSpecialEffectPitch
SetSpecialEffectPitch="SetSpecialEffectPitch(",~whichEffect,", ",~pitch,")"
SetSpecialEffectPitchHint="[UjAPI] native SetSpecialEffectPitch takes effect whichEffect, real pitch returns nothing"

SetSpecialEffectRoll=SetSpecialEffectRoll
SetSpecialEffectRoll="SetSpecialEffectRoll(",~whichEffect,", ",~roll,")"
SetSpecialEffectRollHint="[UjAPI] native SetSpecialEffectRoll takes effect whichEffect, real roll returns nothing"

SetSpecialEffectOrientation=SetSpecialEffectOrientation
SetSpecialEffectOrientation="SetSpecialEffectOrientation(",~whichEffect,", ",~yaw,", ",~pitch,", ",~roll,")"
SetSpecialEffectOrientationHint="[UjAPI] native SetSpecialEffectOrientation takes effect whichEffect, real yaw, real pitch, real roll returns nothing"

SetSpecialEffectMaterialTexture=SetSpecialEffectMaterialTexture
SetSpecialEffectMaterialTexture="SetSpecialEffectMaterialTexture(",~whichEffect,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetSpecialEffectMaterialTextureHint="[UjAPI] native SetSpecialEffectMaterialTexture takes effect whichEffect, string textureName, integer materialId, integer textureIndex returns nothing"

SetSpecialEffectTexture=SetSpecialEffectTexture
SetSpecialEffectTexture="SetSpecialEffectTexture(",~whichEffect,", ",~textureName,", ",~textureIndex,")"
SetSpecialEffectTextureHint="[UjAPI] native SetSpecialEffectTexture takes effect whichEffect, string textureName, integer textureIndex returns nothing"

SetSpecialEffectReplaceableTexture=SetSpecialEffectReplaceableTexture
SetSpecialEffectReplaceableTexture="SetSpecialEffectReplaceableTexture(",~whichEffect,", ",~textureName,", ",~textureIndex,")"
SetSpecialEffectReplaceableTextureHint="[UjAPI] native SetSpecialEffectReplaceableTexture takes effect whichEffect, string textureName, integer textureIndex returns nothing"

SetSpecialEffectModel=SetSpecialEffectModel
SetSpecialEffectModel="SetSpecialEffectModel(",~whichEffect,", ",~modelName,")"
SetSpecialEffectModelHint="[UjAPI] native SetSpecialEffectModel takes effect whichEffect, string modelName returns nothing"

SetSpecialEffectModelEx=SetSpecialEffectModelEx
SetSpecialEffectModelEx="SetSpecialEffectModelEx(",~whichEffect,", ",~modelName,", ",~playerColour,")"
SetSpecialEffectModelExHint="[UjAPI] native SetSpecialEffectModelEx takes effect whichEffect, string modelName, integer playerColour returns nothing"

SetSpecialEffectAnimationWithRarityByIndex=SetSpecialEffectAnimationWithRarityByIndex
SetSpecialEffectAnimationWithRarityByIndex="SetSpecialEffectAnimationWithRarityByIndex(",~whichEffect,", ",~animIndex,", ",~rarity,")"
SetSpecialEffectAnimationWithRarityByIndexHint="[UjAPI] native SetSpecialEffectAnimationWithRarityByIndex takes effect whichEffect, integer animIndex, raritycontrol rarity returns nothing"

SetSpecialEffectAnimationWithRarity=SetSpecialEffectAnimationWithRarity
SetSpecialEffectAnimationWithRarity="SetSpecialEffectAnimationWithRarity(",~whichEffect,", ",~animationName,", ",~rarity,")"
SetSpecialEffectAnimationWithRarityHint="[UjAPI] native SetSpecialEffectAnimationWithRarity takes effect whichEffect, string animationName, raritycontrol rarity returns nothing"

SetSpecialEffectAnimationByIndex=SetSpecialEffectAnimationByIndex
SetSpecialEffectAnimationByIndex="SetSpecialEffectAnimationByIndex(",~whichEffect,", ",~animIndex,")"
SetSpecialEffectAnimationByIndexHint="[UjAPI] native SetSpecialEffectAnimationByIndex takes effect whichEffect, integer animIndex returns nothing"

SetSpecialEffectAnimation=SetSpecialEffectAnimation
SetSpecialEffectAnimation="SetSpecialEffectAnimation(",~whichEffect,", ",~animationName,")"
SetSpecialEffectAnimationHint="[UjAPI] native SetSpecialEffectAnimation takes effect whichEffect, string animationName returns nothing"

QueueSpecialEffectAnimationByIndex=QueueSpecialEffectAnimationByIndex
QueueSpecialEffectAnimationByIndex="QueueSpecialEffectAnimationByIndex(",~whichEffect,", ",~animIndex,")"
QueueSpecialEffectAnimationByIndexHint="[UjAPI] native QueueSpecialEffectAnimationByIndex takes effect whichEffect, integer animIndex returns nothing"

QueueSpecialEffectAnimation=QueueSpecialEffectAnimation
QueueSpecialEffectAnimation="QueueSpecialEffectAnimation(",~whichEffect,", ",~animationName,")"
QueueSpecialEffectAnimationHint="[UjAPI] native QueueSpecialEffectAnimation takes effect whichEffect, string animationName returns nothing"

SetSpecialEffectAnimationOffsetPercent=SetSpecialEffectAnimationOffsetPercent
SetSpecialEffectAnimationOffsetPercent="SetSpecialEffectAnimationOffsetPercent(",~whichEffect,", ",~percent,")"
SetSpecialEffectAnimationOffsetPercentHint="[UjAPI] native SetSpecialEffectAnimationOffsetPercent takes effect whichEffect, real percent returns nothing"

SetSpecialEffectAnimationFrozen=SetSpecialEffectAnimationFrozen
SetSpecialEffectAnimationFrozen="SetSpecialEffectAnimationFrozen(",~whichEffect,", ",~isFreeze,")"
SetSpecialEffectAnimationFrozenHint="[UjAPI] native SetSpecialEffectAnimationFrozen takes effect whichEffect, boolean isFreeze returns nothing"

EnumSpecialEffectsInRange=EnumSpecialEffectsInRange
EnumSpecialEffectsInRange="EnumSpecialEffectsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumSpecialEffectsInRangeHint="[UjAPI] native EnumSpecialEffectsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

SetTrackableVisible=SetTrackableVisible
SetTrackableVisible="SetTrackableVisible(",~whichTrackable,", ",~visibility,")"
SetTrackableVisibleHint="[UjAPI] native SetTrackableVisible takes trackable whichTrackable, boolean visibility returns nothing"

SetTrackablePosition=SetTrackablePosition
SetTrackablePosition="SetTrackablePosition(",~whichTrackable,", ",~x,", ",~y,")"
SetTrackablePositionHint="[UjAPI] native SetTrackablePosition takes trackable whichTrackable, real x, real y returns nothing"

SetTrackablePositionWithZ=SetTrackablePositionWithZ
SetTrackablePositionWithZ="SetTrackablePositionWithZ(",~whichTrackable,", ",~x,", ",~y,", ",~z,")"
SetTrackablePositionWithZHint="[UjAPI] native SetTrackablePositionWithZ takes trackable whichTrackable, real x, real y, real z returns nothing"

SetTrackablePositionLoc=SetTrackablePositionLoc
SetTrackablePositionLoc="SetTrackablePositionLoc(",~whichTrackable,", ",~loc,")"
SetTrackablePositionLocHint="[UjAPI] native SetTrackablePositionLoc takes trackable whichTrackable, location loc returns nothing"

SetTrackableX=SetTrackableX
SetTrackableX="SetTrackableX(",~whichTrackable,", ",~x,")"
SetTrackableXHint="[UjAPI] native SetTrackableX takes trackable whichTrackable, real x returns nothing"

SetTrackableY=SetTrackableY
SetTrackableY="SetTrackableY(",~whichTrackable,", ",~y,")"
SetTrackableYHint="[UjAPI] native SetTrackableY takes trackable whichTrackable, real y returns nothing"

SetTrackableZ=SetTrackableZ
SetTrackableZ="SetTrackableZ(",~whichTrackable,", ",~z,")"
SetTrackableZHint="[UjAPI] native SetTrackableZ takes trackable whichTrackable, real z returns nothing"

SetTrackableHeight=SetTrackableHeight
SetTrackableHeight="SetTrackableHeight(",~whichTrackable,", ",~height,")"
SetTrackableHeightHint="[UjAPI] native SetTrackableHeight takes trackable whichTrackable, real height returns nothing"

SetTrackableScale=SetTrackableScale
SetTrackableScale="SetTrackableScale(",~whichTrackable,", ",~scale,")"
SetTrackableScaleHint="[UjAPI] native SetTrackableScale takes trackable whichTrackable, real scale returns nothing"

SetTrackableTimeScale=SetTrackableTimeScale
SetTrackableTimeScale="SetTrackableTimeScale(",~whichTrackable,", ",~timescale,")"
SetTrackableTimeScaleHint="[UjAPI] native SetTrackableTimeScale takes trackable whichTrackable, real timescale returns nothing"

SetTrackablePlayerColour=SetTrackablePlayerColour
SetTrackablePlayerColour="SetTrackablePlayerColour(",~whichTrackable,", ",~color,")"
SetTrackablePlayerColourHint="[UjAPI] native SetTrackablePlayerColour takes trackable whichTrackable, playercolor color returns nothing"

SetTrackableColour=SetTrackableColour
SetTrackableColour="SetTrackableColour(",~whichTrackable,", ",~colour,")"
SetTrackableColourHint="[UjAPI] native SetTrackableColour takes trackable whichTrackable, integer colour returns nothing"

SetTrackableAlpha=SetTrackableAlpha
SetTrackableAlpha="SetTrackableAlpha(",~whichTrackable,", ",~alpha,")"
SetTrackableAlphaHint="[UjAPI] native SetTrackableAlpha takes trackable whichTrackable, integer alpha returns nothing"

SetTrackableVertexColour=SetTrackableVertexColour
SetTrackableVertexColour="SetTrackableVertexColour(",~whichTrackable,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetTrackableVertexColourHint="[UjAPI] native SetTrackableVertexColour takes trackable whichTrackable, integer red, integer green, integer blue, integer alpha returns nothing"

SetTrackableMatrixScale=SetTrackableMatrixScale
SetTrackableMatrixScale="SetTrackableMatrixScale(",~whichTrackable,", ",~x,", ",~y,", ",~z,")"
SetTrackableMatrixScaleHint="[UjAPI] native SetTrackableMatrixScale takes trackable whichTrackable, real x, real y, real z returns nothing"

ResetTrackableMatrix=ResetTrackableMatrix
ResetTrackableMatrix="ResetTrackableMatrix(",~whichTrackable,")"
ResetTrackableMatrixHint="[UjAPI] native ResetTrackableMatrix takes trackable whichTrackable returns nothing"

SetTrackableOrientationEx=SetTrackableOrientationEx
SetTrackableOrientationEx="SetTrackableOrientationEx(",~whichTrackable,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetTrackableOrientationExHint="[UjAPI] native SetTrackableOrientationEx takes trackable whichTrackable, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetTrackableYaw=SetTrackableYaw
SetTrackableYaw="SetTrackableYaw(",~whichTrackable,", ",~yaw,")"
SetTrackableYawHint="[UjAPI] native SetTrackableYaw takes trackable whichTrackable, real yaw returns nothing"

SetTrackableFacing=SetTrackableFacing
SetTrackableFacing="SetTrackableFacing(",~whichTrackable,", ",~facing,")"
SetTrackableFacingHint="[UjAPI] native SetTrackableFacing takes trackable whichTrackable, real facing returns nothing"

SetTrackablePitch=SetTrackablePitch
SetTrackablePitch="SetTrackablePitch(",~whichTrackable,", ",~pitch,")"
SetTrackablePitchHint="[UjAPI] native SetTrackablePitch takes trackable whichTrackable, real pitch returns nothing"

SetTrackableRoll=SetTrackableRoll
SetTrackableRoll="SetTrackableRoll(",~whichTrackable,", ",~roll,")"
SetTrackableRollHint="[UjAPI] native SetTrackableRoll takes trackable whichTrackable, real roll returns nothing"

SetTrackableOrientation=SetTrackableOrientation
SetTrackableOrientation="SetTrackableOrientation(",~whichTrackable,", ",~yaw,", ",~pitch,", ",~roll,")"
SetTrackableOrientationHint="[UjAPI] native SetTrackableOrientation takes trackable whichTrackable, real yaw, real pitch, real roll returns nothing"

SetTrackableMaterialTexture=SetTrackableMaterialTexture
SetTrackableMaterialTexture="SetTrackableMaterialTexture(",~whichTrackable,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetTrackableMaterialTextureHint="[UjAPI] native SetTrackableMaterialTexture takes trackable whichTrackable, string textureName, integer materialId, integer textureIndex returns nothing"

SetTrackableTexture=SetTrackableTexture
SetTrackableTexture="SetTrackableTexture(",~whichTrackable,", ",~textureName,", ",~textureIndex,")"
SetTrackableTextureHint="[UjAPI] native SetTrackableTexture takes trackable whichTrackable, string textureName, integer textureIndex returns nothing"

SetTrackableReplaceableTexture=SetTrackableReplaceableTexture
SetTrackableReplaceableTexture="SetTrackableReplaceableTexture(",~whichTrackable,", ",~textureName,", ",~textureIndex,")"
SetTrackableReplaceableTextureHint="[UjAPI] native SetTrackableReplaceableTexture takes trackable whichTrackable, string textureName, integer textureIndex returns nothing"

SetTrackableModel=SetTrackableModel
SetTrackableModel="SetTrackableModel(",~whichTrackable,", ",~modelName,")"
SetTrackableModelHint="[UjAPI] native SetTrackableModel takes trackable whichTrackable, string modelName returns nothing"

SetTrackableModelEx=SetTrackableModelEx
SetTrackableModelEx="SetTrackableModelEx(",~whichTrackable,", ",~modelName,", ",~playerColour,")"
SetTrackableModelExHint="[UjAPI] native SetTrackableModelEx takes trackable whichTrackable, string modelName, integer playerColour returns nothing"

SetTrackableAnimationWithRarityByIndex=SetTrackableAnimationWithRarityByIndex
SetTrackableAnimationWithRarityByIndex="SetTrackableAnimationWithRarityByIndex(",~whichTrackable,", ",~animIndex,", ",~rarity,")"
SetTrackableAnimationWithRarityByIndexHint="[UjAPI] native SetTrackableAnimationWithRarityByIndex takes trackable whichTrackable, integer animIndex, raritycontrol rarity returns nothing"

SetTrackableAnimationWithRarity=SetTrackableAnimationWithRarity
SetTrackableAnimationWithRarity="SetTrackableAnimationWithRarity(",~whichTrackable,", ",~animationName,", ",~rarity,")"
SetTrackableAnimationWithRarityHint="[UjAPI] native SetTrackableAnimationWithRarity takes trackable whichTrackable, string animationName, raritycontrol rarity returns nothing"

SetTrackableAnimationByIndex=SetTrackableAnimationByIndex
SetTrackableAnimationByIndex="SetTrackableAnimationByIndex(",~whichTrackable,", ",~animIndex,")"
SetTrackableAnimationByIndexHint="[UjAPI] native SetTrackableAnimationByIndex takes trackable whichTrackable, integer animIndex returns nothing"

SetTrackableAnimation=SetTrackableAnimation
SetTrackableAnimation="SetTrackableAnimation(",~whichTrackable,", ",~animationName,")"
SetTrackableAnimationHint="[UjAPI] native SetTrackableAnimation takes trackable whichTrackable, string animationName returns nothing"

QueueTrackableAnimationByIndex=QueueTrackableAnimationByIndex
QueueTrackableAnimationByIndex="QueueTrackableAnimationByIndex(",~whichTrackable,", ",~animIndex,")"
QueueTrackableAnimationByIndexHint="[UjAPI] native QueueTrackableAnimationByIndex takes trackable whichTrackable, integer animIndex returns nothing"

QueueTrackableAnimation=QueueTrackableAnimation
QueueTrackableAnimation="QueueTrackableAnimation(",~whichTrackable,", ",~animationName,")"
QueueTrackableAnimationHint="[UjAPI] native QueueTrackableAnimation takes trackable whichTrackable, string animationName returns nothing"

SetTrackableAnimationOffsetPercent=SetTrackableAnimationOffsetPercent
SetTrackableAnimationOffsetPercent="SetTrackableAnimationOffsetPercent(",~whichTrackable,", ",~percent,")"
SetTrackableAnimationOffsetPercentHint="[UjAPI] native SetTrackableAnimationOffsetPercent takes trackable whichTrackable, real percent returns nothing"

SetTrackableAnimationFrozen=SetTrackableAnimationFrozen
SetTrackableAnimationFrozen="SetTrackableAnimationFrozen(",~whichTrackable,", ",~isFreeze,")"
SetTrackableAnimationFrozenHint="[UjAPI] native SetTrackableAnimationFrozen takes trackable whichTrackable, boolean isFreeze returns nothing"

EnumTrackablesInRange=EnumTrackablesInRange
EnumTrackablesInRange="EnumTrackablesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumTrackablesInRangeHint="[UjAPI] native EnumTrackablesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

SetWidgetTipEnabled=SetWidgetTipEnabled
SetWidgetTipEnabled="SetWidgetTipEnabled(",~enable,")"
SetWidgetTipEnabledHint="[UjAPI] native SetWidgetTipEnabled takes boolean enable returns nothing"

SetWidgetVisibleUnit=SetWidgetVisible (Unit)
SetWidgetVisibleUnit="SetWidgetVisibleUnit(",~whichWidget,", ",~visible,")"
SetWidgetVisibleUnitHint="[UjAPI] native SetWidgetVisible takes unit whichWidget, boolean visible returns nothing"

SetWidgetVisibleItem=SetWidgetVisible (Item)
SetWidgetVisibleItem="SetWidgetVisibleItem(",~whichWidget,", ",~visible,")"
SetWidgetVisibleItemHint="[UjAPI] native SetWidgetVisible takes item whichWidget, boolean visible returns nothing"

SetWidgetVisibleDestructable=SetWidgetVisible (Destructable)
SetWidgetVisibleDestructable="SetWidgetVisibleDestructable(",~whichWidget,", ",~visible,")"
SetWidgetVisibleDestructableHint="[UjAPI] native SetWidgetVisible takes destructable whichWidget, boolean visible returns nothing"

SetWidgetInvulnerableUnit=SetWidgetInvulnerable (Unit)
SetWidgetInvulnerableUnit="SetWidgetInvulnerableUnit(",~whichWidget,", ",~invulnerable,")"
SetWidgetInvulnerableUnitHint="[UjAPI] native SetWidgetInvulnerable takes unit whichWidget, boolean invulnerable returns nothing"

SetWidgetInvulnerableItem=SetWidgetInvulnerable (Item)
SetWidgetInvulnerableItem="SetWidgetInvulnerableItem(",~whichWidget,", ",~invulnerable,")"
SetWidgetInvulnerableItemHint="[UjAPI] native SetWidgetInvulnerable takes item whichWidget, boolean invulnerable returns nothing"

SetWidgetInvulnerableDestructable=SetWidgetInvulnerable (Destructable)
SetWidgetInvulnerableDestructable="SetWidgetInvulnerableDestructable(",~whichWidget,", ",~invulnerable,")"
SetWidgetInvulnerableDestructableHint="[UjAPI] native SetWidgetInvulnerable takes destructable whichWidget, boolean invulnerable returns nothing"

ActivateWidgetCollisionUnit=ActivateWidgetCollision (Unit)
ActivateWidgetCollisionUnit="ActivateWidgetCollisionUnit(",~whichWidget,", ",~causeInterferenceEvents,", ",~isPathingObstacle,", ",~liveFootprint,")"
ActivateWidgetCollisionUnitHint="[UjAPI] native ActivateWidgetCollision takes unit whichWidget, boolean causeInterferenceEvents, boolean isPathingObstacle, boolean liveFootprint returns nothing"

ActivateWidgetCollisionItem=ActivateWidgetCollision (Item)
ActivateWidgetCollisionItem="ActivateWidgetCollisionItem(",~whichWidget,", ",~causeInterferenceEvents,", ",~isPathingObstacle,", ",~liveFootprint,")"
ActivateWidgetCollisionItemHint="[UjAPI] native ActivateWidgetCollision takes item whichWidget, boolean causeInterferenceEvents, boolean isPathingObstacle, boolean liveFootprint returns nothing"

ActivateWidgetCollisionDestructable=ActivateWidgetCollision (Destructable)
ActivateWidgetCollisionDestructable="ActivateWidgetCollisionDestructable(",~whichWidget,", ",~causeInterferenceEvents,", ",~isPathingObstacle,", ",~liveFootprint,")"
ActivateWidgetCollisionDestructableHint="[UjAPI] native ActivateWidgetCollision takes destructable whichWidget, boolean causeInterferenceEvents, boolean isPathingObstacle, boolean liveFootprint returns nothing"

DeactivateWidgetCollisionUnit=DeactivateWidgetCollision (Unit)
DeactivateWidgetCollisionUnit="DeactivateWidgetCollisionUnit(",~whichWidget,", ",~causeInterferenceEvents,", ",~liveFootprint,")"
DeactivateWidgetCollisionUnitHint="[UjAPI] native DeactivateWidgetCollision takes unit whichWidget, boolean causeInterferenceEvents, boolean liveFootprint returns nothing"

DeactivateWidgetCollisionItem=DeactivateWidgetCollision (Item)
DeactivateWidgetCollisionItem="DeactivateWidgetCollisionItem(",~whichWidget,", ",~causeInterferenceEvents,", ",~liveFootprint,")"
DeactivateWidgetCollisionItemHint="[UjAPI] native DeactivateWidgetCollision takes item whichWidget, boolean causeInterferenceEvents, boolean liveFootprint returns nothing"

DeactivateWidgetCollisionDestructable=DeactivateWidgetCollision (Destructable)
DeactivateWidgetCollisionDestructable="DeactivateWidgetCollisionDestructable(",~whichWidget,", ",~causeInterferenceEvents,", ",~liveFootprint,")"
DeactivateWidgetCollisionDestructableHint="[UjAPI] native DeactivateWidgetCollision takes destructable whichWidget, boolean causeInterferenceEvents, boolean liveFootprint returns nothing"

SetWidgetPositionLocUnit=SetWidgetPositionLoc (Unit)
SetWidgetPositionLocUnit="SetWidgetPositionLocUnit(",~whichWidget,", ",~whichLocation,")"
SetWidgetPositionLocUnitHint="[UjAPI] native SetWidgetPositionLoc takes unit whichWidget, location whichLocation returns nothing"

SetWidgetPositionLocItem=SetWidgetPositionLoc (Item)
SetWidgetPositionLocItem="SetWidgetPositionLocItem(",~whichWidget,", ",~whichLocation,")"
SetWidgetPositionLocItemHint="[UjAPI] native SetWidgetPositionLoc takes item whichWidget, location whichLocation returns nothing"

SetWidgetPositionLocDestructable=SetWidgetPositionLoc (Destructable)
SetWidgetPositionLocDestructable="SetWidgetPositionLocDestructable(",~whichWidget,", ",~whichLocation,")"
SetWidgetPositionLocDestructableHint="[UjAPI] native SetWidgetPositionLoc takes destructable whichWidget, location whichLocation returns nothing"

SetWidgetPositionUnit=SetWidgetPosition (Unit)
SetWidgetPositionUnit="SetWidgetPositionUnit(",~whichWidget,", ",~x,", ",~y,")"
SetWidgetPositionUnitHint="[UjAPI] native SetWidgetPosition takes unit whichWidget, real x, real y returns nothing"

SetWidgetPositionItem=SetWidgetPosition (Item)
SetWidgetPositionItem="SetWidgetPositionItem(",~whichWidget,", ",~x,", ",~y,")"
SetWidgetPositionItemHint="[UjAPI] native SetWidgetPosition takes item whichWidget, real x, real y returns nothing"

SetWidgetPositionDestructable=SetWidgetPosition (Destructable)
SetWidgetPositionDestructable="SetWidgetPositionDestructable(",~whichWidget,", ",~x,", ",~y,")"
SetWidgetPositionDestructableHint="[UjAPI] native SetWidgetPosition takes destructable whichWidget, real x, real y returns nothing"

SetWidgetPositionWithZUnit=SetWidgetPositionWithZ (Unit)
SetWidgetPositionWithZUnit="SetWidgetPositionWithZUnit(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetPositionWithZUnitHint="[UjAPI] native SetWidgetPositionWithZ takes unit whichWidget, real x, real y, real z returns nothing"

SetWidgetPositionWithZItem=SetWidgetPositionWithZ (Item)
SetWidgetPositionWithZItem="SetWidgetPositionWithZItem(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetPositionWithZItemHint="[UjAPI] native SetWidgetPositionWithZ takes item whichWidget, real x, real y, real z returns nothing"

SetWidgetPositionWithZDestructable=SetWidgetPositionWithZ (Destructable)
SetWidgetPositionWithZDestructable="SetWidgetPositionWithZDestructable(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetPositionWithZDestructableHint="[UjAPI] native SetWidgetPositionWithZ takes destructable whichWidget, real x, real y, real z returns nothing"

SetWidgetXUnit=SetWidgetX (Unit)
SetWidgetXUnit="SetWidgetXUnit(",~whichWidget,", ",~x,")"
SetWidgetXUnitHint="[UjAPI] native SetWidgetX takes unit whichWidget, real x returns nothing"

SetWidgetXItem=SetWidgetX (Item)
SetWidgetXItem="SetWidgetXItem(",~whichWidget,", ",~x,")"
SetWidgetXItemHint="[UjAPI] native SetWidgetX takes item whichWidget, real x returns nothing"

SetWidgetXDestructable=SetWidgetX (Destructable)
SetWidgetXDestructable="SetWidgetXDestructable(",~whichWidget,", ",~x,")"
SetWidgetXDestructableHint="[UjAPI] native SetWidgetX takes destructable whichWidget, real x returns nothing"

SetWidgetYUnit=SetWidgetY (Unit)
SetWidgetYUnit="SetWidgetYUnit(",~whichWidget,", ",~y,")"
SetWidgetYUnitHint="[UjAPI] native SetWidgetY takes unit whichWidget, real y returns nothing"

SetWidgetYItem=SetWidgetY (Item)
SetWidgetYItem="SetWidgetYItem(",~whichWidget,", ",~y,")"
SetWidgetYItemHint="[UjAPI] native SetWidgetY takes item whichWidget, real y returns nothing"

SetWidgetYDestructable=SetWidgetY (Destructable)
SetWidgetYDestructable="SetWidgetYDestructable(",~whichWidget,", ",~y,")"
SetWidgetYDestructableHint="[UjAPI] native SetWidgetY takes destructable whichWidget, real y returns nothing"

SetWidgetZUnit=SetWidgetZ (Unit)
SetWidgetZUnit="SetWidgetZUnit(",~whichWidget,", ",~z,")"
SetWidgetZUnitHint="[UjAPI] native SetWidgetZ takes unit whichWidget, real z returns nothing"

SetWidgetZItem=SetWidgetZ (Item)
SetWidgetZItem="SetWidgetZItem(",~whichWidget,", ",~z,")"
SetWidgetZItemHint="[UjAPI] native SetWidgetZ takes item whichWidget, real z returns nothing"

SetWidgetZDestructable=SetWidgetZ (Destructable)
SetWidgetZDestructable="SetWidgetZDestructable(",~whichWidget,", ",~z,")"
SetWidgetZDestructableHint="[UjAPI] native SetWidgetZ takes destructable whichWidget, real z returns nothing"

ResetWidgetZUnit=ResetWidgetZ (Unit)
ResetWidgetZUnit="ResetWidgetZUnit(",~whichWidget,")"
ResetWidgetZUnitHint="[UjAPI] native ResetWidgetZ takes unit whichWidget returns nothing"

ResetWidgetZItem=ResetWidgetZ (Item)
ResetWidgetZItem="ResetWidgetZItem(",~whichWidget,")"
ResetWidgetZItemHint="[UjAPI] native ResetWidgetZ takes item whichWidget returns nothing"

ResetWidgetZDestructable=ResetWidgetZ (Destructable)
ResetWidgetZDestructable="ResetWidgetZDestructable(",~whichWidget,")"
ResetWidgetZDestructableHint="[UjAPI] native ResetWidgetZ takes destructable whichWidget returns nothing"

SetWidgetHeightUnit=SetWidgetHeight (Unit)
SetWidgetHeightUnit="SetWidgetHeightUnit(",~whichWidget,", ",~height,")"
SetWidgetHeightUnitHint="[UjAPI] native SetWidgetHeight takes unit whichWidget, real height returns nothing"

SetWidgetHeightItem=SetWidgetHeight (Item)
SetWidgetHeightItem="SetWidgetHeightItem(",~whichWidget,", ",~height,")"
SetWidgetHeightItemHint="[UjAPI] native SetWidgetHeight takes item whichWidget, real height returns nothing"

SetWidgetHeightDestructable=SetWidgetHeight (Destructable)
SetWidgetHeightDestructable="SetWidgetHeightDestructable(",~whichWidget,", ",~height,")"
SetWidgetHeightDestructableHint="[UjAPI] native SetWidgetHeight takes destructable whichWidget, real height returns nothing"

SetWidgetPlayerColourUnit=SetWidgetPlayerColour (Unit)
SetWidgetPlayerColourUnit="SetWidgetPlayerColourUnit(",~whichWidget,", ",~color,")"
SetWidgetPlayerColourUnitHint="[UjAPI] native SetWidgetPlayerColour takes unit whichWidget, playercolor color returns nothing"

SetWidgetPlayerColourItem=SetWidgetPlayerColour (Item)
SetWidgetPlayerColourItem="SetWidgetPlayerColourItem(",~whichWidget,", ",~color,")"
SetWidgetPlayerColourItemHint="[UjAPI] native SetWidgetPlayerColour takes item whichWidget, playercolor color returns nothing"

SetWidgetPlayerColourDestructable=SetWidgetPlayerColour (Destructable)
SetWidgetPlayerColourDestructable="SetWidgetPlayerColourDestructable(",~whichWidget,", ",~color,")"
SetWidgetPlayerColourDestructableHint="[UjAPI] native SetWidgetPlayerColour takes destructable whichWidget, playercolor color returns nothing"

SetWidgetVertexColourUnit=SetWidgetVertexColour (Unit)
SetWidgetVertexColourUnit="SetWidgetVertexColourUnit(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWidgetVertexColourUnitHint="[UjAPI] native SetWidgetVertexColour takes unit whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

SetWidgetVertexColourItem=SetWidgetVertexColour (Item)
SetWidgetVertexColourItem="SetWidgetVertexColourItem(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWidgetVertexColourItemHint="[UjAPI] native SetWidgetVertexColour takes item whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

SetWidgetVertexColourDestructable=SetWidgetVertexColour (Destructable)
SetWidgetVertexColourDestructable="SetWidgetVertexColourDestructable(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWidgetVertexColourDestructableHint="[UjAPI] native SetWidgetVertexColour takes destructable whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"

SetWidgetTimeScaleUnit=SetWidgetTimeScale (Unit)
SetWidgetTimeScaleUnit="SetWidgetTimeScaleUnit(",~whichWidget,", ",~timeScale,")"
SetWidgetTimeScaleUnitHint="[UjAPI] native SetWidgetTimeScale takes unit whichWidget, real timeScale returns nothing"

SetWidgetTimeScaleItem=SetWidgetTimeScale (Item)
SetWidgetTimeScaleItem="SetWidgetTimeScaleItem(",~whichWidget,", ",~timeScale,")"
SetWidgetTimeScaleItemHint="[UjAPI] native SetWidgetTimeScale takes item whichWidget, real timeScale returns nothing"

SetWidgetTimeScaleDestructable=SetWidgetTimeScale (Destructable)
SetWidgetTimeScaleDestructable="SetWidgetTimeScaleDestructable(",~whichWidget,", ",~timeScale,")"
SetWidgetTimeScaleDestructableHint="[UjAPI] native SetWidgetTimeScale takes destructable whichWidget, real timeScale returns nothing"

SetWidgetScaleUnit=SetWidgetScale (Unit)
SetWidgetScaleUnit="SetWidgetScaleUnit(",~whichWidget,", ",~scale,")"
SetWidgetScaleUnitHint="[UjAPI] native SetWidgetScale takes unit whichWidget, real scale returns nothing"

SetWidgetScaleItem=SetWidgetScale (Item)
SetWidgetScaleItem="SetWidgetScaleItem(",~whichWidget,", ",~scale,")"
SetWidgetScaleItemHint="[UjAPI] native SetWidgetScale takes item whichWidget, real scale returns nothing"

SetWidgetScaleDestructable=SetWidgetScale (Destructable)
SetWidgetScaleDestructable="SetWidgetScaleDestructable(",~whichWidget,", ",~scale,")"
SetWidgetScaleDestructableHint="[UjAPI] native SetWidgetScale takes destructable whichWidget, real scale returns nothing"

SetWidgetFacingUnit=SetWidgetFacing (Unit)
SetWidgetFacingUnit="SetWidgetFacingUnit(",~whichWidget,", ",~facing,", ",~isInstant,")"
SetWidgetFacingUnitHint="[UjAPI] native SetWidgetFacing takes unit whichWidget, real facing, boolean isInstant returns nothing"

SetWidgetFacingItem=SetWidgetFacing (Item)
SetWidgetFacingItem="SetWidgetFacingItem(",~whichWidget,", ",~facing,", ",~isInstant,")"
SetWidgetFacingItemHint="[UjAPI] native SetWidgetFacing takes item whichWidget, real facing, boolean isInstant returns nothing"

SetWidgetFacingDestructable=SetWidgetFacing (Destructable)
SetWidgetFacingDestructable="SetWidgetFacingDestructable(",~whichWidget,", ",~facing,", ",~isInstant,")"
SetWidgetFacingDestructableHint="[UjAPI] native SetWidgetFacing takes destructable whichWidget, real facing, boolean isInstant returns nothing"

SetWidgetMatrixScaleUnit=SetWidgetMatrixScale (Unit)
SetWidgetMatrixScaleUnit="SetWidgetMatrixScaleUnit(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetMatrixScaleUnitHint="[UjAPI] native SetWidgetMatrixScale takes unit whichWidget, real x, real y, real z returns nothing"

SetWidgetMatrixScaleItem=SetWidgetMatrixScale (Item)
SetWidgetMatrixScaleItem="SetWidgetMatrixScaleItem(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetMatrixScaleItemHint="[UjAPI] native SetWidgetMatrixScale takes item whichWidget, real x, real y, real z returns nothing"

SetWidgetMatrixScaleDestructable=SetWidgetMatrixScale (Destructable)
SetWidgetMatrixScaleDestructable="SetWidgetMatrixScaleDestructable(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetMatrixScaleDestructableHint="[UjAPI] native SetWidgetMatrixScale takes destructable whichWidget, real x, real y, real z returns nothing"

ResetWidgetMatrixUnit=ResetWidgetMatrix (Unit)
ResetWidgetMatrixUnit="ResetWidgetMatrixUnit(",~whichWidget,")"
ResetWidgetMatrixUnitHint="[UjAPI] native ResetWidgetMatrix takes unit whichWidget returns nothing"

ResetWidgetMatrixItem=ResetWidgetMatrix (Item)
ResetWidgetMatrixItem="ResetWidgetMatrixItem(",~whichWidget,")"
ResetWidgetMatrixItemHint="[UjAPI] native ResetWidgetMatrix takes item whichWidget returns nothing"

ResetWidgetMatrixDestructable=ResetWidgetMatrix (Destructable)
ResetWidgetMatrixDestructable="ResetWidgetMatrixDestructable(",~whichWidget,")"
ResetWidgetMatrixDestructableHint="[UjAPI] native ResetWidgetMatrix takes destructable whichWidget returns nothing"

SetWidgetOrientationExUnit=SetWidgetOrientationEx (Unit)
SetWidgetOrientationExUnit="SetWidgetOrientationExUnit(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWidgetOrientationExUnitHint="[UjAPI] native SetWidgetOrientationEx takes unit whichWidget, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetWidgetOrientationExItem=SetWidgetOrientationEx (Item)
SetWidgetOrientationExItem="SetWidgetOrientationExItem(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWidgetOrientationExItemHint="[UjAPI] native SetWidgetOrientationEx takes item whichWidget, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetWidgetOrientationExDestructable=SetWidgetOrientationEx (Destructable)
SetWidgetOrientationExDestructable="SetWidgetOrientationExDestructable(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWidgetOrientationExDestructableHint="[UjAPI] native SetWidgetOrientationEx takes destructable whichWidget, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetWidgetOrientationUnit=SetWidgetOrientation (Unit)
SetWidgetOrientationUnit="SetWidgetOrientationUnit(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWidgetOrientationUnitHint="[UjAPI] native SetWidgetOrientation takes unit whichWidget, real yaw, real pitch, real roll returns nothing"

SetWidgetOrientationItem=SetWidgetOrientation (Item)
SetWidgetOrientationItem="SetWidgetOrientationItem(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWidgetOrientationItemHint="[UjAPI] native SetWidgetOrientation takes item whichWidget, real yaw, real pitch, real roll returns nothing"

SetWidgetOrientationDestructable=SetWidgetOrientation (Destructable)
SetWidgetOrientationDestructable="SetWidgetOrientationDestructable(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWidgetOrientationDestructableHint="[UjAPI] native SetWidgetOrientation takes destructable whichWidget, real yaw, real pitch, real roll returns nothing"

SetWidgetYawUnit=SetWidgetYaw (Unit)
SetWidgetYawUnit="SetWidgetYawUnit(",~whichWidget,", ",~yaw,")"
SetWidgetYawUnitHint="[UjAPI] native SetWidgetYaw takes unit whichWidget, real yaw returns nothing"

SetWidgetYawItem=SetWidgetYaw (Item)
SetWidgetYawItem="SetWidgetYawItem(",~whichWidget,", ",~yaw,")"
SetWidgetYawItemHint="[UjAPI] native SetWidgetYaw takes item whichWidget, real yaw returns nothing"

SetWidgetYawDestructable=SetWidgetYaw (Destructable)
SetWidgetYawDestructable="SetWidgetYawDestructable(",~whichWidget,", ",~yaw,")"
SetWidgetYawDestructableHint="[UjAPI] native SetWidgetYaw takes destructable whichWidget, real yaw returns nothing"

SetWidgetPitchUnit=SetWidgetPitch (Unit)
SetWidgetPitchUnit="SetWidgetPitchUnit(",~whichWidget,", ",~pitch,")"
SetWidgetPitchUnitHint="[UjAPI] native SetWidgetPitch takes unit whichWidget, real pitch returns nothing"

SetWidgetPitchItem=SetWidgetPitch (Item)
SetWidgetPitchItem="SetWidgetPitchItem(",~whichWidget,", ",~pitch,")"
SetWidgetPitchItemHint="[UjAPI] native SetWidgetPitch takes item whichWidget, real pitch returns nothing"

SetWidgetPitchDestructable=SetWidgetPitch (Destructable)
SetWidgetPitchDestructable="SetWidgetPitchDestructable(",~whichWidget,", ",~pitch,")"
SetWidgetPitchDestructableHint="[UjAPI] native SetWidgetPitch takes destructable whichWidget, real pitch returns nothing"

SetWidgetRollUnit=SetWidgetRoll (Unit)
SetWidgetRollUnit="SetWidgetRollUnit(",~whichWidget,", ",~roll,")"
SetWidgetRollUnitHint="[UjAPI] native SetWidgetRoll takes unit whichWidget, real roll returns nothing"

SetWidgetRollItem=SetWidgetRoll (Item)
SetWidgetRollItem="SetWidgetRollItem(",~whichWidget,", ",~roll,")"
SetWidgetRollItemHint="[UjAPI] native SetWidgetRoll takes item whichWidget, real roll returns nothing"

SetWidgetRollDestructable=SetWidgetRoll (Destructable)
SetWidgetRollDestructable="SetWidgetRollDestructable(",~whichWidget,", ",~roll,")"
SetWidgetRollDestructableHint="[UjAPI] native SetWidgetRoll takes destructable whichWidget, real roll returns nothing"

SetWidgetModelUnit=SetWidgetModel (Unit)
SetWidgetModelUnit="SetWidgetModelUnit(",~whichWidget,", ",~modelFile,")"
SetWidgetModelUnitHint="[UjAPI] native SetWidgetModel takes unit whichWidget, string modelFile returns nothing"

SetWidgetModelItem=SetWidgetModel (Item)
SetWidgetModelItem="SetWidgetModelItem(",~whichWidget,", ",~modelFile,")"
SetWidgetModelItemHint="[UjAPI] native SetWidgetModel takes item whichWidget, string modelFile returns nothing"

SetWidgetModelDestructable=SetWidgetModel (Destructable)
SetWidgetModelDestructable="SetWidgetModelDestructable(",~whichWidget,", ",~modelFile,")"
SetWidgetModelDestructableHint="[UjAPI] native SetWidgetModel takes destructable whichWidget, string modelFile returns nothing"

SetWidgetModelExUnit=SetWidgetModelEx (Unit)
SetWidgetModelExUnit="SetWidgetModelExUnit(",~whichWidget,", ",~modelFile,", ",~playerId,")"
SetWidgetModelExUnitHint="[UjAPI] native SetWidgetModelEx takes unit whichWidget, string modelFile, integer playerId returns nothing"

SetWidgetModelExItem=SetWidgetModelEx (Item)
SetWidgetModelExItem="SetWidgetModelExItem(",~whichWidget,", ",~modelFile,", ",~playerId,")"
SetWidgetModelExItemHint="[UjAPI] native SetWidgetModelEx takes item whichWidget, string modelFile, integer playerId returns nothing"

SetWidgetModelExDestructable=SetWidgetModelEx (Destructable)
SetWidgetModelExDestructable="SetWidgetModelExDestructable(",~whichWidget,", ",~modelFile,", ",~playerId,")"
SetWidgetModelExDestructableHint="[UjAPI] native SetWidgetModelEx takes destructable whichWidget, string modelFile, integer playerId returns nothing"

SetWidgetPortraitUnit=SetWidgetPortrait (Unit)
SetWidgetPortraitUnit="SetWidgetPortraitUnit(",~whichWidget,", ",~modelName,")"
SetWidgetPortraitUnitHint="[UjAPI] native SetWidgetPortrait takes unit whichWidget, string modelName returns nothing"

SetWidgetPortraitItem=SetWidgetPortrait (Item)
SetWidgetPortraitItem="SetWidgetPortraitItem(",~whichWidget,", ",~modelName,")"
SetWidgetPortraitItemHint="[UjAPI] native SetWidgetPortrait takes item whichWidget, string modelName returns nothing"

SetWidgetPortraitDestructable=SetWidgetPortrait (Destructable)
SetWidgetPortraitDestructable="SetWidgetPortraitDestructable(",~whichWidget,", ",~modelName,")"
SetWidgetPortraitDestructableHint="[UjAPI] native SetWidgetPortrait takes destructable whichWidget, string modelName returns nothing"

SetWidgetMaterialTextureUnit=SetWidgetMaterialTexture (Unit)
SetWidgetMaterialTextureUnit="SetWidgetMaterialTextureUnit(",~whichWidget,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWidgetMaterialTextureUnitHint="[UjAPI] native SetWidgetMaterialTexture takes unit whichWidget, string textureName, integer materialId, integer textureIndex returns nothing"

SetWidgetMaterialTextureItem=SetWidgetMaterialTexture (Item)
SetWidgetMaterialTextureItem="SetWidgetMaterialTextureItem(",~whichWidget,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWidgetMaterialTextureItemHint="[UjAPI] native SetWidgetMaterialTexture takes item whichWidget, string textureName, integer materialId, integer textureIndex returns nothing"

SetWidgetMaterialTextureDestructable=SetWidgetMaterialTexture (Destructable)
SetWidgetMaterialTextureDestructable="SetWidgetMaterialTextureDestructable(",~whichWidget,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWidgetMaterialTextureDestructableHint="[UjAPI] native SetWidgetMaterialTexture takes destructable whichWidget, string textureName, integer materialId, integer textureIndex returns nothing"

SetWidgetTextureUnit=SetWidgetTexture (Unit)
SetWidgetTextureUnit="SetWidgetTextureUnit(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetTextureUnitHint="[UjAPI] native SetWidgetTexture takes unit whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetTextureItem=SetWidgetTexture (Item)
SetWidgetTextureItem="SetWidgetTextureItem(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetTextureItemHint="[UjAPI] native SetWidgetTexture takes item whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetTextureDestructable=SetWidgetTexture (Destructable)
SetWidgetTextureDestructable="SetWidgetTextureDestructable(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetTextureDestructableHint="[UjAPI] native SetWidgetTexture takes destructable whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetReplaceableTextureUnit=SetWidgetReplaceableTexture (Unit)
SetWidgetReplaceableTextureUnit="SetWidgetReplaceableTextureUnit(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetReplaceableTextureUnitHint="[UjAPI] native SetWidgetReplaceableTexture takes unit whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetReplaceableTextureItem=SetWidgetReplaceableTexture (Item)
SetWidgetReplaceableTextureItem="SetWidgetReplaceableTextureItem(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetReplaceableTextureItemHint="[UjAPI] native SetWidgetReplaceableTexture takes item whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetReplaceableTextureDestructable=SetWidgetReplaceableTexture (Destructable)
SetWidgetReplaceableTextureDestructable="SetWidgetReplaceableTextureDestructable(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetReplaceableTextureDestructableHint="[UjAPI] native SetWidgetReplaceableTexture takes destructable whichWidget, string textureName, integer textureIndex returns nothing"

SetWidgetAnimationWithRarityByIndexUnit=SetWidgetAnimationWithRarityByIndex (Unit)
SetWidgetAnimationWithRarityByIndexUnit="SetWidgetAnimationWithRarityByIndexUnit(",~whichWidget,", ",~animIndex,", ",~rarity,")"
SetWidgetAnimationWithRarityByIndexUnitHint="[UjAPI] native SetWidgetAnimationWithRarityByIndex takes unit whichWidget, integer animIndex, raritycontrol rarity returns nothing"

SetWidgetAnimationWithRarityByIndexItem=SetWidgetAnimationWithRarityByIndex (Item)
SetWidgetAnimationWithRarityByIndexItem="SetWidgetAnimationWithRarityByIndexItem(",~whichWidget,", ",~animIndex,", ",~rarity,")"
SetWidgetAnimationWithRarityByIndexItemHint="[UjAPI] native SetWidgetAnimationWithRarityByIndex takes item whichWidget, integer animIndex, raritycontrol rarity returns nothing"

SetWidgetAnimationWithRarityByIndexDestructable=SetWidgetAnimationWithRarityByIndex (Destructable)
SetWidgetAnimationWithRarityByIndexDestructable="SetWidgetAnimationWithRarityByIndexDestructable(",~whichWidget,", ",~animIndex,", ",~rarity,")"
SetWidgetAnimationWithRarityByIndexDestructableHint="[UjAPI] native SetWidgetAnimationWithRarityByIndex takes destructable whichWidget, integer animIndex, raritycontrol rarity returns nothing"

SetWidgetAnimationWithRarityUnit=SetWidgetAnimationWithRarity (Unit)
SetWidgetAnimationWithRarityUnit="SetWidgetAnimationWithRarityUnit(",~whichWidget,", ",~animationName,", ",~rarity,")"
SetWidgetAnimationWithRarityUnitHint="[UjAPI] native SetWidgetAnimationWithRarity takes unit whichWidget, string animationName, raritycontrol rarity returns nothing"

SetWidgetAnimationWithRarityItem=SetWidgetAnimationWithRarity (Item)
SetWidgetAnimationWithRarityItem="SetWidgetAnimationWithRarityItem(",~whichWidget,", ",~animationName,", ",~rarity,")"
SetWidgetAnimationWithRarityItemHint="[UjAPI] native SetWidgetAnimationWithRarity takes item whichWidget, string animationName, raritycontrol rarity returns nothing"

SetWidgetAnimationWithRarityDestructable=SetWidgetAnimationWithRarity (Destructable)
SetWidgetAnimationWithRarityDestructable="SetWidgetAnimationWithRarityDestructable(",~whichWidget,", ",~animationName,", ",~rarity,")"
SetWidgetAnimationWithRarityDestructableHint="[UjAPI] native SetWidgetAnimationWithRarity takes destructable whichWidget, string animationName, raritycontrol rarity returns nothing"

SetWidgetAnimationByIndexUnit=SetWidgetAnimationByIndex (Unit)
SetWidgetAnimationByIndexUnit="SetWidgetAnimationByIndexUnit(",~whichWidget,", ",~animIndex,")"
SetWidgetAnimationByIndexUnitHint="[UjAPI] native SetWidgetAnimationByIndex takes unit whichWidget, integer animIndex returns nothing"

SetWidgetAnimationByIndexItem=SetWidgetAnimationByIndex (Item)
SetWidgetAnimationByIndexItem="SetWidgetAnimationByIndexItem(",~whichWidget,", ",~animIndex,")"
SetWidgetAnimationByIndexItemHint="[UjAPI] native SetWidgetAnimationByIndex takes item whichWidget, integer animIndex returns nothing"

SetWidgetAnimationByIndexDestructable=SetWidgetAnimationByIndex (Destructable)
SetWidgetAnimationByIndexDestructable="SetWidgetAnimationByIndexDestructable(",~whichWidget,", ",~animIndex,")"
SetWidgetAnimationByIndexDestructableHint="[UjAPI] native SetWidgetAnimationByIndex takes destructable whichWidget, integer animIndex returns nothing"

SetWidgetAnimationUnit=SetWidgetAnimation (Unit)
SetWidgetAnimationUnit="SetWidgetAnimationUnit(",~whichWidget,", ",~animationName,")"
SetWidgetAnimationUnitHint="[UjAPI] native SetWidgetAnimation takes unit whichWidget, string animationName returns nothing"

SetWidgetAnimationItem=SetWidgetAnimation (Item)
SetWidgetAnimationItem="SetWidgetAnimationItem(",~whichWidget,", ",~animationName,")"
SetWidgetAnimationItemHint="[UjAPI] native SetWidgetAnimation takes item whichWidget, string animationName returns nothing"

SetWidgetAnimationDestructable=SetWidgetAnimation (Destructable)
SetWidgetAnimationDestructable="SetWidgetAnimationDestructable(",~whichWidget,", ",~animationName,")"
SetWidgetAnimationDestructableHint="[UjAPI] native SetWidgetAnimation takes destructable whichWidget, string animationName returns nothing"

QueueWidgetAnimationByIndexUnit=QueueWidgetAnimationByIndex (Unit)
QueueWidgetAnimationByIndexUnit="QueueWidgetAnimationByIndexUnit(",~whichWidget,", ",~animIndex,")"
QueueWidgetAnimationByIndexUnitHint="[UjAPI] native QueueWidgetAnimationByIndex takes unit whichWidget, integer animIndex returns nothing"

QueueWidgetAnimationByIndexItem=QueueWidgetAnimationByIndex (Item)
QueueWidgetAnimationByIndexItem="QueueWidgetAnimationByIndexItem(",~whichWidget,", ",~animIndex,")"
QueueWidgetAnimationByIndexItemHint="[UjAPI] native QueueWidgetAnimationByIndex takes item whichWidget, integer animIndex returns nothing"

QueueWidgetAnimationByIndexDestructable=QueueWidgetAnimationByIndex (Destructable)
QueueWidgetAnimationByIndexDestructable="QueueWidgetAnimationByIndexDestructable(",~whichWidget,", ",~animIndex,")"
QueueWidgetAnimationByIndexDestructableHint="[UjAPI] native QueueWidgetAnimationByIndex takes destructable whichWidget, integer animIndex returns nothing"

QueueWidgetAnimationUnit=QueueWidgetAnimation (Unit)
QueueWidgetAnimationUnit="QueueWidgetAnimationUnit(",~whichWidget,", ",~animationName,")"
QueueWidgetAnimationUnitHint="[UjAPI] native QueueWidgetAnimation takes unit whichWidget, string animationName returns nothing"

QueueWidgetAnimationItem=QueueWidgetAnimation (Item)
QueueWidgetAnimationItem="QueueWidgetAnimationItem(",~whichWidget,", ",~animationName,")"
QueueWidgetAnimationItemHint="[UjAPI] native QueueWidgetAnimation takes item whichWidget, string animationName returns nothing"

QueueWidgetAnimationDestructable=QueueWidgetAnimation (Destructable)
QueueWidgetAnimationDestructable="QueueWidgetAnimationDestructable(",~whichWidget,", ",~animationName,")"
QueueWidgetAnimationDestructableHint="[UjAPI] native QueueWidgetAnimation takes destructable whichWidget, string animationName returns nothing"

SetWidgetAnimationOffsetPercentUnit=SetWidgetAnimationOffsetPercent (Unit)
SetWidgetAnimationOffsetPercentUnit="SetWidgetAnimationOffsetPercentUnit(",~whichWidget,", ",~percent,")"
SetWidgetAnimationOffsetPercentUnitHint="[UjAPI] native SetWidgetAnimationOffsetPercent takes unit whichWidget, real percent returns nothing"

SetWidgetAnimationOffsetPercentItem=SetWidgetAnimationOffsetPercent (Item)
SetWidgetAnimationOffsetPercentItem="SetWidgetAnimationOffsetPercentItem(",~whichWidget,", ",~percent,")"
SetWidgetAnimationOffsetPercentItemHint="[UjAPI] native SetWidgetAnimationOffsetPercent takes item whichWidget, real percent returns nothing"

SetWidgetAnimationOffsetPercentDestructable=SetWidgetAnimationOffsetPercent (Destructable)
SetWidgetAnimationOffsetPercentDestructable="SetWidgetAnimationOffsetPercentDestructable(",~whichWidget,", ",~percent,")"
SetWidgetAnimationOffsetPercentDestructableHint="[UjAPI] native SetWidgetAnimationOffsetPercent takes destructable whichWidget, real percent returns nothing"

SetWidgetAnimationFrozenUnit=SetWidgetAnimationFrozen (Unit)
SetWidgetAnimationFrozenUnit="SetWidgetAnimationFrozenUnit(",~whichWidget,", ",~isFreeze,")"
SetWidgetAnimationFrozenUnitHint="[UjAPI] native SetWidgetAnimationFrozen takes unit whichWidget, boolean isFreeze returns nothing"

SetWidgetAnimationFrozenItem=SetWidgetAnimationFrozen (Item)
SetWidgetAnimationFrozenItem="SetWidgetAnimationFrozenItem(",~whichWidget,", ",~isFreeze,")"
SetWidgetAnimationFrozenItemHint="[UjAPI] native SetWidgetAnimationFrozen takes item whichWidget, boolean isFreeze returns nothing"

SetWidgetAnimationFrozenDestructable=SetWidgetAnimationFrozen (Destructable)
SetWidgetAnimationFrozenDestructable="SetWidgetAnimationFrozenDestructable(",~whichWidget,", ",~isFreeze,")"
SetWidgetAnimationFrozenDestructableHint="[UjAPI] native SetWidgetAnimationFrozen takes destructable whichWidget, boolean isFreeze returns nothing"

TriggerRegisterWidgetEventUnit=TriggerRegisterWidgetEvent (Unit)
TriggerRegisterWidgetEventUnit="TriggerRegisterWidgetEventUnit(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventUnitHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, unit whichWidget, widgetevent whichWidgetEvent returns event"

TriggerRegisterWidgetEventItem=TriggerRegisterWidgetEvent (Item)
TriggerRegisterWidgetEventItem="TriggerRegisterWidgetEventItem(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventItemHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, item whichWidget, widgetevent whichWidgetEvent returns event"

TriggerRegisterWidgetEventDestructable=TriggerRegisterWidgetEvent (Destructable)
TriggerRegisterWidgetEventDestructable="TriggerRegisterWidgetEventDestructable(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventDestructableHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, destructable whichWidget, widgetevent whichWidgetEvent returns event"

SetDestructableVariation=SetDestructableVariation
SetDestructableVariation="SetDestructableVariation(",~whichDestructable,", ",~variation,")"
SetDestructableVariationHint="[UjAPI] native SetDestructableVariation takes destructable whichDestructable, integer variation returns nothing"

SetDestructableVariationEx=SetDestructableVariationEx
SetDestructableVariationEx="SetDestructableVariationEx(",~whichDestructable,", ",~variation,", ",~ignoreStateCheck,")"
SetDestructableVariationExHint="[UjAPI] native SetDestructableVariationEx takes destructable whichDestructable, integer variation, boolean ignoreStateCheck returns nothing"

SetDestructableBlighted=SetDestructableBlighted
SetDestructableBlighted="SetDestructableBlighted(",~whichDestructable,", ",~flag,")"
SetDestructableBlightedHint="[UjAPI] native SetDestructableBlighted takes destructable whichDestructable, boolean flag returns nothing"

ResetDestructableZ=ResetDestructableZ
ResetDestructableZ="ResetDestructableZ(",~whichDestructable,")"
ResetDestructableZHint="[UjAPI] native ResetDestructableZ takes destructable whichDestructable returns nothing"

SetDestructableHeight=SetDestructableHeight
SetDestructableHeight="SetDestructableHeight(",~whichDestructable,", ",~height,")"
SetDestructableHeightHint="[UjAPI] native SetDestructableHeight takes destructable whichDestructable, real height returns nothing"

SetDestructablePositionWithZ=SetDestructablePositionWithZ
SetDestructablePositionWithZ="SetDestructablePositionWithZ(",~whichDestructable,", ",~x,", ",~y,", ",~z,")"
SetDestructablePositionWithZHint="[UjAPI] native SetDestructablePositionWithZ takes destructable whichDestructable, real x, real y, real z returns nothing"

SetDestructablePosition=SetDestructablePosition
SetDestructablePosition="SetDestructablePosition(",~whichDestructable,", ",~x,", ",~y,")"
SetDestructablePositionHint="[UjAPI] native SetDestructablePosition takes destructable whichDestructable, real x, real y returns nothing"

SetDestructablePositionLoc=SetDestructablePositionLoc
SetDestructablePositionLoc="SetDestructablePositionLoc(",~whichDestructable,", ",~whichLocation,")"
SetDestructablePositionLocHint="[UjAPI] native SetDestructablePositionLoc takes destructable whichDestructable, location whichLocation returns nothing"

SetDestructableX=SetDestructableX
SetDestructableX="SetDestructableX(",~whichDestructable,", ",~x,")"
SetDestructableXHint="[UjAPI] native SetDestructableX takes destructable whichDestructable, real x returns nothing"

SetDestructableY=SetDestructableY
SetDestructableY="SetDestructableY(",~whichDestructable,", ",~y,")"
SetDestructableYHint="[UjAPI] native SetDestructableY takes destructable whichDestructable, real y returns nothing"

SetDestructableZ=SetDestructableZ
SetDestructableZ="SetDestructableZ(",~whichDestructable,", ",~z,")"
SetDestructableZHint="[UjAPI] native SetDestructableZ takes destructable whichDestructable, real z returns nothing"

SetDestructablePlayerColour=SetDestructablePlayerColour
SetDestructablePlayerColour="SetDestructablePlayerColour(",~whichDestructable,", ",~color,")"
SetDestructablePlayerColourHint="[UjAPI] native SetDestructablePlayerColour takes destructable whichDestructable, playercolor color returns nothing"

SetDestructableVertexColour=SetDestructableVertexColour
SetDestructableVertexColour="SetDestructableVertexColour(",~whichDestructable,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetDestructableVertexColourHint="[UjAPI] native SetDestructableVertexColour takes destructable whichDestructable, integer red, integer green, integer blue, integer alpha returns nothing"

SetDestructableTimeScale=SetDestructableTimeScale
SetDestructableTimeScale="SetDestructableTimeScale(",~whichDestructable,", ",~timeScale,")"
SetDestructableTimeScaleHint="[UjAPI] native SetDestructableTimeScale takes destructable whichDestructable, real timeScale returns nothing"

SetDestructableScale=SetDestructableScale
SetDestructableScale="SetDestructableScale(",~whichDestructable,", ",~scale,")"
SetDestructableScaleHint="[UjAPI] native SetDestructableScale takes destructable whichDestructable, real scale returns nothing"

SetDestructableFacing=SetDestructableFacing
SetDestructableFacing="SetDestructableFacing(",~whichDestructable,", ",~facing,", ",~isInstant,")"
SetDestructableFacingHint="[UjAPI] native SetDestructableFacing takes destructable whichDestructable, real facing, boolean isInstant returns nothing"

SetDestructableMatrixScale=SetDestructableMatrixScale
SetDestructableMatrixScale="SetDestructableMatrixScale(",~whichDestructable,", ",~x,", ",~y,", ",~z,")"
SetDestructableMatrixScaleHint="[UjAPI] native SetDestructableMatrixScale takes destructable whichDestructable, real x, real y, real z returns nothing"

ResetDestructableMatrix=ResetDestructableMatrix
ResetDestructableMatrix="ResetDestructableMatrix(",~whichDestructable,")"
ResetDestructableMatrixHint="[UjAPI] native ResetDestructableMatrix takes destructable whichDestructable returns nothing"

SetDestructableOrientationEx=SetDestructableOrientationEx
SetDestructableOrientationEx="SetDestructableOrientationEx(",~whichDestructable,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetDestructableOrientationExHint="[UjAPI] native SetDestructableOrientationEx takes destructable whichDestructable, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetDestructableOrientation=SetDestructableOrientation
SetDestructableOrientation="SetDestructableOrientation(",~whichDestructable,", ",~yaw,", ",~pitch,", ",~roll,")"
SetDestructableOrientationHint="[UjAPI] native SetDestructableOrientation takes destructable whichDestructable, real yaw, real pitch, real roll returns nothing"

SetDestructableYaw=SetDestructableYaw
SetDestructableYaw="SetDestructableYaw(",~whichDestructable,", ",~yaw,")"
SetDestructableYawHint="[UjAPI] native SetDestructableYaw takes destructable whichDestructable, real yaw returns nothing"

SetDestructablePitch=SetDestructablePitch
SetDestructablePitch="SetDestructablePitch(",~whichDestructable,", ",~pitch,")"
SetDestructablePitchHint="[UjAPI] native SetDestructablePitch takes destructable whichDestructable, real pitch returns nothing"

SetDestructableRoll=SetDestructableRoll
SetDestructableRoll="SetDestructableRoll(",~whichDestructable,", ",~roll,")"
SetDestructableRollHint="[UjAPI] native SetDestructableRoll takes destructable whichDestructable, real roll returns nothing"

SetDestructableModel=SetDestructableModel
SetDestructableModel="SetDestructableModel(",~whichDestructable,", ",~modelFile,")"
SetDestructableModelHint="[UjAPI] native SetDestructableModel takes destructable whichDestructable, string modelFile returns nothing"

SetDestructableModelEx=SetDestructableModelEx
SetDestructableModelEx="SetDestructableModelEx(",~whichDestructable,", ",~modelFile,", ",~playerId,")"
SetDestructableModelExHint="[UjAPI] native SetDestructableModelEx takes destructable whichDestructable, string modelFile, integer playerId returns nothing"

SetDestructablePortrait=SetDestructablePortrait
SetDestructablePortrait="SetDestructablePortrait(",~whichDestructable,", ",~modelName,")"
SetDestructablePortraitHint="[UjAPI] native SetDestructablePortrait takes destructable whichDestructable, string modelName returns nothing"

SetDestructableMaterialTexture=SetDestructableMaterialTexture
SetDestructableMaterialTexture="SetDestructableMaterialTexture(",~whichDestructable,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetDestructableMaterialTextureHint="[UjAPI] native SetDestructableMaterialTexture takes destructable whichDestructable, string textureName, integer materialId, integer textureIndex returns nothing"

SetDestructableTexture=SetDestructableTexture
SetDestructableTexture="SetDestructableTexture(",~whichDestructable,", ",~textureName,", ",~textureIndex,")"
SetDestructableTextureHint="[UjAPI] native SetDestructableTexture takes destructable whichDestructable, string textureName, integer textureIndex returns nothing"

SetDestructableReplaceableTexture=SetDestructableReplaceableTexture
SetDestructableReplaceableTexture="SetDestructableReplaceableTexture(",~whichDestructable,", ",~textureName,", ",~textureIndex,")"
SetDestructableReplaceableTextureHint="[UjAPI] native SetDestructableReplaceableTexture takes destructable whichDestructable, string textureName, integer textureIndex returns nothing"

SetDestructableAnimationWithRarityByIndex=SetDestructableAnimationWithRarityByIndex
SetDestructableAnimationWithRarityByIndex="SetDestructableAnimationWithRarityByIndex(",~whichDestructable,", ",~animIndex,", ",~rarity,")"
SetDestructableAnimationWithRarityByIndexHint="[UjAPI] native SetDestructableAnimationWithRarityByIndex takes destructable whichDestructable, integer animIndex, raritycontrol rarity returns nothing"

SetDestructableAnimationWithRarity=SetDestructableAnimationWithRarity
SetDestructableAnimationWithRarity="SetDestructableAnimationWithRarity(",~whichDestructable,", ",~animationName,", ",~rarity,")"
SetDestructableAnimationWithRarityHint="[UjAPI] native SetDestructableAnimationWithRarity takes destructable whichDestructable, string animationName, raritycontrol rarity returns nothing"

SetDestructableAnimationByIndex=SetDestructableAnimationByIndex
SetDestructableAnimationByIndex="SetDestructableAnimationByIndex(",~whichDestructable,", ",~animIndex,")"
SetDestructableAnimationByIndexHint="[UjAPI] native SetDestructableAnimationByIndex takes destructable whichDestructable, integer animIndex returns nothing"

QueueDestructableAnimationByIndex=QueueDestructableAnimationByIndex
QueueDestructableAnimationByIndex="QueueDestructableAnimationByIndex(",~whichDestructable,", ",~animIndex,")"
QueueDestructableAnimationByIndexHint="[UjAPI] native QueueDestructableAnimationByIndex takes destructable whichDestructable, integer animIndex returns nothing"

SetDestructableAnimationOffsetPercent=SetDestructableAnimationOffsetPercent
SetDestructableAnimationOffsetPercent="SetDestructableAnimationOffsetPercent(",~whichDestructable,", ",~percent,")"
SetDestructableAnimationOffsetPercentHint="[UjAPI] native SetDestructableAnimationOffsetPercent takes destructable whichDestructable, real percent returns nothing"

SetDestructableAnimationFrozen=SetDestructableAnimationFrozen
SetDestructableAnimationFrozen="SetDestructableAnimationFrozen(",~whichDestructable,", ",~isFreeze,")"
SetDestructableAnimationFrozenHint="[UjAPI] native SetDestructableAnimationFrozen takes destructable whichDestructable, boolean isFreeze returns nothing"

EnumDestructablesInRange=EnumDestructablesInRange
EnumDestructablesInRange="EnumDestructablesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumDestructablesInRangeHint="[UjAPI] native EnumDestructablesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI] native SetBaseItemIntegerFieldById takes integer itemTypeId, itemintegerfield whichField, integer value returns boolean"

SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI] native SetBaseItemBooleanFieldById takes integer itemTypeId, itembooleanfield whichField, boolean value returns boolean"

SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI] native SetBaseItemRealFieldById takes integer itemTypeId, itemrealfield whichField, real value returns boolean"

SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemIntegerFieldHint="[UjAPI] native SetItemIntegerField takes item whichItem, itemintegerfield whichField, integer value returns boolean"

SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemBooleanFieldHint="[UjAPI] native SetItemBooleanField takes item whichItem, itembooleanfield whichField, boolean value returns boolean"

SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemRealFieldHint="[UjAPI] native SetItemRealField takes item whichItem, itemrealfield whichField, real value returns boolean"

SetItemPositionWithZ=SetItemPositionWithZ
SetItemPositionWithZ="SetItemPositionWithZ(",~whichItem,", ",~x,", ",~y,", ",~z,")"
SetItemPositionWithZHint="[UjAPI] native SetItemPositionWithZ takes item whichItem, real x, real y, real z returns nothing"

SetItemX=SetItemX
SetItemX="SetItemX(",~whichItem,", ",~x,")"
SetItemXHint="[UjAPI] native SetItemX takes item whichItem, real x returns nothing"

SetItemY=SetItemY
SetItemY="SetItemY(",~whichItem,", ",~y,")"
SetItemYHint="[UjAPI] native SetItemY takes item whichItem, real y returns nothing"

SetItemZ=SetItemZ
SetItemZ="SetItemZ(",~whichItem,", ",~z,")"
SetItemZHint="[UjAPI] native SetItemZ takes item whichItem, real z returns nothing"

ResetItemZ=ResetItemZ
ResetItemZ="ResetItemZ(",~whichItem,")"
ResetItemZHint="[UjAPI] native ResetItemZ takes item whichItem returns nothing"

SetItemHeight=SetItemHeight
SetItemHeight="SetItemHeight(",~whichItem,", ",~height,")"
SetItemHeightHint="[UjAPI] native SetItemHeight takes item whichItem, real height returns nothing"

SetItemLife=SetItemLife
SetItemLife="SetItemLife(",~whichItem,", ",~life,")"
SetItemLifeHint="[UjAPI] native SetItemLife takes item whichItem, real life returns nothing"

SetItemMaxLife=SetItemMaxLife
SetItemMaxLife="SetItemMaxLife(",~whichItem,", ",~maxLife,")"
SetItemMaxLifeHint="[UjAPI] native SetItemMaxLife takes item whichItem, real maxLife returns nothing"

SetItemMaxCharges=SetItemMaxCharges
SetItemMaxCharges="SetItemMaxCharges(",~whichItem,", ",~charges,")"
SetItemMaxChargesHint="[UjAPI] native SetItemMaxCharges takes item whichItem, integer charges returns nothing"

ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(",~whichItem,", ",~whichAbility,")"
ItemAddAbilityHint="[UjAPI] native ItemAddAbility takes item whichItem, ability whichAbility returns boolean"

ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(",~whichItem,", ",~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI] native ItemRemoveAbility takes item whichItem, ability whichAbility returns boolean"

ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(",~whichItem,", ",~abilityTypeId,")"
ItemAddAbilityByIdHint="[UjAPI] native ItemAddAbilityById takes item whichItem, integer abilityTypeId returns boolean"

ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(",~whichItem,", ",~abilityTypeId,")"
ItemRemoveAbilityByIdHint="[UjAPI] native ItemRemoveAbilityById takes item whichItem, integer abilityTypeId returns boolean"

DisableItem=DisableItem
DisableItem="DisableItem(",~whichItem,", ",~hideUI,", ",~disable,", ",~extraFlags,")"
DisableItemHint="[UjAPI] native DisableItem takes item whichItem, boolean hideUI, boolean disable, integer extraFlags returns nothing"

EnableItem=EnableItem
EnableItem="EnableItem(",~whichItem,", ",~showUI,", ",~enable,", ",~extraFlags,")"
EnableItemHint="[UjAPI] native EnableItem takes item whichItem, boolean showUI, boolean enable, integer extraFlags returns nothing"

SetItemCooldown=SetItemCooldown
SetItemCooldown="SetItemCooldown(",~whichItem,", ",~cooldown,")"
SetItemCooldownHint="[UjAPI] native SetItemCooldown takes item whichItem, real cooldown returns nothing"

StartItemCooldown=StartItemCooldown
StartItemCooldown="StartItemCooldown(",~whichItem,", ",~cooldown,")"
StartItemCooldownHint="[UjAPI] native StartItemCooldown takes item whichItem, real cooldown returns nothing"

SetItemRemainingCooldown=SetItemRemainingCooldown
SetItemRemainingCooldown="SetItemRemainingCooldown(",~whichItem,", ",~cooldown,")"
SetItemRemainingCooldownHint="[UjAPI] native SetItemRemainingCooldown takes item whichItem, real cooldown returns nothing"

SetItemPlayerColour=SetItemPlayerColour
SetItemPlayerColour="SetItemPlayerColour(",~whichItem,", ",~color,")"
SetItemPlayerColourHint="[UjAPI] native SetItemPlayerColour takes item whichItem, playercolor color returns nothing"

SetItemVertexColour=SetItemVertexColour
SetItemVertexColour="SetItemVertexColour(",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetItemVertexColourHint="[UjAPI] native SetItemVertexColour takes item whichItem, integer red, integer green, integer blue, integer alpha returns nothing"

SetItemTimeScale=SetItemTimeScale
SetItemTimeScale="SetItemTimeScale(",~whichItem,", ",~timeScale,")"
SetItemTimeScaleHint="[UjAPI] native SetItemTimeScale takes item whichItem, real timeScale returns nothing"

SetItemScale=SetItemScale
SetItemScale="SetItemScale(",~whichItem,", ",~scale,")"
SetItemScaleHint="[UjAPI] native SetItemScale takes item whichItem, real scale returns nothing"

SetItemFacing=SetItemFacing
SetItemFacing="SetItemFacing(",~whichItem,", ",~facing,", ",~isInstant,")"
SetItemFacingHint="[UjAPI] native SetItemFacing takes item whichItem, real facing, boolean isInstant returns nothing"

SetItemMatrixScale=SetItemMatrixScale
SetItemMatrixScale="SetItemMatrixScale(",~whichItem,", ",~x,", ",~y,", ",~z,")"
SetItemMatrixScaleHint="[UjAPI] native SetItemMatrixScale takes item whichItem, real x, real y, real z returns nothing"

ResetItemMatrix=ResetItemMatrix
ResetItemMatrix="ResetItemMatrix(",~whichItem,")"
ResetItemMatrixHint="[UjAPI] native ResetItemMatrix takes item whichItem returns nothing"

SetItemOrientationEx=SetItemOrientationEx
SetItemOrientationEx="SetItemOrientationEx(",~whichItem,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetItemOrientationExHint="[UjAPI] native SetItemOrientationEx takes item whichItem, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetItemOrientation=SetItemOrientation
SetItemOrientation="SetItemOrientation(",~whichItem,", ",~yaw,", ",~pitch,", ",~roll,")"
SetItemOrientationHint="[UjAPI] native SetItemOrientation takes item whichItem, real yaw, real pitch, real roll returns nothing"

SetItemYaw=SetItemYaw
SetItemYaw="SetItemYaw(",~whichItem,", ",~yaw,")"
SetItemYawHint="[UjAPI] native SetItemYaw takes item whichItem, real yaw returns nothing"

SetItemPitch=SetItemPitch
SetItemPitch="SetItemPitch(",~whichItem,", ",~pitch,")"
SetItemPitchHint="[UjAPI] native SetItemPitch takes item whichItem, real pitch returns nothing"

SetItemRoll=SetItemRoll
SetItemRoll="SetItemRoll(",~whichItem,", ",~roll,")"
SetItemRollHint="[UjAPI] native SetItemRoll takes item whichItem, real roll returns nothing"

SetItemModel=SetItemModel
SetItemModel="SetItemModel(",~whichItem,", ",~modelFile,")"
SetItemModelHint="[UjAPI] native SetItemModel takes item whichItem, string modelFile returns nothing"

SetItemModelEx=SetItemModelEx
SetItemModelEx="SetItemModelEx(",~whichItem,", ",~modelFile,", ",~playerColourId,")"
SetItemModelExHint="[UjAPI] native SetItemModelEx takes item whichItem, string modelFile, integer playerColourId returns nothing"

SetItemPortrait=SetItemPortrait
SetItemPortrait="SetItemPortrait(",~whichItem,", ",~modelName,")"
SetItemPortraitHint="[UjAPI] native SetItemPortrait takes item whichItem, string modelName returns nothing"

SetItemMaterialTexture=SetItemMaterialTexture
SetItemMaterialTexture="SetItemMaterialTexture(",~whichItem,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetItemMaterialTextureHint="[UjAPI] native SetItemMaterialTexture takes item whichItem, string textureName, integer materialId, integer textureIndex returns nothing"

SetItemTexture=SetItemTexture
SetItemTexture="SetItemTexture(",~whichItem,", ",~textureName,", ",~textureIndex,")"
SetItemTextureHint="[UjAPI] native SetItemTexture takes item whichItem, string textureName, integer textureIndex returns nothing"

SetItemReplaceableTexture=SetItemReplaceableTexture
SetItemReplaceableTexture="SetItemReplaceableTexture(",~whichItem,", ",~textureName,", ",~textureIndex,")"
SetItemReplaceableTextureHint="[UjAPI] native SetItemReplaceableTexture takes item whichItem, string textureName, integer textureIndex returns nothing"

SetItemAnimationWithRarityByIndex=SetItemAnimationWithRarityByIndex
SetItemAnimationWithRarityByIndex="SetItemAnimationWithRarityByIndex(",~whichItem,", ",~animIndex,", ",~rarity,")"
SetItemAnimationWithRarityByIndexHint="[UjAPI] native SetItemAnimationWithRarityByIndex takes item whichItem, integer animIndex, raritycontrol rarity returns nothing"

SetItemAnimationWithRarity=SetItemAnimationWithRarity
SetItemAnimationWithRarity="SetItemAnimationWithRarity(",~whichItem,", ",~animationName,", ",~rarity,")"
SetItemAnimationWithRarityHint="[UjAPI] native SetItemAnimationWithRarity takes item whichItem, string animationName, raritycontrol rarity returns nothing"

SetItemAnimationByIndex=SetItemAnimationByIndex
SetItemAnimationByIndex="SetItemAnimationByIndex(",~whichItem,", ",~animIndex,")"
SetItemAnimationByIndexHint="[UjAPI] native SetItemAnimationByIndex takes item whichItem, integer animIndex returns nothing"

SetItemAnimation=SetItemAnimation
SetItemAnimation="SetItemAnimation(",~whichItem,", ",~animationName,")"
SetItemAnimationHint="[UjAPI] native SetItemAnimation takes item whichItem, string animationName returns nothing"

QueueItemAnimationByIndex=QueueItemAnimationByIndex
QueueItemAnimationByIndex="QueueItemAnimationByIndex(",~whichItem,", ",~animIndex,")"
QueueItemAnimationByIndexHint="[UjAPI] native QueueItemAnimationByIndex takes item whichItem, integer animIndex returns nothing"

QueueItemAnimation=QueueItemAnimation
QueueItemAnimation="QueueItemAnimation(",~whichItem,", ",~animationName,")"
QueueItemAnimationHint="[UjAPI] native QueueItemAnimation takes item whichItem, string animationName returns nothing"

SetItemAnimationOffsetPercent=SetItemAnimationOffsetPercent
SetItemAnimationOffsetPercent="SetItemAnimationOffsetPercent(",~whichItem,", ",~percent,")"
SetItemAnimationOffsetPercentHint="[UjAPI] native SetItemAnimationOffsetPercent takes item whichItem, real percent returns nothing"

SetItemAnimationFrozen=SetItemAnimationFrozen
SetItemAnimationFrozen="SetItemAnimationFrozen(",~whichItem,", ",~isFreeze,")"
SetItemAnimationFrozenHint="[UjAPI] native SetItemAnimationFrozen takes item whichItem, boolean isFreeze returns nothing"

EnumItemsInRange=EnumItemsInRange
EnumItemsInRange="EnumItemsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumItemsInRangeHint="[UjAPI] native EnumItemsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

SetTriggerItemAllowMoveSlot=SetTriggerItemAllowMoveSlot
SetTriggerItemAllowMoveSlot="SetTriggerItemAllowMoveSlot(",~isMove,")"
SetTriggerItemAllowMoveSlotHint="[UjAPI] native SetTriggerItemAllowMoveSlot takes boolean isMove returns nothing"

SetTriggerItemAllowStack=SetTriggerItemAllowStack
SetTriggerItemAllowStack="SetTriggerItemAllowStack(",~isStack,")"
SetTriggerItemAllowStackHint="[UjAPI] native SetTriggerItemAllowStack takes boolean isStack returns nothing"

SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI] native SetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField, integer value returns boolean"

SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI] native SetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField, boolean value returns boolean"

SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI] native SetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField, real value returns boolean"

SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI] native SetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value returns boolean"

SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI] native SetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"

SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI] native SetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index, real value returns boolean"

SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitIntegerFieldHint="[UjAPI] native SetUnitIntegerField takes unit whichUnit, unitintegerfield whichField, integer value returns boolean"

SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitBooleanFieldHint="[UjAPI] native SetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField, boolean value returns boolean"

SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitRealFieldHint="[UjAPI] native SetUnitRealField takes unit whichUnit, unitrealfield whichField, real value returns boolean"

SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI] native SetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index, integer value returns boolean"

SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI] native SetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"

SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponRealFieldHint="[UjAPI] native SetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index, real value returns boolean"

SetUnitPositionEx=SetUnitPositionEx
SetUnitPositionEx="SetUnitPositionEx(",~whichUnit,", ",~breakOrder,", ",~checkPathing,", ",~x,", ",~y,", ",~z,")"
SetUnitPositionExHint="[UjAPI] native SetUnitPositionEx takes unit whichUnit, boolean breakOrder, boolean checkPathing, real x, real y, real z returns nothing"

SetUnitPositionWithZ=SetUnitPositionWithZ
SetUnitPositionWithZ="SetUnitPositionWithZ(",~whichUnit,", ",~x,", ",~y,", ",~z,")"
SetUnitPositionWithZHint="[UjAPI] native SetUnitPositionWithZ takes unit whichUnit, real x, real y, real z returns nothing"

SetUnitZ=SetUnitZ
SetUnitZ="SetUnitZ(",~whichUnit,", ",~z,")"
SetUnitZHint="[UjAPI] native SetUnitZ takes unit whichUnit, real z returns nothing"

ResetUnitZ=ResetUnitZ
ResetUnitZ="ResetUnitZ(",~whichUnit,")"
ResetUnitZHint="[UjAPI] native ResetUnitZ takes unit whichUnit returns nothing"

SetUnitHeight=SetUnitHeight
SetUnitHeight="SetUnitHeight(",~whichUnit,", ",~height,")"
SetUnitHeightHint="[UjAPI] native SetUnitHeight takes unit whichUnit, real height returns nothing"

SetUnitOverheadOffset=SetUnitOverheadOffset
SetUnitOverheadOffset="SetUnitOverheadOffset(",~whichUnit,", ",~height,")"
SetUnitOverheadOffsetHint="[UjAPI] native SetUnitOverheadOffset takes unit whichUnit, real height returns nothing"

SetUnitTypeId=SetUnitTypeId
SetUnitTypeId="SetUnitTypeId(",~whichUnit,", ",~newId,")"
SetUnitTypeIdHint="[UjAPI] native SetUnitTypeId takes unit whichUnit, integer newId returns nothing"

SetUnitImage=SetUnitImage
SetUnitImage="SetUnitImage(",~whichUnit,", ",~index,", ",~whichImage,")"
SetUnitImageHint="[UjAPI] native SetUnitImage takes unit whichUnit, integer index, image whichImage returns nothing"

SetUnitUbersplat=SetUnitUbersplat
SetUnitUbersplat="SetUnitUbersplat(",~whichUnit,", ",~whichUbersplat,")"
SetUnitUbersplatHint="[UjAPI] native SetUnitUbersplat takes unit whichUnit, ubersplat whichUbersplat returns nothing"

UnitEnableInventory=UnitEnableInventory
UnitEnableInventory="UnitEnableInventory(",~whichUnit,", ",~enable,", ",~ignoreErrorMessages,")"
UnitEnableInventoryHint="[UjAPI] native UnitEnableInventory takes unit whichUnit, boolean enable, boolean ignoreErrorMessages returns nothing"

UnitInventorySetSize=UnitInventorySetSize
UnitInventorySetSize="UnitInventorySetSize(",~whichUnit,", ",~size,")"
UnitInventorySetSizeHint="[UjAPI] native UnitInventorySetSize takes unit whichUnit, integer size returns nothing"

UnitInventoryGetRange=UnitInventoryGetRange
UnitInventoryGetRange="UnitInventoryGetRange(",~whichUnit,", ",~rangeType,")"
UnitInventoryGetRangeHint="[UjAPI] native UnitInventoryGetRange takes unit whichUnit, integer rangeType returns real"

UnitInventorySetRange=UnitInventorySetRange
UnitInventorySetRange="UnitInventorySetRange(",~whichUnit,", ",~rangeType,", ",~range,")"
UnitInventorySetRangeHint="[UjAPI] native UnitInventorySetRange takes unit whichUnit, integer rangeType, real range returns nothing"

UnitEnableMovement=UnitEnableMovement
UnitEnableMovement="UnitEnableMovement(",~whichUnit,", ",~enable,", ",~fullDisable,")"
UnitEnableMovementHint="[UjAPI] native UnitEnableMovement takes unit whichUnit, boolean enable, boolean fullDisable returns nothing"

UnitEnableAttack=UnitEnableAttack
UnitEnableAttack="UnitEnableAttack(",~whichUnit,", ",~enable,", ",~extraFlag,")"
UnitEnableAttackHint="[UjAPI] native UnitEnableAttack takes unit whichUnit, boolean enable, boolean extraFlag returns nothing"

UpdateUnitInvisibilityAlpha=UpdateUnitInvisibilityAlpha
UpdateUnitInvisibilityAlpha="UpdateUnitInvisibilityAlpha(",~whichUnit,")"
UpdateUnitInvisibilityAlphaHint="[UjAPI] native UpdateUnitInvisibilityAlpha takes unit whichUnit returns nothing"

UpdateUnitInfoBar=UpdateUnitInfoBar
UpdateUnitInfoBar="UpdateUnitInfoBar(",~whichUnit,")"
UpdateUnitInfoBarHint="[UjAPI] native UpdateUnitInfoBar takes unit whichUnit returns nothing"

UnitUnapplyUpgrades=UnitUnapplyUpgrades
UnitUnapplyUpgrades="UnitUnapplyUpgrades(",~whichUnit,")"
UnitUnapplyUpgradesHint="[UjAPI] native UnitUnapplyUpgrades takes unit whichUnit returns nothing"

UnitApplyUpgrades=UnitApplyUpgrades
UnitApplyUpgrades="UnitApplyUpgrades(",~whichUnit,")"
UnitApplyUpgradesHint="[UjAPI] native UnitApplyUpgrades takes unit whichUnit returns nothing"

UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI] native UnitAddAbilityEx takes unit whichUnit, integer abilityTypeId, boolean checkForDuplicates returns boolean"

UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI] native UnitRemoveAbilityEx takes unit whichUnit, integer abilityTypeId, boolean removeDuplicates returns boolean"

CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(",~whichUnit,", ",~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI] native CountUnitAbilities takes unit whichUnit, boolean alsoCountBuffs returns integer"

ShowUnitAbility=ShowUnitAbility
ShowUnitAbility="ShowUnitAbility(",~whichUnit,", ",~abilityTypeId,", ",~show,")"
ShowUnitAbilityHint="[UjAPI] native ShowUnitAbility takes unit whichUnit, integer abilityTypeId, boolean show returns nothing"

ShowUnitAbilityEx=ShowUnitAbilityEx
ShowUnitAbilityEx="ShowUnitAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~show,", ",~checkDuplicates,")"
ShowUnitAbilityExHint="[UjAPI] native ShowUnitAbilityEx takes unit whichUnit, integer abilityTypeId, boolean show, boolean checkDuplicates returns nothing"

DisableUnitAbility=DisableUnitAbility
DisableUnitAbility="DisableUnitAbility(",~whichUnit,", ",~abilityTypeId,", ",~hide,", ",~disable,")"
DisableUnitAbilityHint="[UjAPI] native DisableUnitAbility takes unit whichUnit, integer abilityTypeId, boolean hide, boolean disable returns nothing"

DisableUnitAbilityEx=DisableUnitAbilityEx
DisableUnitAbilityEx="DisableUnitAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~hide,", ",~disable,", ",~checkDuplicates,")"
DisableUnitAbilityExHint="[UjAPI] native DisableUnitAbilityEx takes unit whichUnit, integer abilityTypeId, boolean hide, boolean disable, boolean checkDuplicates returns nothing"

EnableUnitAbility=EnableUnitAbility
EnableUnitAbility="EnableUnitAbility(",~whichUnit,", ",~abilityTypeId,", ",~show,", ",~enable,")"
EnableUnitAbilityHint="[UjAPI] native EnableUnitAbility takes unit whichUnit, integer abilityTypeId, boolean show, boolean enable returns nothing"

EnableUnitAbilityEx=EnableUnitAbilityEx
EnableUnitAbilityEx="EnableUnitAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~show,", ",~enable,", ",~checkDuplicates,")"
EnableUnitAbilityExHint="[UjAPI] native EnableUnitAbilityEx takes unit whichUnit, integer abilityTypeId, boolean show, boolean enable, boolean checkDuplicates returns nothing"

UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(",~whichUnit,", ",~whichBuff,")"
UnitAddBuffHint="[UjAPI] native UnitAddBuff takes unit whichUnit, buff whichBuff returns boolean"

UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(",~whichUnit,", ",~whichBuff,", ",~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI] native UnitAddBuffEx takes unit whichUnit, buff whichBuff, boolean checkForDuplicates returns boolean"

UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(",~whichUnit,", ",~buffTypeId,")"
UnitAddBuffByIdHint="[UjAPI] native UnitAddBuffById takes unit whichUnit, integer buffTypeId returns boolean"

UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(",~whichUnit,", ",~buffTypeId,", ",~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI] native UnitAddBuffByIdEx takes unit whichUnit, integer buffTypeId, boolean checkForDuplicates returns boolean"

CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(",~whichUnit,")"
CountUnitBuffsHint="[UjAPI] native CountUnitBuffs takes unit whichUnit returns integer"

SetUnitItemSlots=SetUnitItemSlots
SetUnitItemSlots="SetUnitItemSlots(",~whichUnit,", ",~itemSlots,")"
SetUnitItemSlotsHint="[UjAPI] native SetUnitItemSlots takes unit whichUnit, integer itemSlots returns nothing"

UnitCancelTimedLife=UnitCancelTimedLife
UnitCancelTimedLife="UnitCancelTimedLife(",~whichUnit,")"
UnitCancelTimedLifeHint="[UjAPI] native UnitCancelTimedLife takes unit whichUnit returns nothing"

UnitRestartTimedLife=UnitRestartTimedLife
UnitRestartTimedLife="UnitRestartTimedLife(",~whichUnit,")"
UnitRestartTimedLifeHint="[UjAPI] native UnitRestartTimedLife takes unit whichUnit returns nothing"

SetUnitRemainingTimedLife=SetUnitRemainingTimedLife
SetUnitRemainingTimedLife="SetUnitRemainingTimedLife(",~whichUnit,", ",~duration,")"
SetUnitRemainingTimedLifeHint="[UjAPI] native SetUnitRemainingTimedLife takes unit whichUnit, real duration returns nothing"

SetUnitGhosted=SetUnitGhosted
SetUnitGhosted="SetUnitGhosted(",~whichUnit,", ",~state,", ",~transitionTime,")"
SetUnitGhostedHint="[UjAPI] native SetUnitGhosted takes unit whichUnit, boolean state, real transitionTime returns nothing"

SetUnitSelectable=SetUnitSelectable
SetUnitSelectable="SetUnitSelectable(",~whichUnit,", ",~selectable,")"
SetUnitSelectableHint="[UjAPI] native SetUnitSelectable takes unit whichUnit, boolean selectable returns nothing"

SetUnitTargetable=SetUnitTargetable
SetUnitTargetable="SetUnitTargetable(",~whichUnit,", ",~targetable,")"
SetUnitTargetableHint="[UjAPI] native SetUnitTargetable takes unit whichUnit, boolean targetable returns nothing"

SetUnitTruesightImmuneState=SetUnitTruesightImmuneState
SetUnitTruesightImmuneState="SetUnitTruesightImmuneState(",~whichUnit,", ",~state,")"
SetUnitTruesightImmuneStateHint="[UjAPI] native SetUnitTruesightImmuneState takes unit whichUnit, boolean state returns nothing"

SetUnitVisibleByPlayer=SetUnitVisibleByPlayer
SetUnitVisibleByPlayer="SetUnitVisibleByPlayer(",~whichUnit,", ",~whichPlayer,", ",~flag,")"
SetUnitVisibleByPlayerHint="[UjAPI] native SetUnitVisibleByPlayer takes unit whichUnit, player whichPlayer, boolean flag returns nothing"

SetUnitDetectableByPlayer=SetUnitDetectableByPlayer
SetUnitDetectableByPlayer="SetUnitDetectableByPlayer(",~whichUnit,", ",~whichPlayer,", ",~flag,")"
SetUnitDetectableByPlayerHint="[UjAPI] native SetUnitDetectableByPlayer takes unit whichUnit, player whichPlayer, boolean flag returns nothing"

SetUnitFlyHeightEnabled=SetUnitFlyHeightEnabled
SetUnitFlyHeightEnabled="SetUnitFlyHeightEnabled(",~whichUnit,", ",~enable,")"
SetUnitFlyHeightEnabledHint="[UjAPI] native SetUnitFlyHeightEnabled takes unit whichUnit, boolean enable returns nothing"

SetUnitResourceCurrent=SetUnitResourceCurrent
SetUnitResourceCurrent="SetUnitResourceCurrent(",~whichUnit,", ",~amount,")"
SetUnitResourceCurrentHint="[UjAPI] native SetUnitResourceCurrent takes unit whichUnit, integer amount returns nothing"

SetUnitResourceCapacity=SetUnitResourceCapacity
SetUnitResourceCapacity="SetUnitResourceCapacity(",~whichUnit,", ",~resourceType,", ",~amount,")"
SetUnitResourceCapacityHint="[UjAPI] native SetUnitResourceCapacity takes unit whichUnit, integer resourceType, integer amount returns nothing"

SetUnitResourcePerGather=SetUnitResourcePerGather
SetUnitResourcePerGather="SetUnitResourcePerGather(",~whichUnit,", ",~resourceType,", ",~amount,")"
SetUnitResourcePerGatherHint="[UjAPI] native SetUnitResourcePerGather takes unit whichUnit, integer resourceType, integer amount returns nothing"

SetUnitResourceGatherInterval=SetUnitResourceGatherInterval
SetUnitResourceGatherInterval="SetUnitResourceGatherInterval(",~whichUnit,", ",~interval,")"
SetUnitResourceGatherIntervalHint="[UjAPI] native SetUnitResourceGatherInterval takes unit whichUnit, real interval returns nothing"

SetUnitCurrentSight=SetUnitCurrentSight
SetUnitCurrentSight="SetUnitCurrentSight(",~whichUnit,", ",~realValue,")"
SetUnitCurrentSightHint="[UjAPI] native SetUnitCurrentSight takes unit whichUnit, real realValue returns nothing"

SetUnitAttackRemainingCooldown=SetUnitAttackRemainingCooldown
SetUnitAttackRemainingCooldown="SetUnitAttackRemainingCooldown(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingCooldownHint="[UjAPI] native SetUnitAttackRemainingCooldown takes unit whichUnit, real time returns nothing"

SetUnitAttackRemainingDamagePoint=SetUnitAttackRemainingDamagePoint
SetUnitAttackRemainingDamagePoint="SetUnitAttackRemainingDamagePoint(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingDamagePointHint="[UjAPI] native SetUnitAttackRemainingDamagePoint takes unit whichUnit, real time returns nothing"

SetUnitAttackRemainingBackswing=SetUnitAttackRemainingBackswing
SetUnitAttackRemainingBackswing="SetUnitAttackRemainingBackswing(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingBackswingHint="[UjAPI] native SetUnitAttackRemainingBackswing takes unit whichUnit, real time returns nothing"

UnitAttackTargetUnit=UnitAttackTarget (Unit)
UnitAttackTargetUnit="UnitAttackTargetUnit(",~whichUnit,", ",~whichTarget,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetUnitHint="[UjAPI] native UnitAttackTarget takes unit whichUnit, unit whichTarget, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackTargetItem=UnitAttackTarget (Item)
UnitAttackTargetItem="UnitAttackTargetItem(",~whichUnit,", ",~whichTarget,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetItemHint="[UjAPI] native UnitAttackTarget takes unit whichUnit, item whichTarget, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackTargetDestructable=UnitAttackTarget (Destructable)
UnitAttackTargetDestructable="UnitAttackTargetDestructable(",~whichUnit,", ",~whichTarget,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetDestructableHint="[UjAPI] native UnitAttackTarget takes unit whichUnit, destructable whichTarget, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackTargetPointZ=UnitAttackTargetPointZ
UnitAttackTargetPointZ="UnitAttackTargetPointZ(",~whichUnit,", ",~x,", ",~y,", ",~z,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointZHint="[UjAPI] native UnitAttackTargetPointZ takes unit whichUnit, real x, real y, real z, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackTargetPoint=UnitAttackTargetPoint
UnitAttackTargetPoint="UnitAttackTargetPoint(",~whichUnit,", ",~x,", ",~y,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointHint="[UjAPI] native UnitAttackTargetPoint takes unit whichUnit, real x, real y, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackTargetPointLoc=UnitAttackTargetPointLoc
UnitAttackTargetPointLoc="UnitAttackTargetPointLoc(",~whichUnit,", ",~whichLocation,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointLocHint="[UjAPI] native UnitAttackTargetPointLoc takes unit whichUnit, location whichLocation, boolean ignoreDistance, boolean isInstant returns nothing"

UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(",~whichUnit,")"
UnitAttackCancelHint="[UjAPI] native UnitAttackCancel takes unit whichUnit returns boolean"

UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(",~whichUnit,")"
UnitAttackRestartHint="[UjAPI] native UnitAttackRestart takes unit whichUnit returns boolean"

UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(",~whichUnit,")"
UnitAttackFinishHint="[UjAPI] native UnitAttackFinish takes unit whichUnit returns boolean"

SetUnitAttackTypeByIndex=SetUnitAttackTypeByIndex
SetUnitAttackTypeByIndex="SetUnitAttackTypeByIndex(",~whichUnit,", ",~attackIndex,", ",~whichAttackType,")"
SetUnitAttackTypeByIndexHint="[UjAPI] native SetUnitAttackTypeByIndex takes unit whichUnit, integer attackIndex, attacktype whichAttackType returns nothing"

SetUnitWeaponTypeByIndex=SetUnitWeaponTypeByIndex
SetUnitWeaponTypeByIndex="SetUnitWeaponTypeByIndex(",~whichUnit,", ",~attackIndex,", ",~whichWeaponType,")"
SetUnitWeaponTypeByIndexHint="[UjAPI] native SetUnitWeaponTypeByIndex takes unit whichUnit, integer attackIndex, weapontype whichWeaponType returns nothing"

SetUnitWeaponSoundByIndex=SetUnitWeaponSoundByIndex
SetUnitWeaponSoundByIndex="SetUnitWeaponSoundByIndex(",~whichUnit,", ",~attackIndex,", ",~weaponSound,")"
SetUnitWeaponSoundByIndexHint="[UjAPI] native SetUnitWeaponSoundByIndex takes unit whichUnit, integer attackIndex, integer weaponSound returns nothing"

SetUnitBaseDamageByIndex=SetUnitBaseDamageByIndex
SetUnitBaseDamageByIndex="SetUnitBaseDamageByIndex(",~whichUnit,", ",~attackIndex,", ",~damage,")"
SetUnitBaseDamageByIndexHint="[UjAPI] native SetUnitBaseDamageByIndex takes unit whichUnit, integer attackIndex, integer damage returns nothing"

SetUnitBonusDamageByIndex=SetUnitBonusDamageByIndex
SetUnitBonusDamageByIndex="SetUnitBonusDamageByIndex(",~whichUnit,", ",~attackIndex,", ",~bonusDamage,")"
SetUnitBonusDamageByIndexHint="[UjAPI] native SetUnitBonusDamageByIndex takes unit whichUnit, integer attackIndex, integer bonusDamage returns nothing"

SetUnitDamageDicesSideByIndex=SetUnitDamageDicesSideByIndex
SetUnitDamageDicesSideByIndex="SetUnitDamageDicesSideByIndex(",~whichUnit,", ",~attackIndex,", ",~dicesSides,")"
SetUnitDamageDicesSideByIndexHint="[UjAPI] native SetUnitDamageDicesSideByIndex takes unit whichUnit, integer attackIndex, integer dicesSides returns nothing"

SetUnitDamageDicesByIndex=SetUnitDamageDicesByIndex
SetUnitDamageDicesByIndex="SetUnitDamageDicesByIndex(",~whichUnit,", ",~attackIndex,", ",~dices,")"
SetUnitDamageDicesByIndexHint="[UjAPI] native SetUnitDamageDicesByIndex takes unit whichUnit, integer attackIndex, integer dices returns nothing"

SetUnitAttackRangeByIndex=SetUnitAttackRangeByIndex
SetUnitAttackRangeByIndex="SetUnitAttackRangeByIndex(",~whichUnit,", ",~attackIndex,", ",~range,")"
SetUnitAttackRangeByIndexHint="[UjAPI] native SetUnitAttackRangeByIndex takes unit whichUnit, integer attackIndex, real range returns nothing"

SetUnitAttackSpeed=SetUnitAttackSpeed
SetUnitAttackSpeed="SetUnitAttackSpeed(",~whichUnit,", ",~attackSpeed,")"
SetUnitAttackSpeedHint="[UjAPI] native SetUnitAttackSpeed takes unit whichUnit, real attackSpeed returns nothing"

SetUnitAttackCooldownByIndex=SetUnitAttackCooldownByIndex
SetUnitAttackCooldownByIndex="SetUnitAttackCooldownByIndex(",~whichUnit,", ",~attackIndex,", ",~attackCooldown,")"
SetUnitAttackCooldownByIndexHint="[UjAPI] native SetUnitAttackCooldownByIndex takes unit whichUnit, integer attackIndex, real attackCooldown returns nothing"

SetUnitBackswingPointByIndex=SetUnitBackswingPointByIndex
SetUnitBackswingPointByIndex="SetUnitBackswingPointByIndex(",~whichUnit,", ",~attackIndex,", ",~backswing,")"
SetUnitBackswingPointByIndexHint="[UjAPI] native SetUnitBackswingPointByIndex takes unit whichUnit, integer attackIndex, real backswing returns nothing"

SetUnitDamagePointByIndex=SetUnitDamagePointByIndex
SetUnitDamagePointByIndex="SetUnitDamagePointByIndex(",~whichUnit,", ",~attackIndex,", ",~damagePoint,")"
SetUnitDamagePointByIndexHint="[UjAPI] native SetUnitDamagePointByIndex takes unit whichUnit, integer attackIndex, real damagePoint returns nothing"

SetUnitArmourType=SetUnitArmourType
SetUnitArmourType="SetUnitArmourType(",~whichUnit,", ",~whichArmour,")"
SetUnitArmourTypeHint="[UjAPI] native SetUnitArmourType takes unit whichUnit, defensetype whichArmour returns nothing"

SetUnitArmour=SetUnitArmour
SetUnitArmour="SetUnitArmour(",~whichUnit,", ",~armour,")"
SetUnitArmourHint="[UjAPI] native SetUnitArmour takes unit whichUnit, real armour returns nothing"

SetUnitBaseMoveSpeed=SetUnitBaseMoveSpeed
SetUnitBaseMoveSpeed="SetUnitBaseMoveSpeed(",~whichUnit,", ",~baseMoveSpeed,")"
SetUnitBaseMoveSpeedHint="[UjAPI] native SetUnitBaseMoveSpeed takes unit whichUnit, real baseMoveSpeed returns nothing"

SetUnitBonusMoveSpeedPercent=SetUnitBonusMoveSpeedPercent
SetUnitBonusMoveSpeedPercent="SetUnitBonusMoveSpeedPercent(",~whichUnit,", ",~bonusMoveSpeedPercent,")"
SetUnitBonusMoveSpeedPercentHint="[UjAPI] native SetUnitBonusMoveSpeedPercent takes unit whichUnit, real bonusMoveSpeedPercent returns nothing"

SetUnitPlayerColour=SetUnitPlayerColour
SetUnitPlayerColour="SetUnitPlayerColour(",~whichUnit,", ",~color,")"
SetUnitPlayerColourHint="[UjAPI] native SetUnitPlayerColour takes unit whichUnit, playercolor color returns nothing"

ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(",~whichUnit,", ",~x,", ",~y,")"
ReviveUnitHint="[UjAPI] native ReviveUnit takes unit whichUnit, real x, real y returns boolean"

ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(",~whichUnit,", ",~loc,")"
ReviveUnitLocHint="[UjAPI] native ReviveUnitLoc takes unit whichUnit, location loc returns boolean"

SetUnitCurrentLife=SetUnitCurrentLife
SetUnitCurrentLife="SetUnitCurrentLife(",~whichUnit,", ",~life,")"
SetUnitCurrentLifeHint="[UjAPI] native SetUnitCurrentLife takes unit whichUnit, real life returns nothing"

SetUnitMaxLife=SetUnitMaxLife
SetUnitMaxLife="SetUnitMaxLife(",~whichUnit,", ",~maxLife,")"
SetUnitMaxLifeHint="[UjAPI] native SetUnitMaxLife takes unit whichUnit, real maxLife returns nothing"

SetUnitLifeRegen=SetUnitLifeRegen
SetUnitLifeRegen="SetUnitLifeRegen(",~whichUnit,", ",~lifeRegen,")"
SetUnitLifeRegenHint="[UjAPI] native SetUnitLifeRegen takes unit whichUnit, real lifeRegen returns nothing"

SetUnitLifeRegenEnabled=SetUnitLifeRegenEnabled
SetUnitLifeRegenEnabled="SetUnitLifeRegenEnabled(",~whichUnit,", ",~enable,")"
SetUnitLifeRegenEnabledHint="[UjAPI] native SetUnitLifeRegenEnabled takes unit whichUnit, boolean enable returns nothing"

SetUnitCurrentMana=SetUnitCurrentMana
SetUnitCurrentMana="SetUnitCurrentMana(",~whichUnit,", ",~mana,")"
SetUnitCurrentManaHint="[UjAPI] native SetUnitCurrentMana takes unit whichUnit, real mana returns nothing"

SetUnitMaxMana=SetUnitMaxMana
SetUnitMaxMana="SetUnitMaxMana(",~whichUnit,", ",~maxMana,")"
SetUnitMaxManaHint="[UjAPI] native SetUnitMaxMana takes unit whichUnit, real maxMana returns nothing"

SetUnitManaRegen=SetUnitManaRegen
SetUnitManaRegen="SetUnitManaRegen(",~whichUnit,", ",~manaRegen,")"
SetUnitManaRegenHint="[UjAPI] native SetUnitManaRegen takes unit whichUnit, real manaRegen returns nothing"

SetUnitManaRegenEnabled=SetUnitManaRegenEnabled
SetUnitManaRegenEnabled="SetUnitManaRegenEnabled(",~whichUnit,", ",~enable,")"
SetUnitManaRegenEnabledHint="[UjAPI] native SetUnitManaRegenEnabled takes unit whichUnit, boolean enable returns nothing"

SetHeroPrimaryAttribute=SetHeroPrimaryAttribute
SetHeroPrimaryAttribute="SetHeroPrimaryAttribute(",~whichUnit,", ",~whichHeroAttribute,")"
SetHeroPrimaryAttributeHint="[UjAPI] native SetHeroPrimaryAttribute takes unit whichUnit, heroattribute whichHeroAttribute returns nothing"

SetUnitModel=SetUnitModel
SetUnitModel="SetUnitModel(",~whichUnit,", ",~modelName,")"
SetUnitModelHint="[UjAPI] native SetUnitModel takes unit whichUnit, string modelName returns nothing"

SetUnitModelEx=SetUnitModelEx
SetUnitModelEx="SetUnitModelEx(",~whichUnit,", ",~modelName,", ",~playercolourId,")"
SetUnitModelExHint="[UjAPI] native SetUnitModelEx takes unit whichUnit, string modelName, integer playercolourId returns nothing"

SetUnitPortrait=SetUnitPortrait
SetUnitPortrait="SetUnitPortrait(",~whichUnit,", ",~modelName,")"
SetUnitPortraitHint="[UjAPI] native SetUnitPortrait takes unit whichUnit, string modelName returns nothing"

SetUnitMaterialTexture=SetUnitMaterialTexture
SetUnitMaterialTexture="SetUnitMaterialTexture(",~whichUnit,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetUnitMaterialTextureHint="[UjAPI] native SetUnitMaterialTexture takes unit whichUnit, string textureName, integer materialId, integer textureIndex returns nothing"

SetUnitTexture=SetUnitTexture
SetUnitTexture="SetUnitTexture(",~whichUnit,", ",~textureName,", ",~textureIndex,")"
SetUnitTextureHint="[UjAPI] native SetUnitTexture takes unit whichUnit, string textureName, integer textureIndex returns nothing"

SetUnitReplaceableTexture=SetUnitReplaceableTexture
SetUnitReplaceableTexture="SetUnitReplaceableTexture(",~whichUnit,", ",~textureName,", ",~textureIndex,")"
SetUnitReplaceableTextureHint="[UjAPI] native SetUnitReplaceableTexture takes unit whichUnit, string textureName, integer textureIndex returns nothing"

SetUnitCollisionType=SetUnitCollisionType
SetUnitCollisionType="SetUnitCollisionType(",~whichUnit,", ",~collisionType,")"
SetUnitCollisionTypeHint="[UjAPI] native SetUnitCollisionType takes unit whichUnit, collisiontype collisionType returns nothing"

SetUnitPathingAIType=SetUnitPathingAIType
SetUnitPathingAIType="SetUnitPathingAIType(",~whichUnit,", ",~pathingAIType,")"
SetUnitPathingAITypeHint="[UjAPI] native SetUnitPathingAIType takes unit whichUnit, pathingaitype pathingAIType returns nothing"

SetUnitPathingType=SetUnitPathingType
SetUnitPathingType="SetUnitPathingType(",~whichUnit,", ",~pathingType,")"
SetUnitPathingTypeHint="[UjAPI] native SetUnitPathingType takes unit whichUnit, pathingtype pathingType returns nothing"

SetUnitFacingEx=SetUnitFacingEx
SetUnitFacingEx="SetUnitFacingEx(",~whichUnit,", ",~facing,", ",~isInstant,")"
SetUnitFacingExHint="[UjAPI] native SetUnitFacingEx takes unit whichUnit, real facing, boolean isInstant returns nothing"

SetUnitFacingInstant=SetUnitFacingInstant
SetUnitFacingInstant="SetUnitFacingInstant(",~whichUnit,", ",~facing,")"
SetUnitFacingInstantHint="[UjAPI] native SetUnitFacingInstant takes unit whichUnit, real facing returns nothing"

UnitApplySilence=UnitApplySilence
UnitApplySilence="UnitApplySilence(",~whichUnit,", ",~state,")"
UnitApplySilenceHint="[UjAPI] native UnitApplySilence takes unit whichUnit, boolean state returns nothing"

UnitDisableAbilities=UnitDisableAbilities
UnitDisableAbilities="UnitDisableAbilities(",~whichUnit,", ",~state,")"
UnitDisableAbilitiesHint="[UjAPI] native UnitDisableAbilities takes unit whichUnit, boolean state returns nothing"

PauseUnitEx=PauseUnitEx
PauseUnitEx="PauseUnitEx(",~whichUnit,", ",~pause,")"
PauseUnitExHint="[UjAPI] native PauseUnitEx takes unit whichUnit, boolean pause returns nothing"

SetUnitStunned=SetUnitStunned
SetUnitStunned="SetUnitStunned(",~whichUnit,", ",~state,")"
SetUnitStunnedHint="[UjAPI] native SetUnitStunned takes unit whichUnit, boolean state returns nothing"

SetUnitStunCounter=SetUnitStunCounter
SetUnitStunCounter="SetUnitStunCounter(",~whichUnit,", ",~stunCounter,")"
SetUnitStunCounterHint="[UjAPI] native SetUnitStunCounter takes unit whichUnit, integer stunCounter returns nothing"

SetUnitKiller=SetUnitKiller
SetUnitKiller="SetUnitKiller(",~whichUnit,", ",~killer,")"
SetUnitKillerHint="[UjAPI] native SetUnitKiller takes unit whichUnit, unit killer returns nothing"

KillUnitEx=KillUnitEx
KillUnitEx="KillUnitEx(",~whichUnit,", ",~killer,")"
KillUnitExHint="[UjAPI] native KillUnitEx takes unit whichUnit, unit killer returns nothing"

SetUnitAnimationWithRarityByIndex=SetUnitAnimationWithRarityByIndex
SetUnitAnimationWithRarityByIndex="SetUnitAnimationWithRarityByIndex(",~whichUnit,", ",~animIndex,", ",~rarity,")"
SetUnitAnimationWithRarityByIndexHint="[UjAPI] native SetUnitAnimationWithRarityByIndex takes unit whichUnit, integer animIndex, raritycontrol rarity returns nothing"

QueueUnitAnimationByIndex=QueueUnitAnimationByIndex
QueueUnitAnimationByIndex="QueueUnitAnimationByIndex(",~whichUnit,", ",~animIndex,")"
QueueUnitAnimationByIndexHint="[UjAPI] native QueueUnitAnimationByIndex takes unit whichUnit, integer animIndex returns nothing"

SetUnitAnimationOffsetPercent=SetUnitAnimationOffsetPercent
SetUnitAnimationOffsetPercent="SetUnitAnimationOffsetPercent(",~whichUnit,", ",~percent,")"
SetUnitAnimationOffsetPercentHint="[UjAPI] native SetUnitAnimationOffsetPercent takes unit whichUnit, real percent returns nothing"

SetUnitAnimationFrozen=SetUnitAnimationFrozen
SetUnitAnimationFrozen="SetUnitAnimationFrozen(",~whichUnit,", ",~isFreeze,")"
SetUnitAnimationFrozenHint="[UjAPI] native SetUnitAnimationFrozen takes unit whichUnit, boolean isFreeze returns nothing"

UnitEnableAutoOrientation=UnitEnableAutoOrientation
UnitEnableAutoOrientation="UnitEnableAutoOrientation(",~whichUnit,", ",~enable,")"
UnitEnableAutoOrientationHint="[UjAPI] native UnitEnableAutoOrientation takes unit whichUnit, boolean enable returns nothing"

SetUnitYaw=SetUnitYaw
SetUnitYaw="SetUnitYaw(",~whichUnit,", ",~yaw,")"
SetUnitYawHint="[UjAPI] native SetUnitYaw takes unit whichUnit, real yaw returns nothing"

SetUnitPitch=SetUnitPitch
SetUnitPitch="SetUnitPitch(",~whichUnit,", ",~pitch,")"
SetUnitPitchHint="[UjAPI] native SetUnitPitch takes unit whichUnit, real pitch returns nothing"

SetUnitRoll=SetUnitRoll
SetUnitRoll="SetUnitRoll(",~whichUnit,", ",~roll,")"
SetUnitRollHint="[UjAPI] native SetUnitRoll takes unit whichUnit, real roll returns nothing"

SetUnitMatrixScale=SetUnitMatrixScale
SetUnitMatrixScale="SetUnitMatrixScale(",~whichUnit,", ",~x,", ",~y,", ",~z,")"
SetUnitMatrixScaleHint="[UjAPI] native SetUnitMatrixScale takes unit whichUnit, real x, real y, real z returns nothing"

ResetUnitMatrix=ResetUnitMatrix
ResetUnitMatrix="ResetUnitMatrix(",~whichUnit,")"
ResetUnitMatrixHint="[UjAPI] native ResetUnitMatrix takes unit whichUnit returns nothing"

SetUnitOrientationEx=SetUnitOrientationEx
SetUnitOrientationEx="SetUnitOrientationEx(",~whichUnit,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetUnitOrientationExHint="[UjAPI] native SetUnitOrientationEx takes unit whichUnit, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetUnitOrientation=SetUnitOrientation
SetUnitOrientation="SetUnitOrientation(",~whichUnit,", ",~yaw,", ",~pitch,", ",~roll,")"
SetUnitOrientationHint="[UjAPI] native SetUnitOrientation takes unit whichUnit, real yaw, real pitch, real roll returns nothing"

CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateBuildingHint="[UjAPI] native CreateBuilding takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,", ",~isAutoBuild,", ",~workersCanAssist,")"
CreateBuildingExHint="[UjAPI] native CreateBuildingEx takes player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist returns unit"

UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(",~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI] native UnitGetConstructionProgress takes unit whichUnit returns real"

UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(",~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI] native UnitGetConstructionRemainingTime takes unit whichUnit returns real"

UnitSetConstructionRemainingTime=UnitSetConstructionRemainingTime
UnitSetConstructionRemainingTime="UnitSetConstructionRemainingTime(",~whichUnit,", ",~time,")"
UnitSetConstructionRemainingTimeHint="[UjAPI] native UnitSetConstructionRemainingTime takes unit whichUnit, real time returns nothing"

UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(",~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI] native UnitGetUpgradeProgress takes unit whichUnit returns real"

UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(",~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI] native UnitGetUpgradeRemainingTime takes unit whichUnit returns real"

UnitSetUpgradeRemainingTime=UnitSetUpgradeRemainingTime
UnitSetUpgradeRemainingTime="UnitSetUpgradeRemainingTime(",~whichUnit,", ",~time,")"
UnitSetUpgradeRemainingTimeHint="[UjAPI] native UnitSetUpgradeRemainingTime takes unit whichUnit, real time returns nothing"

UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(",~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI] native UnitGetTrainingProgress takes unit whichUnit returns real"

UnitSetTrainingProgress=UnitSetTrainingProgress
UnitSetTrainingProgress="UnitSetTrainingProgress(",~whichUnit,", ",~trainingPercentage,")"
UnitSetTrainingProgressHint="[UjAPI] native UnitSetTrainingProgress takes unit whichUnit, integer trainingPercentage returns nothing"

UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(",~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI] native UnitGetTrainingRemainingTime takes unit whichUnit returns real"

UnitSetTrainingRemainingTime=UnitSetTrainingRemainingTime
UnitSetTrainingRemainingTime="UnitSetTrainingRemainingTime(",~whichUnit,", ",~time,")"
UnitSetTrainingRemainingTimeHint="[UjAPI] native UnitSetTrainingRemainingTime takes unit whichUnit, real time returns nothing"

UnitCancelTrainingAt=UnitCancelTrainingAt
UnitCancelTrainingAt="UnitCancelTrainingAt(",~whichUnit,", ",~index,")"
UnitCancelTrainingAtHint="[UjAPI] native UnitCancelTrainingAt takes unit whichUnit, integer index returns nothing"

UnitSetTrainingTypeIdAt=UnitSetTrainingTypeIdAt
UnitSetTrainingTypeIdAt="UnitSetTrainingTypeIdAt(",~whichUnit,", ",~index,", ",~typeId,")"
UnitSetTrainingTypeIdAtHint="[UjAPI] native UnitSetTrainingTypeIdAt takes unit whichUnit, integer index, integer typeId returns nothing"

UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(",~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI] native UnitGetResearchProgress takes unit whichUnit returns real"

UnitSetResearchProgress=UnitSetResearchProgress
UnitSetResearchProgress="UnitSetResearchProgress(",~whichUnit,", ",~trainingPercentage,")"
UnitSetResearchProgressHint="[UjAPI] native UnitSetResearchProgress takes unit whichUnit, integer trainingPercentage returns nothing"

UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(",~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI] native UnitGetResearchRemainingTime takes unit whichUnit returns real"

UnitSetResearchRemainingTime=UnitSetResearchRemainingTime
UnitSetResearchRemainingTime="UnitSetResearchRemainingTime(",~whichUnit,", ",~time,")"
UnitSetResearchRemainingTimeHint="[UjAPI] native UnitSetResearchRemainingTime takes unit whichUnit, real time returns nothing"

UnitCancelResearchAt=UnitCancelResearchAt
UnitCancelResearchAt="UnitCancelResearchAt(",~whichUnit,", ",~index,")"
UnitCancelResearchAtHint="[UjAPI] native UnitCancelResearchAt takes unit whichUnit, integer index returns nothing"

UnitSetResearchTypeIdAt=UnitSetResearchTypeIdAt
UnitSetResearchTypeIdAt="UnitSetResearchTypeIdAt(",~whichUnit,", ",~index,", ",~typeId,")"
UnitSetResearchTypeIdAtHint="[UjAPI] native UnitSetResearchTypeIdAt takes unit whichUnit, integer index, integer typeId returns nothing"

CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateIllusionHint="[UjAPI] native CreateIllusion takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(",~whichPlayer,", ",~unitTypeId,", ",~whichLocation,", ",~facing,")"
CreateIllusionAtLocHint="[UjAPI] native CreateIllusionAtLoc takes player whichPlayer, integer unitTypeId, location whichLocation, real facing returns unit"

CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(",~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI] native CreateIllusionFromUnit takes unit whichUnit returns unit"

CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(",~whichUnit,", ",~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI] native CreateIllusionFromUnitEx takes unit whichUnit, boolean copyPassives returns unit"

SetIllusionDamageDealt=SetIllusionDamageDealt
SetIllusionDamageDealt="SetIllusionDamageDealt(",~whichUnit,", ",~multiplier,")"
SetIllusionDamageDealtHint="[UjAPI] native SetIllusionDamageDealt takes unit whichUnit, real multiplier returns nothing"

SetIllusionDamageReceived=SetIllusionDamageReceived
SetIllusionDamageReceived="SetIllusionDamageReceived(",~whichUnit,", ",~multiplier,")"
SetIllusionDamageReceivedHint="[UjAPI] native SetIllusionDamageReceived takes unit whichUnit, real multiplier returns nothing"

QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(",~whichUnit,", ",~orderId,")"
QueueImmediateOrderByIdHint="[UjAPI] native QueueImmediateOrderById takes unit whichUnit, integer orderId returns boolean"

QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(",~whichUnit,", ",~orderId,", ",~x,", ",~y,")"
QueuePointOrderByIdHint="[UjAPI] native QueuePointOrderById takes unit whichUnit, integer orderId, real x, real y returns boolean"

QueueTargetOrderByIdUnit=QueueTargetOrderById (Unit)
QueueTargetOrderByIdUnit="QueueTargetOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdUnitHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget returns boolean"

QueueTargetOrderByIdItem=QueueTargetOrderById (Item)
QueueTargetOrderByIdItem="QueueTargetOrderByIdItem(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdItemHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, item targetWidget returns boolean"

QueueTargetOrderByIdDestructable=QueueTargetOrderById (Destructable)
QueueTargetOrderByIdDestructable="QueueTargetOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdDestructableHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget returns boolean"

QueueInstantPointOrderByIdUnit=QueueInstantPointOrderById (Unit)
QueueInstantPointOrderByIdUnit="QueueInstantPointOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdUnitHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, unit instantTargetWidget returns boolean"

QueueInstantPointOrderByIdItem=QueueInstantPointOrderById (Item)
QueueInstantPointOrderByIdItem="QueueInstantPointOrderByIdItem(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdItemHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, item instantTargetWidget returns boolean"

QueueInstantPointOrderByIdDestructable=QueueInstantPointOrderById (Destructable)
QueueInstantPointOrderByIdDestructable="QueueInstantPointOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdDestructableHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitUnit=QueueInstantTargetOrderById (Unit, Unit)
QueueInstantTargetOrderByIdUnitUnit="QueueInstantTargetOrderByIdUnitUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemUnit=QueueInstantTargetOrderById (Item, Unit)
QueueInstantTargetOrderByIdItemUnit="QueueInstantTargetOrderByIdItemUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableUnit=QueueInstantTargetOrderById (Destructable, Unit)
QueueInstantTargetOrderByIdDestructableUnit="QueueInstantTargetOrderByIdDestructableUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitItem=QueueInstantTargetOrderById (Unit, Item)
QueueInstantTargetOrderByIdUnitItem="QueueInstantTargetOrderByIdUnitItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemItem=QueueInstantTargetOrderById (Item, Item)
QueueInstantTargetOrderByIdItemItem="QueueInstantTargetOrderByIdItemItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableItem=QueueInstantTargetOrderById (Destructable, Item)
QueueInstantTargetOrderByIdDestructableItem="QueueInstantTargetOrderByIdDestructableItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitDestructable=QueueInstantTargetOrderById (Unit, Destructable)
QueueInstantTargetOrderByIdUnitDestructable="QueueInstantTargetOrderByIdUnitDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemDestructable=QueueInstantTargetOrderById (Item, Destructable)
QueueInstantTargetOrderByIdItemDestructable="QueueInstantTargetOrderByIdItemDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableDestructable=QueueInstantTargetOrderById (Destructable, Destructable)
QueueInstantTargetOrderByIdDestructableDestructable="QueueInstantTargetOrderByIdDestructableDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, destructable instantTargetWidget returns boolean"

QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(",~whichPeon,", ",~unitTypeId,", ",~x,", ",~y,")"
QueueBuildOrderByIdHint="[UjAPI] native QueueBuildOrderById takes unit whichPeon, integer unitTypeId, real x, real y returns boolean"

QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI] native QueueNeutralImmediateOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId returns boolean"

QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~x,", ",~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI] native QueueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, real x, real y returns boolean"

QueueNeutralTargetOrderByIdUnit=QueueNeutralTargetOrderById (Unit)
QueueNeutralTargetOrderByIdUnit="QueueNeutralTargetOrderByIdUnit(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdUnitHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, unit target returns boolean"

QueueNeutralTargetOrderByIdItem=QueueNeutralTargetOrderById (Item)
QueueNeutralTargetOrderByIdItem="QueueNeutralTargetOrderByIdItem(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdItemHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, item target returns boolean"

QueueNeutralTargetOrderByIdDestructable=QueueNeutralTargetOrderById (Destructable)
QueueNeutralTargetOrderByIdDestructable="QueueNeutralTargetOrderByIdDestructable(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdDestructableHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, destructable target returns boolean"

UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(",~whichUnit,", ",~index,")"
UnitRemoveOrderByIndexHint="[UjAPI] native UnitRemoveOrderByIndex takes unit whichUnit, integer index returns boolean"

UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(",~whichUnit,", ",~orderId,", ",~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI] native UnitRemoveOrderByOrderId takes unit whichUnit, integer orderId, boolean eraseAllSimilar returns boolean"

UnitReverseOrders=UnitReverseOrders
UnitReverseOrders="UnitReverseOrders(",~whichUnit,")"
UnitReverseOrdersHint="[UjAPI] native UnitReverseOrders takes unit whichUnit returns nothing"

UnitClearOrders=UnitClearOrders
UnitClearOrders="UnitClearOrders(",~whichUnit,", ",~onlyQueued,")"
UnitClearOrdersHint="[UjAPI] native UnitClearOrders takes unit whichUnit, boolean onlyQueued returns nothing"

UnitForceStopOrder=UnitForceStopOrder
UnitForceStopOrder="UnitForceStopOrder(",~whichUnit,", ",~clearQueue,")"
UnitForceStopOrderHint="[UjAPI] native UnitForceStopOrder takes unit whichUnit, boolean clearQueue returns nothing"

OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(",~whichOrder,")"
OrderGetNextHint="[UjAPI] native OrderGetNext takes orderhandle whichOrder returns orderhandle"

OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(",~whichOrder,")"
OrderGetTargetXHint="[UjAPI] native OrderGetTargetX takes orderhandle whichOrder returns real"

OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(",~whichOrder,")"
OrderGetTargetYHint="[UjAPI] native OrderGetTargetY takes orderhandle whichOrder returns real"

OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(",~whichOrder,")"
OrderGetTargetLocHint="[UjAPI] native OrderGetTargetLoc takes orderhandle whichOrder returns location"

OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(",~whichOrder,")"
OrderGetSourceXHint="[UjAPI] native OrderGetSourceX takes orderhandle whichOrder returns real"

OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(",~whichOrder,")"
OrderGetSourceYHint="[UjAPI] native OrderGetSourceY takes orderhandle whichOrder returns real"

OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(",~whichOrder,")"
OrderGetSourceLocHint="[UjAPI] native OrderGetSourceLoc takes orderhandle whichOrder returns location"

OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(",~whichOrder,")"
OrderGetTargetHint="[UjAPI] native OrderGetTarget takes orderhandle whichOrder returns widget"

OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(",~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI] native OrderGetTargetDestructable takes orderhandle whichOrder returns destructable"

OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(",~whichOrder,")"
OrderGetTargetItemHint="[UjAPI] native OrderGetTargetItem takes orderhandle whichOrder returns item"

OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(",~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI] native OrderGetTargetUnit takes orderhandle whichOrder returns unit"

CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(",~projectileTypeId,")"
CreateProjectileHint="[UjAPI] native CreateProjectile takes integer projectileTypeId returns projectile"

CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(",~owner,", ",~projectileTypeId,", ",~attackIndex,")"
CreateProjectileExHint="[UjAPI] native CreateProjectileEx takes unit owner, integer projectileTypeId, integer attackIndex returns projectile"

SetProjectileUnitData=SetProjectileUnitData
SetProjectileUnitData="SetProjectileUnitData(",~whichProjectile,", ",~owner,", ",~attackIndex,")"
SetProjectileUnitDataHint="[UjAPI] native SetProjectileUnitData takes projectile whichProjectile, unit owner, integer attackIndex returns nothing"

KillProjectile=KillProjectile
KillProjectile="KillProjectile(",~whichProjectile,")"
KillProjectileHint="[UjAPI] native KillProjectile takes projectile whichProjectile returns nothing"

RemoveProjectile=RemoveProjectile
RemoveProjectile="RemoveProjectile(",~whichProjectile,")"
RemoveProjectileHint="[UjAPI] native RemoveProjectile takes projectile whichProjectile returns nothing"

LaunchProjectile=LaunchProjectile
LaunchProjectile="LaunchProjectile(",~whichProjectile,")"
LaunchProjectileHint="[UjAPI] native LaunchProjectile takes projectile whichProjectile returns nothing"

LaunchProjectileTargetUnit=LaunchProjectileTarget (Unit)
LaunchProjectileTargetUnit="LaunchProjectileTargetUnit(",~whichProjectile,", ",~whichWidget,")"
LaunchProjectileTargetUnitHint="[UjAPI] native LaunchProjectileTarget takes projectile whichProjectile, unit whichWidget returns nothing"

LaunchProjectileTargetItem=LaunchProjectileTarget (Item)
LaunchProjectileTargetItem="LaunchProjectileTargetItem(",~whichProjectile,", ",~whichWidget,")"
LaunchProjectileTargetItemHint="[UjAPI] native LaunchProjectileTarget takes projectile whichProjectile, item whichWidget returns nothing"

LaunchProjectileTargetDestructable=LaunchProjectileTarget (Destructable)
LaunchProjectileTargetDestructable="LaunchProjectileTargetDestructable(",~whichProjectile,", ",~whichWidget,")"
LaunchProjectileTargetDestructableHint="[UjAPI] native LaunchProjectileTarget takes projectile whichProjectile, destructable whichWidget returns nothing"

LaunchProjectileAt=LaunchProjectileAt
LaunchProjectileAt="LaunchProjectileAt(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
LaunchProjectileAtHint="[UjAPI] native LaunchProjectileAt takes projectile whichProjectile, real x, real y, real z returns nothing"

SetProjectileVisible=SetProjectileVisible
SetProjectileVisible="SetProjectileVisible(",~whichProjectile,", ",~visibility,")"
SetProjectileVisibleHint="[UjAPI] native SetProjectileVisible takes projectile whichProjectile, boolean visibility returns nothing"

SetProjectileX=SetProjectileX
SetProjectileX="SetProjectileX(",~whichProjectile,", ",~x,")"
SetProjectileXHint="[UjAPI] native SetProjectileX takes projectile whichProjectile, real x returns nothing"

SetProjectileY=SetProjectileY
SetProjectileY="SetProjectileY(",~whichProjectile,", ",~y,")"
SetProjectileYHint="[UjAPI] native SetProjectileY takes projectile whichProjectile, real y returns nothing"

SetProjectileZ=SetProjectileZ
SetProjectileZ="SetProjectileZ(",~whichProjectile,", ",~z,")"
SetProjectileZHint="[UjAPI] native SetProjectileZ takes projectile whichProjectile, real z returns nothing"

SetProjectileHeight=SetProjectileHeight
SetProjectileHeight="SetProjectileHeight(",~whichProjectile,", ",~height,")"
SetProjectileHeightHint="[UjAPI] native SetProjectileHeight takes projectile whichProjectile, real height returns nothing"

SetProjectilePosition=SetProjectilePosition
SetProjectilePosition="SetProjectilePosition(",~whichProjectile,", ",~x,", ",~y,")"
SetProjectilePositionHint="[UjAPI] native SetProjectilePosition takes projectile whichProjectile, real x, real y returns nothing"

SetProjectilePositionWithZ=SetProjectilePositionWithZ
SetProjectilePositionWithZ="SetProjectilePositionWithZ(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectilePositionWithZHint="[UjAPI] native SetProjectilePositionWithZ takes projectile whichProjectile, real x, real y, real z returns nothing"

SetProjectilePositionLoc=SetProjectilePositionLoc
SetProjectilePositionLoc="SetProjectilePositionLoc(",~whichProjectile,", ",~loc,")"
SetProjectilePositionLocHint="[UjAPI] native SetProjectilePositionLoc takes projectile whichProjectile, location loc returns nothing"

SetProjectileScale=SetProjectileScale
SetProjectileScale="SetProjectileScale(",~whichProjectile,", ",~scale,")"
SetProjectileScaleHint="[UjAPI] native SetProjectileScale takes projectile whichProjectile, real scale returns nothing"

SetProjectileTimeScale=SetProjectileTimeScale
SetProjectileTimeScale="SetProjectileTimeScale(",~whichProjectile,", ",~timescale,")"
SetProjectileTimeScaleHint="[UjAPI] native SetProjectileTimeScale takes projectile whichProjectile, real timescale returns nothing"

SetProjectilePlayerColour=SetProjectilePlayerColour
SetProjectilePlayerColour="SetProjectilePlayerColour(",~whichProjectile,", ",~color,")"
SetProjectilePlayerColourHint="[UjAPI] native SetProjectilePlayerColour takes projectile whichProjectile, playercolor color returns nothing"

SetProjectileColour=SetProjectileColour
SetProjectileColour="SetProjectileColour(",~whichProjectile,", ",~colour,")"
SetProjectileColourHint="[UjAPI] native SetProjectileColour takes projectile whichProjectile, integer colour returns nothing"

SetProjectileAlpha=SetProjectileAlpha
SetProjectileAlpha="SetProjectileAlpha(",~whichProjectile,", ",~alpha,")"
SetProjectileAlphaHint="[UjAPI] native SetProjectileAlpha takes projectile whichProjectile, integer alpha returns nothing"

SetProjectileVertexColour=SetProjectileVertexColour
SetProjectileVertexColour="SetProjectileVertexColour(",~whichProjectile,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetProjectileVertexColourHint="[UjAPI] native SetProjectileVertexColour takes projectile whichProjectile, integer red, integer green, integer blue, integer alpha returns nothing"

SetProjectileMatrixScale=SetProjectileMatrixScale
SetProjectileMatrixScale="SetProjectileMatrixScale(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectileMatrixScaleHint="[UjAPI] native SetProjectileMatrixScale takes projectile whichProjectile, real x, real y, real z returns nothing"

ResetProjectileMatrix=ResetProjectileMatrix
ResetProjectileMatrix="ResetProjectileMatrix(",~whichProjectile,")"
ResetProjectileMatrixHint="[UjAPI] native ResetProjectileMatrix takes projectile whichProjectile returns nothing"

SetProjectileOrientationEx=SetProjectileOrientationEx
SetProjectileOrientationEx="SetProjectileOrientationEx(",~whichProjectile,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetProjectileOrientationExHint="[UjAPI] native SetProjectileOrientationEx takes projectile whichProjectile, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetProjectileYaw=SetProjectileYaw
SetProjectileYaw="SetProjectileYaw(",~whichProjectile,", ",~yaw,")"
SetProjectileYawHint="[UjAPI] native SetProjectileYaw takes projectile whichProjectile, real yaw returns nothing"

SetProjectileFacing=SetProjectileFacing
SetProjectileFacing="SetProjectileFacing(",~whichProjectile,", ",~facing,")"
SetProjectileFacingHint="[UjAPI] native SetProjectileFacing takes projectile whichProjectile, real facing returns nothing"

SetProjectilePitch=SetProjectilePitch
SetProjectilePitch="SetProjectilePitch(",~whichProjectile,", ",~pitch,")"
SetProjectilePitchHint="[UjAPI] native SetProjectilePitch takes projectile whichProjectile, real pitch returns nothing"

SetProjectileRoll=SetProjectileRoll
SetProjectileRoll="SetProjectileRoll(",~whichProjectile,", ",~roll,")"
SetProjectileRollHint="[UjAPI] native SetProjectileRoll takes projectile whichProjectile, real roll returns nothing"

SetProjectileOrientation=SetProjectileOrientation
SetProjectileOrientation="SetProjectileOrientation(",~whichProjectile,", ",~yaw,", ",~pitch,", ",~roll,")"
SetProjectileOrientationHint="[UjAPI] native SetProjectileOrientation takes projectile whichProjectile, real yaw, real pitch, real roll returns nothing"

SetProjectileMaterialTexture=SetProjectileMaterialTexture
SetProjectileMaterialTexture="SetProjectileMaterialTexture(",~whichProjectile,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetProjectileMaterialTextureHint="[UjAPI] native SetProjectileMaterialTexture takes projectile whichProjectile, string textureName, integer materialId, integer textureIndex returns nothing"

SetProjectileTexture=SetProjectileTexture
SetProjectileTexture="SetProjectileTexture(",~whichProjectile,", ",~textureName,", ",~textureIndex,")"
SetProjectileTextureHint="[UjAPI] native SetProjectileTexture takes projectile whichProjectile, string textureName, integer textureIndex returns nothing"

SetProjectileReplaceableTexture=SetProjectileReplaceableTexture
SetProjectileReplaceableTexture="SetProjectileReplaceableTexture(",~whichProjectile,", ",~textureName,", ",~textureIndex,")"
SetProjectileReplaceableTextureHint="[UjAPI] native SetProjectileReplaceableTexture takes projectile whichProjectile, string textureName, integer textureIndex returns nothing"

SetProjectileModel=SetProjectileModel
SetProjectileModel="SetProjectileModel(",~whichProjectile,", ",~modelName,")"
SetProjectileModelHint="[UjAPI] native SetProjectileModel takes projectile whichProjectile, string modelName returns nothing"

SetProjectileModelEx=SetProjectileModelEx
SetProjectileModelEx="SetProjectileModelEx(",~whichProjectile,", ",~modelName,", ",~playerColour,")"
SetProjectileModelExHint="[UjAPI] native SetProjectileModelEx takes projectile whichProjectile, string modelName, integer playerColour returns nothing"

SetProjectileAnimationWithRarityByIndex=SetProjectileAnimationWithRarityByIndex
SetProjectileAnimationWithRarityByIndex="SetProjectileAnimationWithRarityByIndex(",~whichProjectile,", ",~animIndex,", ",~rarity,")"
SetProjectileAnimationWithRarityByIndexHint="[UjAPI] native SetProjectileAnimationWithRarityByIndex takes projectile whichProjectile, integer animIndex, raritycontrol rarity returns nothing"

SetProjectileAnimationWithRarity=SetProjectileAnimationWithRarity
SetProjectileAnimationWithRarity="SetProjectileAnimationWithRarity(",~whichProjectile,", ",~animationName,", ",~rarity,")"
SetProjectileAnimationWithRarityHint="[UjAPI] native SetProjectileAnimationWithRarity takes projectile whichProjectile, string animationName, raritycontrol rarity returns nothing"

SetProjectileAnimationByIndex=SetProjectileAnimationByIndex
SetProjectileAnimationByIndex="SetProjectileAnimationByIndex(",~whichProjectile,", ",~animIndex,")"
SetProjectileAnimationByIndexHint="[UjAPI] native SetProjectileAnimationByIndex takes projectile whichProjectile, integer animIndex returns nothing"

SetProjectileAnimation=SetProjectileAnimation
SetProjectileAnimation="SetProjectileAnimation(",~whichProjectile,", ",~animationName,")"
SetProjectileAnimationHint="[UjAPI] native SetProjectileAnimation takes projectile whichProjectile, string animationName returns nothing"

QueueProjectileAnimationByIndex=QueueProjectileAnimationByIndex
QueueProjectileAnimationByIndex="QueueProjectileAnimationByIndex(",~whichProjectile,", ",~animIndex,")"
QueueProjectileAnimationByIndexHint="[UjAPI] native QueueProjectileAnimationByIndex takes projectile whichProjectile, integer animIndex returns nothing"

QueueProjectileAnimation=QueueProjectileAnimation
QueueProjectileAnimation="QueueProjectileAnimation(",~whichProjectile,", ",~animationName,")"
QueueProjectileAnimationHint="[UjAPI] native QueueProjectileAnimation takes projectile whichProjectile, string animationName returns nothing"

SetProjectileAnimationOffsetPercent=SetProjectileAnimationOffsetPercent
SetProjectileAnimationOffsetPercent="SetProjectileAnimationOffsetPercent(",~whichProjectile,", ",~percent,")"
SetProjectileAnimationOffsetPercentHint="[UjAPI] native SetProjectileAnimationOffsetPercent takes projectile whichProjectile, real percent returns nothing"

SetProjectileAnimationFrozen=SetProjectileAnimationFrozen
SetProjectileAnimationFrozen="SetProjectileAnimationFrozen(",~whichProjectile,", ",~isFreeze,")"
SetProjectileAnimationFrozenHint="[UjAPI] native SetProjectileAnimationFrozen takes projectile whichProjectile, boolean isFreeze returns nothing"

SetProjectileSource=SetProjectileSource
SetProjectileSource="SetProjectileSource(",~whichProjectile,", ",~whichUnit,")"
SetProjectileSourceHint="[UjAPI] native SetProjectileSource takes projectile whichProjectile, unit whichUnit returns nothing"

SetProjectileSourceAbility=SetProjectileSourceAbility
SetProjectileSourceAbility="SetProjectileSourceAbility(",~whichProjectile,", ",~whichAbility,")"
SetProjectileSourceAbilityHint="[UjAPI] native SetProjectileSourceAbility takes projectile whichProjectile, ability whichAbility returns nothing"

SetProjectileTargetX=SetProjectileTargetX
SetProjectileTargetX="SetProjectileTargetX(",~whichProjectile,", ",~x,")"
SetProjectileTargetXHint="[UjAPI] native SetProjectileTargetX takes projectile whichProjectile, real x returns nothing"

SetProjectileTargetY=SetProjectileTargetY
SetProjectileTargetY="SetProjectileTargetY(",~whichProjectile,", ",~y,")"
SetProjectileTargetYHint="[UjAPI] native SetProjectileTargetY takes projectile whichProjectile, real y returns nothing"

SetProjectileTargetZ=SetProjectileTargetZ
SetProjectileTargetZ="SetProjectileTargetZ(",~whichProjectile,", ",~z,")"
SetProjectileTargetZHint="[UjAPI] native SetProjectileTargetZ takes projectile whichProjectile, real z returns nothing"

SetProjectileTargetPositionLoc=SetProjectileTargetPositionLoc
SetProjectileTargetPositionLoc="SetProjectileTargetPositionLoc(",~whichProjectile,", ",~loc,")"
SetProjectileTargetPositionLocHint="[UjAPI] native SetProjectileTargetPositionLoc takes projectile whichProjectile, location loc returns nothing"

SetProjectileTargetPosition=SetProjectileTargetPosition
SetProjectileTargetPosition="SetProjectileTargetPosition(",~whichProjectile,", ",~x,", ",~y,")"
SetProjectileTargetPositionHint="[UjAPI] native SetProjectileTargetPosition takes projectile whichProjectile, real x, real y returns nothing"

SetProjectileTargetPositionWithZ=SetProjectileTargetPositionWithZ
SetProjectileTargetPositionWithZ="SetProjectileTargetPositionWithZ(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectileTargetPositionWithZHint="[UjAPI] native SetProjectileTargetPositionWithZ takes projectile whichProjectile, real x, real y, real z returns nothing"

SetProjectileTargetUnit=SetProjectileTarget (Unit)
SetProjectileTargetUnit="SetProjectileTargetUnit(",~whichProjectile,", ",~whichWidget,")"
SetProjectileTargetUnitHint="[UjAPI] native SetProjectileTarget takes projectile whichProjectile, unit whichWidget returns nothing"

SetProjectileTargetItem=SetProjectileTarget (Item)
SetProjectileTargetItem="SetProjectileTargetItem(",~whichProjectile,", ",~whichWidget,")"
SetProjectileTargetItemHint="[UjAPI] native SetProjectileTarget takes projectile whichProjectile, item whichWidget returns nothing"

SetProjectileTargetDestructable=SetProjectileTarget (Destructable)
SetProjectileTargetDestructable="SetProjectileTargetDestructable(",~whichProjectile,", ",~whichWidget,")"
SetProjectileTargetDestructableHint="[UjAPI] native SetProjectileTarget takes projectile whichProjectile, destructable whichWidget returns nothing"

SetProjectileAttackType=SetProjectileAttackType
SetProjectileAttackType="SetProjectileAttackType(",~whichProjectile,", ",~whichAttackType,")"
SetProjectileAttackTypeHint="[UjAPI] native SetProjectileAttackType takes projectile whichProjectile, attacktype whichAttackType returns nothing"

SetProjectileDamage=SetProjectileDamage
SetProjectileDamage="SetProjectileDamage(",~whichProjectile,", ",~index,", ",~damage,")"
SetProjectileDamageHint="[UjAPI] native SetProjectileDamage takes projectile whichProjectile, integer index, real damage returns nothing"

SetProjectileAreaOfEffectFullDamage=SetProjectileAreaOfEffectFullDamage
SetProjectileAreaOfEffectFullDamage="SetProjectileAreaOfEffectFullDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectFullDamageHint="[UjAPI] native SetProjectileAreaOfEffectFullDamage takes projectile whichProjectile, real area returns nothing"

SetProjectileAreaOfEffectMediumDamage=SetProjectileAreaOfEffectMediumDamage
SetProjectileAreaOfEffectMediumDamage="SetProjectileAreaOfEffectMediumDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectMediumDamageHint="[UjAPI] native SetProjectileAreaOfEffectMediumDamage takes projectile whichProjectile, real area returns nothing"

SetProjectileAreaOfEffectSmallDamage=SetProjectileAreaOfEffectSmallDamage
SetProjectileAreaOfEffectSmallDamage="SetProjectileAreaOfEffectSmallDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectSmallDamageHint="[UjAPI] native SetProjectileAreaOfEffectSmallDamage takes projectile whichProjectile, real area returns nothing"

SetProjectileAreaOfEffectMediumDamageFactor=SetProjectileAreaOfEffectMediumDamageFactor
SetProjectileAreaOfEffectMediumDamageFactor="SetProjectileAreaOfEffectMediumDamageFactor(",~whichProjectile,", ",~factor,")"
SetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI] native SetProjectileAreaOfEffectMediumDamageFactor takes projectile whichProjectile, real factor returns nothing"

SetProjectileAreaOfEffectSmallDamageFactor=SetProjectileAreaOfEffectSmallDamageFactor
SetProjectileAreaOfEffectSmallDamageFactor="SetProjectileAreaOfEffectSmallDamageFactor(",~whichProjectile,", ",~factor,")"
SetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI] native SetProjectileAreaOfEffectSmallDamageFactor takes projectile whichProjectile, real factor returns nothing"

SetProjectileSpeed=SetProjectileSpeed
SetProjectileSpeed="SetProjectileSpeed(",~whichProjectile,", ",~speed,")"
SetProjectileSpeedHint="[UjAPI] native SetProjectileSpeed takes projectile whichProjectile, real speed returns nothing"

SetProjectileArc=SetProjectileArc
SetProjectileArc="SetProjectileArc(",~whichProjectile,", ",~arc,")"
SetProjectileArcHint="[UjAPI] native SetProjectileArc takes projectile whichProjectile, real arc returns nothing"

SetProjectileWeaponType=SetProjectileWeaponType
SetProjectileWeaponType="SetProjectileWeaponType(",~whichProjectile,", ",~whichWeaponType,")"
SetProjectileWeaponTypeHint="[UjAPI] native SetProjectileWeaponType takes projectile whichProjectile, weapontype whichWeaponType returns nothing"

SetProjectileDamageType=SetProjectileDamageType
SetProjectileDamageType="SetProjectileDamageType(",~whichProjectile,", ",~index,", ",~whichDamageType,")"
SetProjectileDamageTypeHint="[UjAPI] native SetProjectileDamageType takes projectile whichProjectile, integer index, damagetype whichDamageType returns nothing"

SetProjectileDamageFlags=SetProjectileDamageFlags
SetProjectileDamageFlags="SetProjectileDamageFlags(",~whichProjectile,", ",~flags,")"
SetProjectileDamageFlagsHint="[UjAPI] native SetProjectileDamageFlags takes projectile whichProjectile, integer flags returns nothing"

EnumProjectilesInRange=EnumProjectilesInRange
EnumProjectilesInRange="EnumProjectilesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumProjectilesInRangeHint="[UjAPI] native EnumProjectilesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"

EnumProjectilesInRect=EnumProjectilesInRect
EnumProjectilesInRect="EnumProjectilesInRect(",~whichRect,", ",~filter,", ",~handlerFunc,")"
EnumProjectilesInRectHint="[UjAPI] native EnumProjectilesInRect takes rect whichRect, boolexpr filter, code handlerFunc returns nothing"

HideOriginFrames=HideOriginFrames
HideOriginFrames="HideOriginFrames(",~flag,")"
HideOriginFramesHint="[UjAPI] native HideOriginFrames takes boolean flag returns nothing"

EditBlackBorders=EditBlackBorders
EditBlackBorders="EditBlackBorders(",~upperHeight,", ",~bottomHeight,")"
EditBlackBordersHint="[UjAPI] native EditBlackBorders takes real upperHeight, real bottomHeight returns nothing"

LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(",~TOCFile,")"
LoadTOCFileHint="[UjAPI] native LoadTOCFile takes string TOCFile returns boolean"

CreateFrame=CreateFrame
CreateFrame="CreateFrame(",~templateName,", ",~whichParent,", ",~priority,", ",~createContext,")"
CreateFrameHint="[UjAPI] native CreateFrame takes string templateName, framehandle whichParent, integer priority, integer createContext returns framehandle"

CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(",~templateName,", ",~whichParent,", ",~createContext,")"
CreateSimpleFrameHint="[UjAPI] native CreateSimpleFrame takes string templateName, framehandle whichParent, integer createContext returns framehandle"

CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(",~whichSimpleParent,", ",~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI] native CreateSimpleGlueFrame takes framehandle whichSimpleParent, framehandle whichSpriteFrame returns framehandle"

CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(",~frameType,", ",~contextName,", ",~whichParent,", ",~templateName,", ",~createContext,")"
CreateFrameByTypeHint="[UjAPI] native CreateFrameByType takes string frameType, string contextName, framehandle whichParent, string templateName, integer createContext returns framehandle"

DestroyFrame=DestroyFrame
DestroyFrame="DestroyFrame(",~whichFrame,")"
DestroyFrameHint="[UjAPI] native DestroyFrame takes framehandle whichFrame returns nothing"

SetFrameRelativePoint=SetFrameRelativePoint
SetFrameRelativePoint="SetFrameRelativePoint(",~whichFrame,", ",~point,", ",~relativeFrame,", ",~relativePoint,", ",~x,", ",~y,")"
SetFrameRelativePointHint="[UjAPI] native SetFrameRelativePoint takes framehandle whichFrame, framepointtype point, framehandle relativeFrame, framepointtype relativePoint, real x, real y returns nothing"

SetFrameAbsolutePoint=SetFrameAbsolutePoint
SetFrameAbsolutePoint="SetFrameAbsolutePoint(",~whichFrame,", ",~point,", ",~x,", ",~y,")"
SetFrameAbsolutePointHint="[UjAPI] native SetFrameAbsolutePoint takes framehandle whichFrame, framepointtype point, real x, real y returns nothing"

ClearFrameAllPoints=ClearFrameAllPoints
ClearFrameAllPoints="ClearFrameAllPoints(",~whichFrame,")"
ClearFrameAllPointsHint="[UjAPI] native ClearFrameAllPoints takes framehandle whichFrame returns nothing"

SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(",~whichFrame,", ",~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI] native SetFrameAllPoints takes framehandle whichFrame, framehandle relativeFrame returns boolean"

ShowFrame=ShowFrame
ShowFrame="ShowFrame(",~whichFrame,", ",~isShow,")"
ShowFrameHint="[UjAPI] native ShowFrame takes framehandle whichFrame, boolean isShow returns nothing"

SetFrameName=SetFrameName
SetFrameName="SetFrameName(",~whichFrame,", ",~contextName,")"
SetFrameNameHint="[UjAPI] native SetFrameName takes framehandle whichFrame, string contextName returns nothing"

SetFrameContext=SetFrameContext
SetFrameContext="SetFrameContext(",~whichFrame,", ",~createContext,")"
SetFrameContextHint="[UjAPI] native SetFrameContext takes framehandle whichFrame, integer createContext returns nothing"

SetFrameContextName=SetFrameContextName
SetFrameContextName="SetFrameContextName(",~whichFrame,", ",~contextName,", ",~createContext,")"
SetFrameContextNameHint="[UjAPI] native SetFrameContextName takes framehandle whichFrame, string contextName, integer createContext returns nothing"

ClickFrameEx=ClickFrameEx
ClickFrameEx="ClickFrameEx(",~whichFrame,", ",~whichMouseButton,")"
ClickFrameExHint="[UjAPI] native ClickFrameEx takes framehandle whichFrame, mousebuttontype whichMouseButton returns nothing"

ClickFrame=ClickFrame
ClickFrame="ClickFrame(",~whichFrame,")"
ClickFrameHint="[UjAPI] native ClickFrame takes framehandle whichFrame returns nothing"

SetFrameText=SetFrameText
SetFrameText="SetFrameText(",~whichFrame,", ",~text,")"
SetFrameTextHint="[UjAPI] native SetFrameText takes framehandle whichFrame, string text returns nothing"

AddFrameText=AddFrameText
AddFrameText="AddFrameText(",~whichFrame,", ",~text,")"
AddFrameTextHint="[UjAPI] native AddFrameText takes framehandle whichFrame, string text returns nothing"

SetFrameTextSizeLimit=SetFrameTextSizeLimit
SetFrameTextSizeLimit="SetFrameTextSizeLimit(",~whichFrame,", ",~textSize,")"
SetFrameTextSizeLimitHint="[UjAPI] native SetFrameTextSizeLimit takes framehandle whichFrame, integer textSize returns nothing"

SetFrameTextColourEx=SetFrameTextColourEx
SetFrameTextColourEx="SetFrameTextColourEx(",~whichFrame,", ",~stateId,", ",~colour,")"
SetFrameTextColourExHint="[UjAPI] native SetFrameTextColourEx takes framehandle whichFrame, integer stateId, integer colour returns nothing"

SetFrameTextColour=SetFrameTextColour
SetFrameTextColour="SetFrameTextColour(",~whichFrame,", ",~colour,")"
SetFrameTextColourHint="[UjAPI] native SetFrameTextColour takes framehandle whichFrame, integer colour returns nothing"

SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(",~whichFrame,", ",~isFocus,")"
SetFrameFocusHint="[UjAPI] native SetFrameFocus takes framehandle whichFrame, boolean isFocus returns boolean"

SetFrameModel=SetFrameModel
SetFrameModel="SetFrameModel(",~whichFrame,", ",~model,", ",~cameraIndex,")"
SetFrameModelHint="[UjAPI] native SetFrameModel takes framehandle whichFrame, string model, integer cameraIndex returns nothing"

SetFrameState=SetFrameState
SetFrameState="SetFrameState(",~whichFrame,", ",~whichFrameState,")"
SetFrameStateHint="[UjAPI] native SetFrameState takes framehandle whichFrame, framestate whichFrameState returns nothing"

SetFrameEnabled=SetFrameEnabled
SetFrameEnabled="SetFrameEnabled(",~whichFrame,", ",~enabled,")"
SetFrameEnabledHint="[UjAPI] native SetFrameEnabled takes framehandle whichFrame, boolean enabled returns nothing"

SetFrameLayoutFlag=SetFrameLayoutFlag
SetFrameLayoutFlag="SetFrameLayoutFlag(",~whichFrame,", ",~whichLayoutStyle,", ",~isSet,")"
SetFrameLayoutFlagHint="[UjAPI] native SetFrameLayoutFlag takes framehandle whichFrame, layoutstyleflag whichLayoutStyle, boolean isSet returns nothing"

SetFrameGridFlag=SetFrameGridFlag
SetFrameGridFlag="SetFrameGridFlag(",~whichFrame,", ",~whichGridStyle,", ",~isSet,")"
SetFrameGridFlagHint="[UjAPI] native SetFrameGridFlag takes framehandle whichFrame, gridstyleflag whichGridStyle, boolean isSet returns nothing"

SetFrameLayerFlag=SetFrameLayerFlag
SetFrameLayerFlag="SetFrameLayerFlag(",~whichFrame,", ",~whichLayerStyle,", ",~isSet,")"
SetFrameLayerFlagHint="[UjAPI] native SetFrameLayerFlag takes framehandle whichFrame, layerstyleflag whichLayerStyle, boolean isSet returns nothing"

SetFrameControlFlag=SetFrameControlFlag
SetFrameControlFlag="SetFrameControlFlag(",~whichFrame,", ",~whichControlStyle,", ",~isSet,")"
SetFrameControlFlagHint="[UjAPI] native SetFrameControlFlag takes framehandle whichFrame, controlstyleflag whichControlStyle, boolean isSet returns nothing"

SetFrameColourEx=SetFrameColourEx
SetFrameColourEx="SetFrameColourEx(",~whichFrame,", ",~textureId,", ",~colour,")"
SetFrameColourExHint="[UjAPI] native SetFrameColourEx takes framehandle whichFrame, integer textureId, integer colour returns nothing"

SetFrameColour=SetFrameColour
SetFrameColour="SetFrameColour(",~whichFrame,", ",~colour,")"
SetFrameColourHint="[UjAPI] native SetFrameColour takes framehandle whichFrame, integer colour returns nothing"

SetFrameVertexColour=SetFrameVertexColour
SetFrameVertexColour="SetFrameVertexColour(",~whichFrame,", ",~alpha,", ",~red,", ",~green,", ",~blue,")"
SetFrameVertexColourHint="[UjAPI] native SetFrameVertexColour takes framehandle whichFrame, integer alpha, integer red, integer green, integer blue returns nothing"

SetFrameVertexColourEx=SetFrameVertexColourEx
SetFrameVertexColourEx="SetFrameVertexColourEx(",~whichFrame,", ",~textureId,", ",~alpha,", ",~red,", ",~green,", ",~blue,")"
SetFrameVertexColourExHint="[UjAPI] native SetFrameVertexColourEx takes framehandle whichFrame, integer textureId, integer alpha, integer red, integer green, integer blue returns nothing"

SetFrameAlphaEx=SetFrameAlphaEx
SetFrameAlphaEx="SetFrameAlphaEx(",~whichFrame,", ",~textureId,", ",~alpha,")"
SetFrameAlphaExHint="[UjAPI] native SetFrameAlphaEx takes framehandle whichFrame, integer textureId, integer alpha returns nothing"

SetFrameAlpha=SetFrameAlpha
SetFrameAlpha="SetFrameAlpha(",~whichFrame,", ",~alpha,")"
SetFrameAlphaHint="[UjAPI] native SetFrameAlpha takes framehandle whichFrame, integer alpha returns nothing"

SetFrameBackdropTexture=SetFrameBackdropTexture
SetFrameBackdropTexture="SetFrameBackdropTexture(",~whichFrame,", ",~textureId,", ",~backgroundTextureFile,", ",~allowTransparency,", ",~blend,", ",~borderTextureFile,", ",~borderFlags,", ",~isControlBackdrop,")"
SetFrameBackdropTextureHint="[UjAPI] native SetFrameBackdropTexture takes framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean allowTransparency, boolean blend, string borderTextureFile, integer borderFlags, boolean isControlBackdrop returns nothing"

SetFrameTextureEx=SetFrameTextureEx
SetFrameTextureEx="SetFrameTextureEx(",~whichFrame,", ",~textureId,", ",~backgroundTextureFile,", ",~blend,", ",~borderTextureFile,", ",~borderFlags,")"
SetFrameTextureExHint="[UjAPI] native SetFrameTextureEx takes framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean blend, string borderTextureFile, integer borderFlags returns nothing"

SetFrameTexture=SetFrameTexture
SetFrameTexture="SetFrameTexture(",~whichFrame,", ",~textureFile,", ",~textureId,", ",~blend,")"
SetFrameTextureHint="[UjAPI] native SetFrameTexture takes framehandle whichFrame, string textureFile, integer textureId, boolean blend returns nothing"

SetFrameBlendMode=SetFrameBlendMode
SetFrameBlendMode="SetFrameBlendMode(",~whichFrame,", ",~textureId,", ",~whichMode,")"
SetFrameBlendModeHint="[UjAPI] native SetFrameBlendMode takes framehandle whichFrame, integer textureId, blendmode whichMode returns nothing"

SetFrameMouseCaged=SetFrameMouseCaged
SetFrameMouseCaged="SetFrameMouseCaged(",~whichFrame,", ",~enable,")"
SetFrameMouseCagedHint="[UjAPI] native SetFrameMouseCaged takes framehandle whichFrame, boolean enable returns nothing"

SetFrameValue=SetFrameValue
SetFrameValue="SetFrameValue(",~whichFrame,", ",~value,")"
SetFrameValueHint="[UjAPI] native SetFrameValue takes framehandle whichFrame, real value returns nothing"

SetFrameValueEx=SetFrameValueEx
SetFrameValueEx="SetFrameValueEx(",~whichFrame,", ",~value,", ",~isFireEvent,")"
SetFrameValueExHint="[UjAPI] native SetFrameValueEx takes framehandle whichFrame, real value, boolean isFireEvent returns nothing"

SetFrameMinMaxValues=SetFrameMinMaxValues
SetFrameMinMaxValues="SetFrameMinMaxValues(",~whichFrame,", ",~minVal,", ",~maxVal,")"
SetFrameMinMaxValuesHint="[UjAPI] native SetFrameMinMaxValues takes framehandle whichFrame, real minVal, real maxVal returns nothing"

SetFrameStepSize=SetFrameStepSize
SetFrameStepSize="SetFrameStepSize(",~whichFrame,", ",~stepSize,")"
SetFrameStepSizeHint="[UjAPI] native SetFrameStepSize takes framehandle whichFrame, real stepSize returns nothing"

SetFrameWidth=SetFrameWidth
SetFrameWidth="SetFrameWidth(",~whichFrame,", ",~width,")"
SetFrameWidthHint="[UjAPI] native SetFrameWidth takes framehandle whichFrame, real width returns nothing"

SetFrameHeight=SetFrameHeight
SetFrameHeight="SetFrameHeight(",~whichFrame,", ",~height,")"
SetFrameHeightHint="[UjAPI] native SetFrameHeight takes framehandle whichFrame, real height returns nothing"

SetFrameSize=SetFrameSize
SetFrameSize="SetFrameSize(",~whichFrame,", ",~width,", ",~height,")"
SetFrameSizeHint="[UjAPI] native SetFrameSize takes framehandle whichFrame, real width, real height returns nothing"

SetFrameScale=SetFrameScale
SetFrameScale="SetFrameScale(",~whichFrame,", ",~scale,")"
SetFrameScaleHint="[UjAPI] native SetFrameScale takes framehandle whichFrame, real scale returns nothing"

SetFramePriority=SetFramePriority
SetFramePriority="SetFramePriority(",~whichFrame,", ",~priority,")"
SetFramePriorityHint="[UjAPI] native SetFramePriority takes framehandle whichFrame, integer priority returns nothing"

SetFrameParent=SetFrameParent
SetFrameParent="SetFrameParent(",~whichFrame,", ",~whichParent,")"
SetFrameParentHint="[UjAPI] native SetFrameParent takes framehandle whichFrame, framehandle whichParent returns nothing"

SetFrameFont=SetFrameFont
SetFrameFont="SetFrameFont(",~whichFrame,", ",~fontName,", ",~size,", ",~flags,")"
SetFrameFontHint="[UjAPI] native SetFrameFont takes framehandle whichFrame, string fontName, real size, integer flags returns nothing"

SetFrameTextAlignmentValue=SetFrameTextAlignmentValue
SetFrameTextAlignmentValue="SetFrameTextAlignmentValue(",~whichFrame,", ",~id,", ",~offset,")"
SetFrameTextAlignmentValueHint="[UjAPI] native SetFrameTextAlignmentValue takes framehandle whichFrame, integer id, real offset returns nothing"

SetFrameTextAlignment=SetFrameTextAlignment
SetFrameTextAlignment="SetFrameTextAlignment(",~whichFrame,", ",~verticalAlign,", ",~horizontalAlign,")"
SetFrameTextAlignmentHint="[UjAPI] native SetFrameTextAlignment takes framehandle whichFrame, textaligntype verticalAlign, textaligntype horizontalAlign returns nothing"

SetFrameTextVerticalAlignment=SetFrameTextVerticalAlignment
SetFrameTextVerticalAlignment="SetFrameTextVerticalAlignment(",~whichFrame,", ",~verticalAlign,")"
SetFrameTextVerticalAlignmentHint="[UjAPI] native SetFrameTextVerticalAlignment takes framehandle whichFrame, textaligntype verticalAlign returns nothing"

SetFrameTextHorizontalAlignment=SetFrameTextHorizontalAlignment
SetFrameTextHorizontalAlignment="SetFrameTextHorizontalAlignment(",~whichFrame,", ",~horizontalAlign,")"
SetFrameTextHorizontalAlignmentHint="[UjAPI] native SetFrameTextHorizontalAlignment takes framehandle whichFrame, textaligntype horizontalAlign returns nothing"

SetFrameCheckState=SetFrameCheckState
SetFrameCheckState="SetFrameCheckState(",~whichFrame,", ",~isCheck,")"
SetFrameCheckStateHint="[UjAPI] native SetFrameCheckState takes framehandle whichFrame, boolean isCheck returns nothing"

SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(",~texturePath,")"
SetMiniMapTextureHint="[UjAPI] native SetMiniMapTexture takes string texturePath returns boolean"

AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(",~whichFrame,")"
AddFrameSliderHint="[UjAPI] native AddFrameSlider takes framehandle whichFrame returns framehandle"

SetFrameItemsBorder=SetFrameItemsBorder
SetFrameItemsBorder="SetFrameItemsBorder(",~whichFrame,", ",~value,")"
SetFrameItemsBorderHint="[UjAPI] native SetFrameItemsBorder takes framehandle whichFrame, real value returns nothing"

SetFrameItemsHeight=SetFrameItemsHeight
SetFrameItemsHeight="SetFrameItemsHeight(",~whichFrame,", ",~value,")"
SetFrameItemsHeightHint="[UjAPI] native SetFrameItemsHeight takes framehandle whichFrame, real value returns nothing"

AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(",~whichFrame,", ",~text,", ",~frameToAdd,")"
AddFrameListItemHint="[UjAPI] native AddFrameListItem takes framehandle whichFrame, string text, framehandle frameToAdd returns framehandle"

SetFrameListItemById=SetFrameListItemById
SetFrameListItemById="SetFrameListItemById(",~whichFrame,", ",~id,", ",~listBoxItem,")"
SetFrameListItemByIdHint="[UjAPI] native SetFrameListItemById takes framehandle whichFrame, integer id, framehandle listBoxItem returns nothing"

SetFrameListItemByFrame=SetFrameListItemByFrame
SetFrameListItemByFrame="SetFrameListItemByFrame(",~whichFrame,", ",~frameToFind,", ",~listBoxItem,")"
SetFrameListItemByFrameHint="[UjAPI] native SetFrameListItemByFrame takes framehandle whichFrame, framehandle frameToFind, framehandle listBoxItem returns nothing"

RemoveFrameListItem=RemoveFrameListItem
RemoveFrameListItem="RemoveFrameListItem(",~whichFrame,", ",~listBoxItem,")"
RemoveFrameListItemHint="[UjAPI] native RemoveFrameListItem takes framehandle whichFrame, framehandle listBoxItem returns nothing"

RemoveFrameListItemById=RemoveFrameListItemById
RemoveFrameListItemById="RemoveFrameListItemById(",~whichFrame,", ",~id,")"
RemoveFrameListItemByIdHint="[UjAPI] native RemoveFrameListItemById takes framehandle whichFrame, integer id returns nothing"

RemoveFrameListItemByFrame=RemoveFrameListItemByFrame
RemoveFrameListItemByFrame="RemoveFrameListItemByFrame(",~whichFrame,", ",~listBoxItem,")"
RemoveFrameListItemByFrameHint="[UjAPI] native RemoveFrameListItemByFrame takes framehandle whichFrame, framehandle listBoxItem returns nothing"

SetFrameItemOwner=SetFrameItemOwner
SetFrameItemOwner="SetFrameItemOwner(",~listBoxItem,", ",~whichFrame,")"
SetFrameItemOwnerHint="[UjAPI] native SetFrameItemOwner takes framehandle listBoxItem, framehandle whichFrame returns nothing"

SetFrameHighlightTexture=SetFrameHighlightTexture
SetFrameHighlightTexture="SetFrameHighlightTexture(",~whichFrame,", ",~highlightId,", ",~texturePath,", ",~blendMode,")"
SetFrameHighlightTextureHint="[UjAPI] native SetFrameHighlightTexture takes framehandle whichFrame, integer highlightId, string texturePath, blendmode blendMode returns nothing"

SetFrameBorderEnabled=SetFrameBorderEnabled
SetFrameBorderEnabled="SetFrameBorderEnabled(",~whichFrame,", ",~backdropId,", ",~isEnable,")"
SetFrameBorderEnabledHint="[UjAPI] native SetFrameBorderEnabled takes framehandle whichFrame, integer backdropId, boolean isEnable returns nothing"

SetFrameBorderFlags=SetFrameBorderFlags
SetFrameBorderFlags="SetFrameBorderFlags(",~whichFrame,", ",~backdropId,", ",~borderFlag,")"
SetFrameBorderFlagsHint="[UjAPI] native SetFrameBorderFlags takes framehandle whichFrame, integer backdropId, integer borderFlag returns nothing"

SetFrameBorderSize=SetFrameBorderSize
SetFrameBorderSize="SetFrameBorderSize(",~whichFrame,", ",~backdropId,", ",~value,")"
SetFrameBorderSizeHint="[UjAPI] native SetFrameBorderSize takes framehandle whichFrame, integer backdropId, real value returns nothing"

SetFrameBackgroundSize=SetFrameBackgroundSize
SetFrameBackgroundSize="SetFrameBackgroundSize(",~whichFrame,", ",~backdropId,", ",~value,")"
SetFrameBackgroundSizeHint="[UjAPI] native SetFrameBackgroundSize takes framehandle whichFrame, integer backdropId, real value returns nothing"

SetFrameBackgroundInsetById=SetFrameBackgroundInsetById
SetFrameBackgroundInsetById="SetFrameBackgroundInsetById(",~whichFrame,", ",~backdropId,", ",~insetId,", ",~value,")"
SetFrameBackgroundInsetByIdHint="[UjAPI] native SetFrameBackgroundInsetById takes framehandle whichFrame, integer backdropId, integer insetId, real value returns nothing"

SetFrameBackgroundInsets=SetFrameBackgroundInsets
SetFrameBackgroundInsets="SetFrameBackgroundInsets(",~whichFrame,", ",~backdropId,", ",~minX,", ",~minY,", ",~maxX,", ",~maxY,")"
SetFrameBackgroundInsetsHint="[UjAPI] native SetFrameBackgroundInsets takes framehandle whichFrame, integer backdropId, real minX, real minY, real maxX, real maxY returns nothing"

SetFrameGridSize=SetFrameGridSize
SetFrameGridSize="SetFrameGridSize(",~grid,", ",~row,", ",~column,")"
SetFrameGridSizeHint="[UjAPI] native SetFrameGridSize takes framehandle grid, integer row, integer column returns nothing"

SetFrameGridFrame=SetFrameGridFrame
SetFrameGridFrame="SetFrameGridFrame(",~grid,", ",~row,", ",~column,", ",~whichFrame,")"
SetFrameGridFrameHint="[UjAPI] native SetFrameGridFrame takes framehandle grid, integer row, integer column, framehandle whichFrame returns nothing"

SetBuffBarRenderDuplicates=SetBuffBarRenderDuplicates
SetBuffBarRenderDuplicates="SetBuffBarRenderDuplicates(",~allow,")"
SetBuffBarRenderDuplicatesHint="[UjAPI] native SetBuffBarRenderDuplicates takes boolean allow returns nothing"

TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(",~whichTrigger,", ",~whichFrame,", ",~eventId,")"
TriggerRegisterFrameEventHint="[UjAPI] native TriggerRegisterFrameEvent takes trigger whichTrigger, framehandle whichFrame, frameeventtype eventId returns event"

RegisterFrameMouseButton=RegisterFrameMouseButton
RegisterFrameMouseButton="RegisterFrameMouseButton(",~whichFrame,", ",~whichMouseButton,", ",~isAdd,")"
RegisterFrameMouseButtonHint="[UjAPI] native RegisterFrameMouseButton takes framehandle whichFrame, mousebuttontype whichMouseButton, boolean isAdd returns nothing"

SetFrameSpriteScale=SetFrameSpriteScale
SetFrameSpriteScale="SetFrameSpriteScale(",~whichFrame,", ",~scale,")"
SetFrameSpriteScaleHint="[UjAPI] native SetFrameSpriteScale takes framehandle whichFrame, real scale returns nothing"

SetFrameSpriteTimeScale=SetFrameSpriteTimeScale
SetFrameSpriteTimeScale="SetFrameSpriteTimeScale(",~whichFrame,", ",~timescale,")"
SetFrameSpriteTimeScaleHint="[UjAPI] native SetFrameSpriteTimeScale takes framehandle whichFrame, real timescale returns nothing"

SetFrameSpritePlayerColour=SetFrameSpritePlayerColour
SetFrameSpritePlayerColour="SetFrameSpritePlayerColour(",~whichFrame,", ",~color,")"
SetFrameSpritePlayerColourHint="[UjAPI] native SetFrameSpritePlayerColour takes framehandle whichFrame, playercolor color returns nothing"

SetFrameSpriteAlpha=SetFrameSpriteAlpha
SetFrameSpriteAlpha="SetFrameSpriteAlpha(",~whichFrame,", ",~alpha,")"
SetFrameSpriteAlphaHint="[UjAPI] native SetFrameSpriteAlpha takes framehandle whichFrame, integer alpha returns nothing"

SetFrameSpriteColour=SetFrameSpriteColour
SetFrameSpriteColour="SetFrameSpriteColour(",~whichFrame,", ",~colour,")"
SetFrameSpriteColourHint="[UjAPI] native SetFrameSpriteColour takes framehandle whichFrame, integer colour returns nothing"

SetFrameSpriteVertexColour=SetFrameSpriteVertexColour
SetFrameSpriteVertexColour="SetFrameSpriteVertexColour(",~whichFrame,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetFrameSpriteVertexColourHint="[UjAPI] native SetFrameSpriteVertexColour takes framehandle whichFrame, integer red, integer green, integer blue, integer alpha returns nothing"

SetFrameSpriteOrientationEx=SetFrameSpriteOrientationEx
SetFrameSpriteOrientationEx="SetFrameSpriteOrientationEx(",~whichFrame,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetFrameSpriteOrientationExHint="[UjAPI] native SetFrameSpriteOrientationEx takes framehandle whichFrame, real yaw, real pitch, real roll, integer eulerOrder returns nothing"

SetFrameSpriteYaw=SetFrameSpriteYaw
SetFrameSpriteYaw="SetFrameSpriteYaw(",~whichFrame,", ",~yaw,")"
SetFrameSpriteYawHint="[UjAPI] native SetFrameSpriteYaw takes framehandle whichFrame, real yaw returns nothing"

SetFrameSpriteFacing=SetFrameSpriteFacing
SetFrameSpriteFacing="SetFrameSpriteFacing(",~whichFrame,", ",~facing,")"
SetFrameSpriteFacingHint="[UjAPI] native SetFrameSpriteFacing takes framehandle whichFrame, real facing returns nothing"

SetFrameSpritePitch=SetFrameSpritePitch
SetFrameSpritePitch="SetFrameSpritePitch(",~whichFrame,", ",~pitch,")"
SetFrameSpritePitchHint="[UjAPI] native SetFrameSpritePitch takes framehandle whichFrame, real pitch returns nothing"

SetFrameSpriteRoll=SetFrameSpriteRoll
SetFrameSpriteRoll="SetFrameSpriteRoll(",~whichFrame,", ",~roll,")"
SetFrameSpriteRollHint="[UjAPI] native SetFrameSpriteRoll takes framehandle whichFrame, real roll returns nothing"

SetFrameSpriteOrientation=SetFrameSpriteOrientation
SetFrameSpriteOrientation="SetFrameSpriteOrientation(",~whichFrame,", ",~yaw,", ",~pitch,", ",~roll,")"
SetFrameSpriteOrientationHint="[UjAPI] native SetFrameSpriteOrientation takes framehandle whichFrame, real yaw, real pitch, real roll returns nothing"

SetFrameSpriteMatrixScale=SetFrameSpriteMatrixScale
SetFrameSpriteMatrixScale="SetFrameSpriteMatrixScale(",~whichFrame,", ",~sizeX,", ",~sizeY,", ",~sizeZ,")"
SetFrameSpriteMatrixScaleHint="[UjAPI] native SetFrameSpriteMatrixScale takes framehandle whichFrame, real sizeX, real sizeY, real sizeZ returns nothing"

ResetFrameSpriteMatrix=ResetFrameSpriteMatrix
ResetFrameSpriteMatrix="ResetFrameSpriteMatrix(",~whichFrame,")"
ResetFrameSpriteMatrixHint="[UjAPI] native ResetFrameSpriteMatrix takes framehandle whichFrame returns nothing"

SetFrameSpriteMaterialTexture=SetFrameSpriteMaterialTexture
SetFrameSpriteMaterialTexture="SetFrameSpriteMaterialTexture(",~whichFrame,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetFrameSpriteMaterialTextureHint="[UjAPI] native SetFrameSpriteMaterialTexture takes framehandle whichFrame, string textureName, integer materialId, integer textureIndex returns nothing"

SetFrameSpriteTexture=SetFrameSpriteTexture
SetFrameSpriteTexture="SetFrameSpriteTexture(",~whichFrame,", ",~textureName,", ",~textureIndex,")"
SetFrameSpriteTextureHint="[UjAPI] native SetFrameSpriteTexture takes framehandle whichFrame, string textureName, integer textureIndex returns nothing"

SetFrameSpriteReplaceableTexture=SetFrameSpriteReplaceableTexture
SetFrameSpriteReplaceableTexture="SetFrameSpriteReplaceableTexture(",~whichFrame,", ",~textureName,", ",~textureIndex,")"
SetFrameSpriteReplaceableTextureHint="[UjAPI] native SetFrameSpriteReplaceableTexture takes framehandle whichFrame, string textureName, integer textureIndex returns nothing"

SetFrameSpriteModel=SetFrameSpriteModel
SetFrameSpriteModel="SetFrameSpriteModel(",~whichFrame,", ",~modelName,")"
SetFrameSpriteModelHint="[UjAPI] native SetFrameSpriteModel takes framehandle whichFrame, string modelName returns nothing"

SetFrameSpriteModelEx=SetFrameSpriteModelEx
SetFrameSpriteModelEx="SetFrameSpriteModelEx(",~whichFrame,", ",~modelName,", ",~playerColour,")"
SetFrameSpriteModelExHint="[UjAPI] native SetFrameSpriteModelEx takes framehandle whichFrame, string modelName, integer playerColour returns nothing"

SetFrameSpriteAnimationWithRarityByIndex=SetFrameSpriteAnimationWithRarityByIndex
SetFrameSpriteAnimationWithRarityByIndex="SetFrameSpriteAnimationWithRarityByIndex(",~whichFrame,", ",~animIndex,", ",~rarity,")"
SetFrameSpriteAnimationWithRarityByIndexHint="[UjAPI] native SetFrameSpriteAnimationWithRarityByIndex takes framehandle whichFrame, integer animIndex, raritycontrol rarity returns nothing"

SetFrameSpriteAnimationByIndex=SetFrameSpriteAnimationByIndex
SetFrameSpriteAnimationByIndex="SetFrameSpriteAnimationByIndex(",~whichFrame,", ",~animIndex,")"
SetFrameSpriteAnimationByIndexHint="[UjAPI] native SetFrameSpriteAnimationByIndex takes framehandle whichFrame, integer animIndex returns nothing"

QueueFrameSpriteAnimationByIndex=QueueFrameSpriteAnimationByIndex
QueueFrameSpriteAnimationByIndex="QueueFrameSpriteAnimationByIndex(",~whichFrame,", ",~animIndex,")"
QueueFrameSpriteAnimationByIndexHint="[UjAPI] native QueueFrameSpriteAnimationByIndex takes framehandle whichFrame, integer animIndex returns nothing"

SetFrameSpriteAnimationWithRarity=SetFrameSpriteAnimationWithRarity
SetFrameSpriteAnimationWithRarity="SetFrameSpriteAnimationWithRarity(",~whichFrame,", ",~animationName,", ",~rarity,")"
SetFrameSpriteAnimationWithRarityHint="[UjAPI] native SetFrameSpriteAnimationWithRarity takes framehandle whichFrame, string animationName, raritycontrol rarity returns nothing"

SetFrameSpriteAnimation=SetFrameSpriteAnimation
SetFrameSpriteAnimation="SetFrameSpriteAnimation(",~whichFrame,", ",~animationName,")"
SetFrameSpriteAnimationHint="[UjAPI] native SetFrameSpriteAnimation takes framehandle whichFrame, string animationName returns nothing"

QueueFrameSpriteAnimation=QueueFrameSpriteAnimation
QueueFrameSpriteAnimation="QueueFrameSpriteAnimation(",~whichFrame,", ",~animationName,")"
QueueFrameSpriteAnimationHint="[UjAPI] native QueueFrameSpriteAnimation takes framehandle whichFrame, string animationName returns nothing"

SetFrameSpriteAnimationOffsetPercent=SetFrameSpriteAnimationOffsetPercent
SetFrameSpriteAnimationOffsetPercent="SetFrameSpriteAnimationOffsetPercent(",~whichFrame,", ",~percent,")"
SetFrameSpriteAnimationOffsetPercentHint="[UjAPI] native SetFrameSpriteAnimationOffsetPercent takes framehandle whichFrame, real percent returns nothing"

SetFrameSpriteAnimationFrozen=SetFrameSpriteAnimationFrozen
SetFrameSpriteAnimationFrozen="SetFrameSpriteAnimationFrozen(",~whichFrame,", ",~isFreeze,")"
SetFrameSpriteAnimationFrozenHint="[UjAPI] native SetFrameSpriteAnimationFrozen takes framehandle whichFrame, boolean isFreeze returns nothing"

SyncInteger=SyncInteger
SyncInteger="SyncInteger(",~variableName,")"
SyncIntegerHint="[UjAPI] native SyncInteger takes string variableName returns nothing"

SyncReal=SyncReal
SyncReal="SyncReal(",~variableName,")"
SyncRealHint="[UjAPI] native SyncReal takes string variableName returns nothing"

SyncHandle=SyncHandle
SyncHandle="SyncHandle(",~variableName,")"
SyncHandleHint="[UjAPI] native SyncHandle takes string variableName returns nothing"

SyncBoolean=SyncBoolean
SyncBoolean="SyncBoolean(",~variableName,")"
SyncBooleanHint="[UjAPI] native SyncBoolean takes string variableName returns nothing"

TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI] native TriggerRegisterPlayerVariableSyncEvent takes trigger whichTrigger, player whichPlayer, string variableName returns event"

SyncSavedInteger=SyncSavedInteger
SyncSavedInteger="SyncSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedIntegerHint="[UjAPI] native SyncSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

SyncSavedReal=SyncSavedReal
SyncSavedReal="SyncSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedRealHint="[UjAPI] native SyncSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

SyncSavedHandle=SyncSavedHandle
SyncSavedHandle="SyncSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedHandleHint="[UjAPI] native SyncSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

SyncSavedBoolean=SyncSavedBoolean
SyncSavedBoolean="SyncSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedBooleanHint="[UjAPI] native SyncSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI] native TriggerRegisterPlayerHashtableDataSyncEvent takes trigger whichTrigger, player whichPlayer, hashtable whichHashtable returns event"

SendSyncData=SendSyncData
SendSyncData="SendSyncData(",~prefix,", ",~data,")"
SendSyncDataHint="[UjAPI] native SendSyncData takes string prefix, string data returns boolean"

TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~prefix,", ",~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI] native TriggerRegisterPlayerSyncEvent takes trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer returns event"

TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichKey,", ",~whichMetaKey,", ",~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI] native TriggerRegisterPlayerKeyEvent takes trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown returns event"

SetMouseMoveEventScreenAxisEnabled=SetMouseMoveEventScreenAxisEnabled
SetMouseMoveEventScreenAxisEnabled="SetMouseMoveEventScreenAxisEnabled(",~enable,")"
SetMouseMoveEventScreenAxisEnabledHint="[UjAPI] native SetMouseMoveEventScreenAxisEnabled takes boolean enable returns nothing"

SetMouseMoveEventWorldAxisEnabled=SetMouseMoveEventWorldAxisEnabled
SetMouseMoveEventWorldAxisEnabled="SetMouseMoveEventWorldAxisEnabled(",~enable,")"
SetMouseMoveEventWorldAxisEnabledHint="[UjAPI] native SetMouseMoveEventWorldAxisEnabled takes boolean enable returns nothing"

SetMouseMoveEventDelay=SetMouseMoveEventDelay
SetMouseMoveEventDelay="SetMouseMoveEventDelay(",~delay,")"
SetMouseMoveEventDelayHint="[UjAPI] native SetMouseMoveEventDelay takes integer delay returns nothing"

SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(",~flag,", ",~isSet,")"
SetEventDamageFlagHint="[UjAPI] native SetEventDamageFlag takes integer flag, boolean isSet returns boolean"

SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(",~attackType,")"
SetEventAttackTypeHint="[UjAPI] native SetEventAttackType takes attacktype attackType returns boolean"

SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(",~whichDamageType,")"
SetEventDamageTypeHint="[UjAPI] native SetEventDamageType takes damagetype whichDamageType returns boolean"

SetEventDamageTypeExtra=SetEventDamageTypeExtra
SetEventDamageTypeExtra="SetEventDamageTypeExtra(",~whichDamageType,")"
SetEventDamageTypeExtraHint="[UjAPI] native SetEventDamageTypeExtra takes damagetype whichDamageType returns boolean"

SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(",~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI] native SetEventDamageTypeFlags takes integer damageFlags returns boolean"

SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(",~weaponType,")"
SetEventWeaponTypeHint="[UjAPI] native SetEventWeaponType takes weapontype weaponType returns boolean"

SetEventPreDamage=SetEventPreDamage
SetEventPreDamage="SetEventPreDamage(",~damage,")"
SetEventPreDamageHint="[UjAPI] native SetEventPreDamage takes real damage returns nothing"

SetEventPreDamageExtra=SetEventPreDamageExtra
SetEventPreDamageExtra="SetEventPreDamageExtra(",~damage,")"
SetEventPreDamageExtraHint="[UjAPI] native SetEventPreDamageExtra takes real damage returns nothing"

SetEventDamage=SetEventDamage
SetEventDamage="SetEventDamage(",~damage,")"
SetEventDamageHint="[UjAPI] native SetEventDamage takes real damage returns nothing"

SetEventDamageExtra=SetEventDamageExtra
SetEventDamageExtra="SetEventDamageExtra(",~damage,")"
SetEventDamageExtraHint="[UjAPI] native SetEventDamageExtra takes real damage returns nothing"

SetEnemyStartLocPrioCount=SetEnemyStartLocPrioCount
SetEnemyStartLocPrioCount="SetEnemyStartLocPrioCount(",~whichStartLoc,", ",~prioSlotCount,")"
SetEnemyStartLocPrioCountHint="[UjAPI] native SetEnemyStartLocPrioCount takes integer whichStartLoc, integer prioSlotCount returns nothing"

SetEnemyStartLocPrio=SetEnemyStartLocPrio
SetEnemyStartLocPrio="SetEnemyStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,", ",~otherStartLocIndex,", ",~priority,")"
SetEnemyStartLocPrioHint="[UjAPI] native SetEnemyStartLocPrio takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing"

ParseTags=ParseTags
ParseTags="ParseTags(",~taggedString,")"
ParseTagsHint="[UjAPI] native ParseTags takes string taggedString returns string"

TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(",~whichTrigger,", ",~whichAbility,", ",~orderName,")"
TriggerRegisterCommandEventHint="[UjAPI] native TriggerRegisterCommandEvent takes trigger whichTrigger, integer whichAbility, string orderName returns event"

TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(",~whichTrigger,", ",~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI] native TriggerRegisterUpgradeCommandEvent takes trigger whichTrigger, integer whichUpgrade returns event"

SetPlayerHandicapReviveTime=SetPlayerHandicapReviveTime
SetPlayerHandicapReviveTime="SetPlayerHandicapReviveTime(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapReviveTimeHint="[UjAPI] native SetPlayerHandicapReviveTime takes player whichPlayer, real handicap returns nothing"

SetPlayerHandicapDamage=SetPlayerHandicapDamage
SetPlayerHandicapDamage="SetPlayerHandicapDamage(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapDamageHint="[UjAPI] native SetPlayerHandicapDamage takes player whichPlayer, real handicap returns nothing"

SetMaxCheckpointSaves=SetMaxCheckpointSaves
SetMaxCheckpointSaves="SetMaxCheckpointSaves(",~maxCheckpointSaves,")"
SetMaxCheckpointSavesHint="[UjAPI] native SetMaxCheckpointSaves takes integer maxCheckpointSaves returns nothing"

SaveGameCheckpoint=SaveGameCheckpoint
SaveGameCheckpoint="SaveGameCheckpoint(",~saveFileName,", ",~showWindow,")"
SaveGameCheckpointHint="[UjAPI] native SaveGameCheckpoint takes string saveFileName, boolean showWindow returns nothing"

SetPortraitLight=SetPortraitLight
SetPortraitLight="SetPortraitLight(",~portraitDNCFile,")"
SetPortraitLightHint="[UjAPI] native SetPortraitLight takes string portraitDNCFile returns nothing"

CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI] native CreateMinimapIconOnUnit takes unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(",~where,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI] native CreateMinimapIconAtLoc takes location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(",~x,", ",~y,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconHint="[UjAPI] native CreateMinimapIcon takes real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(",~key,")"
SkinManagerGetLocalPathHint="[UjAPI] native SkinManagerGetLocalPath takes string key returns string"

DestroyMinimapIcon=DestroyMinimapIcon
DestroyMinimapIcon="DestroyMinimapIcon(",~whichMinimapIcon,")"
DestroyMinimapIconHint="[UjAPI] native DestroyMinimapIcon takes minimapicon whichMinimapIcon returns nothing"

SetMinimapIconVisible=SetMinimapIconVisible
SetMinimapIconVisible="SetMinimapIconVisible(",~whichMinimapIcon,", ",~visible,")"
SetMinimapIconVisibleHint="[UjAPI] native SetMinimapIconVisible takes minimapicon whichMinimapIcon, boolean visible returns nothing"

SetMinimapIconOrphanDestroy=SetMinimapIconOrphanDestroy
SetMinimapIconOrphanDestroy="SetMinimapIconOrphanDestroy(",~whichMinimapIcon,", ",~doDestroy,")"
SetMinimapIconOrphanDestroyHint="[UjAPI] native SetMinimapIconOrphanDestroy takes minimapicon whichMinimapIcon, boolean doDestroy returns nothing"

CameraSetFocalDistance=CameraSetFocalDistance
CameraSetFocalDistance="CameraSetFocalDistance(",~distance,")"
CameraSetFocalDistanceHint="[UjAPI] native CameraSetFocalDistance takes real distance returns nothing"

CameraSetDepthOfFieldScale=CameraSetDepthOfFieldScale
CameraSetDepthOfFieldScale="CameraSetDepthOfFieldScale(",~scale,")"
CameraSetDepthOfFieldScaleHint="[UjAPI] native CameraSetDepthOfFieldScale takes real scale returns nothing"

SetCinematicAudio=SetCinematicAudio
SetCinematicAudio="SetCinematicAudio(",~cinematicAudio,")"
SetCinematicAudioHint="[UjAPI] native SetCinematicAudio takes boolean cinematicAudio returns nothing"

StartSoundEx=StartSoundEx
StartSoundEx="StartSoundEx(",~soundHandle,", ",~fadeIn,")"
StartSoundExHint="[UjAPI] native StartSoundEx takes sound soundHandle, boolean fadeIn returns nothing"

SetThematicMusicVolume=SetThematicMusicVolume
SetThematicMusicVolume="SetThematicMusicVolume(",~volume,")"
SetThematicMusicVolumeHint="[UjAPI] native SetThematicMusicVolume takes integer volume returns nothing"

SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(",~soundHandle,", ",~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI] native SetSoundFacialAnimationLabel takes sound soundHandle, string animationLabel returns boolean"

SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(",~soundHandle,", ",~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI] native SetSoundFacialAnimationGroupLabel takes sound soundHandle, string groupLabel returns boolean"

SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(",~soundHandle,", ",~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI] native SetSoundFacialAnimationSetFilepath takes sound soundHandle, string animationSetFilepath returns boolean"

SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(",~soundHandle,", ",~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI] native SetDialogueSpeakerNameKey takes sound soundHandle, string speakerName returns boolean"

SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(",~soundHandle,", ",~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI] native SetDialogueTextKey takes sound soundHandle, string dialogueText returns boolean"

AutomationSetTestType=AutomationSetTestType
AutomationSetTestType="AutomationSetTestType(",~testType,")"
AutomationSetTestTypeHint="[UjAPI] native AutomationSetTestType takes string testType returns nothing"

AutomationTestStart=AutomationTestStart
AutomationTestStart="AutomationTestStart(",~testName,")"
AutomationTestStartHint="[UjAPI] native AutomationTestStart takes string testName returns nothing"

AutomationTestEnd=AutomationTestEnd
AutomationTestEnd="AutomationTestEnd(",")"
AutomationTestEndHint="[UjAPI] native AutomationTestEnd takes nothing returns nothing"

AutomationTestingFinished=AutomationTestingFinished
AutomationTestingFinished="AutomationTestingFinished(",")"
AutomationTestingFinishedHint="[UjAPI] native AutomationTestingFinished takes nothing returns nothing"

CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(",~abilityTypeId,", ",~orderName,")"
CreateCommandButtonEffectHint="[UjAPI] native CreateCommandButtonEffect takes integer abilityTypeId, string orderName returns commandbuttoneffect"

CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(",~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI] native CreateUpgradeCommandButtonEffect takes integer whichUprgade returns commandbuttoneffect"

CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(",~abilityTypeId,")"
CreateLearnCommandButtonEffectHint="[UjAPI] native CreateLearnCommandButtonEffect takes integer abilityTypeId returns commandbuttoneffect"

DestroyCommandButtonEffect=DestroyCommandButtonEffect
DestroyCommandButtonEffect="DestroyCommandButtonEffect(",~whichEffect,")"
DestroyCommandButtonEffectHint="[UjAPI] native DestroyCommandButtonEffect takes commandbuttoneffect whichEffect returns nothing"

DoNothing=Do Nothing
DoNothing="Do nothing"

CommentString=Comment
CommentString="-------- ",~Comment Text," --------"

CustomScriptCode=Custom Script
CustomScriptCode="Custom script:   ",~Script Code
CustomScriptCodeHint=Enter one line of script code.  Example: 'call my_func(udg_my_var)'

TriggerSleepAction=Wait
TriggerSleepAction="Wait ",~Time," seconds"
TriggerSleepActionHint=The duration of this wait is specified in real-time seconds.

PolledWait=Wait (Game-Time)
PolledWait="Wait ",~Time," game-time seconds"
PolledWaitHint=The duration of this wait is specified in game-time seconds.  This is a polled wait, so it may last slightly longer than requested.

WaitForCondition=Wait For Condition
WaitForCondition="Wait until ",~Condition,", checking every ",~Interval," seconds"

WaitForSoundBJ=Wait For Sound
WaitForSoundBJ="Wait for ",~Sound," to be ",~Time," seconds from finished playing"
WaitForSoundBJHint=This action only waits if the sound is currently playing.  If the sound has not yet started, or has already finished, this action does nothing.

SetVariable=Set Variable
SetVariable="Set ",~Variable," = ",~Value

ReturnAction=Skip Remaining Actions
ReturnAction="Skip remaining actions"
ReturnActionHint=This causes all remaining actions in the trigger to be skipped.

IfThenElseMultiple=If / Then / Else, Multiple Functions
IfThenElseMultiple="If (All Conditions are True) then do (Then Actions) else do (Else Actions)"
IfThenElseMultipleHint=Add conditions and actions to this function in the main display.

IfThenElse=If / Then / Else
IfThenElse="If ",~Condition," then do ",~Action," else do ",~Action

ForLoopAMultiple=For Each Integer A, Do Multiple Actions
ForLoopAMultiple="For each (Integer A) from ",~Start," to ",~End,", do (Actions)"
ForLoopAMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopBMultiple=For Each Integer B, Do Multiple Actions
ForLoopBMultiple="For each (Integer B) from ",~Start," to ",~End,", do (Actions)"
ForLoopBMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopVarMultiple=For Each Integer Variable, Do Multiple Actions
ForLoopVarMultiple="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do (Actions)"
ForLoopVarMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopA=For Each Integer A, Do Action
ForLoopA="For each (Integer A) from ",~Start," to ",~End,", do ",~Action
ForLoopAHint=The end value is assumed to be larger than the start value.

ForLoopB=For Each Integer B, Do Action
ForLoopB="For each (Integer B) from ",~Start," to ",~End,", do ",~Action
ForLoopBHint=The end value is assumed to be larger than the start value.

ForLoopVar=For Each Integer Variable, Do Action
ForLoopVar="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do ",~Action
ForLoopVarHint=The end value is assumed to be larger than the start value.

StartMeleeAI=Start Melee AI Script
StartMeleeAI="Start melee AI script for ",~Player,": ",~Script
StartMeleeAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

StartCampaignAI=Start Campaign AI Script
StartCampaignAI="Start campaign AI script for ",~Player,": ",~Script
StartCampaignAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

CommandAI=Send AI Command
CommandAI="Send ",~Player," the AI Command (",~Command,", ",~Data,")"
CommandAIHint=This action is for internal use in AI scripts.

RemoveGuardPosition=Ignore Unit Guard Position
RemoveGuardPosition="Ignore ",~Unit,"'s guard position"
RemoveGuardPositionHint=This action tells the AI to neither use nor replace a given preplaced unit.  This has no effect on Heroes and peon-type units.

RemoveAllGuardPositions=Ignore All Unit Guard Positions
RemoveAllGuardPositions="Ignore the guard positions of all ",~Player," units"
RemoveAllGuardPositionsHint=This action tells the AI for the given player to neither use nor replace any of its preplaced units.  This has no effect on Heroes and peon-type units.

RecycleGuardPosition=Recycle Unit Guard Position
RecycleGuardPosition="Recycle ",~Unit,"'s guard position"
RecycleGuardPositionHint=This action requests that the AI recycle the guard position that once belonged to the specified unit.

LockGuardPosition=Lock Guard Position
LockGuardPosition="Lock guard position of ",~Unit
LockGuardPositionHint=This action prevents the AI from changing the guard position of a unit.

SetUnitAnimation=Play Unit Animation
SetUnitAnimation="Play ",~Unit,"'s ",~Animation Name," animation"
SetUnitAnimationHint=Use 'Reset Unit Animation' to revert to a unit's normal animation.

SetUnitAnimationWithRarity=Play Unit Animation (Specify Rarity)
SetUnitAnimationWithRarity="Play ",~Unit,"'s ",~Animation Name," animation, using only ",~Rarity," animations"
SetUnitAnimationWithRarityHint=This animation will repeat until reset with 'Reset Unit Animation'.

QueueUnitAnimationBJ=Queue Unit Animation
QueueUnitAnimationBJ="Queue ",~Unit,"'s ",~Animation Name," animation"

ResetUnitAnimation=Reset Unit Animation
ResetUnitAnimation="Reset ",~Unit,"'s animation"
ResetUnitAnimationHint=Sets the unit's animation back to whatever the unit is doing.

AddUnitAnimationPropertiesBJ=Add/Remove Unit Animation Tag
AddUnitAnimationPropertiesBJ=~Add/Remove," the ",~Tag," animation tag to ",~Unit

SetUnitLookAt=Lock Body-Part Facing
SetUnitLookAt="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used.  The offset is taken as (X, Y, Z) from the target's feet.

ResetUnitLookAt=Reset Body-Part Facing
ResetUnitLookAt="Reset ",~Unit,"'s body-part facing"
ResetUnitLookAtHint=Returns a unit's body-part facing to normal.

SetUnitScalePercent=Change Unit Size
SetUnitScalePercent="Change ",~Unit,"'s size to (",~X,"%, ",~Y,"%, ",~Z,"%) of its original size"
SetUnitScalePercentHint=The scaling values apply to (Length, Width, Height) when viewing a unit head-on.

SetUnitVertexColorBJ=Change Unit Vertex Coloring
SetUnitVertexColorBJ="Change ",~Unit,"'s vertex coloring to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetUnitVertexColorBJHint=The color values are (Red, Green, Blue).  Most units default to 100% red, green, and blue, with 0% transparency.  A 100% transparent unit is completely invisible.

SetUnitTimeScalePercent=Change Unit Animation Speed
SetUnitTimeScalePercent="Change ",~Unit,"'s animation speed to ",~Percent,"% of its original speed"
SetUnitTimeScalePercentHint=To revert a unit's animation speed to default, set its animation speed to 100%.

SetUnitTurnSpeedBJ=Change Unit Turn Speed
SetUnitTurnSpeedBJ="Change ",~Unit," turn speed to ",~Value
SetUnitTurnSpeedBJHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

SetUnitBlendTimeBJ=Change Unit Blend Time
SetUnitBlendTimeBJ="Change ",~Unit," blend time to ",~Value
SetUnitBlendTimeBJHint=A unit's blend time determines how quickly the unit's body parts turn to face a direction.

SetUnitFlyHeightBJ=Change Unit Flying Height
SetUnitFlyHeightBJ="Change ",~Unit," flying height to ",~Height," at ",~Rate
SetUnitFlyHeightBJHint=Only flying units use flying heights.

SetUnitPropWindowBJ=Change Unit Prop Window Angle
SetUnitPropWindowBJ="Change ",~Unit," prop window angle to ",~Angle

SetDestructableAnimationBJ=Play Destructible Animation
SetDestructableAnimationBJ="Play ",~Destructible,"'s ",~Animation Name," animation"

QueueDestructableAnimationBJ=Queue Destructible Animation
QueueDestructableAnimationBJ="Queue ",~Destructible,"'s ",~Animation Name," animation"

SetDestAnimationSpeedPercent=Change Destructible Animation Speed
SetDestAnimationSpeedPercent="Change ",~Destructible,"'s animation speed to ",~Percent,"% of its original speed"
SetDestAnimationSpeedPercentHint=To revert a destructible's animation speed to default, set its animation speed to 100%.

SetDoodadAnimationRectBJ=Play Animation For Doodads In Rect
SetDoodadAnimationRectBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Rect
SetDoodadAnimationRectBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

SetDoodadAnimationBJ=Play Animation For Doodads In Circle
SetDoodadAnimationBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Radius," of ",~Point
SetDoodadAnimationBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

CameraSetupApplyForPlayer=Apply Camera Object (Timed)
CameraSetupApplyForPlayer=~Apply Method," ",~Camera Object," for ",~Player," over ",~Time," seconds"

PanCameraToTimedLocForPlayer=Pan Camera (Timed)
PanCameraToTimedLocForPlayer="Pan camera for ",~Player," to ",~Point," over ",~Time," seconds"

PanCameraToTimedLocWithZForPlayer=Pan Camera With Interpolated Height (Timed)
PanCameraToTimedLocWithZForPlayer="Pan camera for ",~Player," to ",~Point," with height ",~Z," above the terrain over ",~Time," seconds"
PanCameraToTimedLocWithZForPlayerHint=The camera will not drop below the terrain height during its camera path.

SmartCameraPanBJ=Pan Camera As Necessary (Timed)
SmartCameraPanBJ="Pan camera as necessary for ",~Player," to ",~Point," over ",~Time," seconds"
SmartCameraPanBJHint=If the camera is very far from the destination, it will snap instead of pan.  If the camera is very close to the destination, the pan request will be skipped.

SetCameraFieldForPlayer=Set Camera Field (Timed)
SetCameraFieldForPlayer="Set ",~Player,"'s camera ",~Field," to ",~Value," over ",~Time," seconds"

RotateCameraAroundLocBJ=Rotate Camera Around Point
RotateCameraAroundLocBJ="Rotate camera ",~Angle," degrees around ",~Point," for ",~Player," over ",~Time," seconds"

SetCameraTargetControllerNoZForPlayer=Lock Camera Target To Unit
SetCameraTargetControllerNoZForPlayer="Lock camera target for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,") using ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint=The camera target is offset by (X, Y) from the center of the unit's feet.

SetCameraOrientControllerForPlayerBJ=Lock Camera Orientation To Unit
SetCameraOrientControllerForPlayerBJ="Lock camera orientation for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,")"

SetCinematicCameraForPlayer=Play Cinematic Camera
SetCinematicCameraForPlayer="Run camera for ",~Player," through ",~Camera File," cinematic camera"

StopCameraForPlayerBJ=Stop Camera
StopCameraForPlayerBJ="Stop the camera for ",~Player

ResetToGameCameraForPlayer=Reset Game Camera
ResetToGameCameraForPlayer="Reset camera for ",~Player," to standard game-view over ",~Time," seconds"

CameraSetSmoothingFactorBJ=Change Camera Smoothing Factor
CameraSetSmoothingFactorBJ="Change camera smoothing factor to ",~Factor

CameraResetSmoothingFactorBJ=Reset Camera Smoothing Factor
CameraResetSmoothingFactorBJ="Reset camera smoothing factor"

CameraSetSourceNoiseForPlayer=Sway Camera Source
CameraSetSourceNoiseForPlayer="Sway the camera source for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetSourceNoiseForPlayerHint=This constantly sways the camera source until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetTargetNoiseForPlayer=Sway Camera Target
CameraSetTargetNoiseForPlayer="Sway the camera target for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetTargetNoiseForPlayerHint=This constantly sways the camera target until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetEQNoiseForPlayer=Shake Camera
CameraSetEQNoiseForPlayer="Shake the camera for ",~Player," with magnitude ",~Magnitude
CameraSetEQNoiseForPlayerHint=This constantly shakes the camera until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying/Shaking Camera'.

CameraClearNoiseForPlayer=Stop Swaying/Shaking Camera
CameraClearNoiseForPlayer="Stop swaying/shaking the camera for ",~Player
CameraClearNoiseForPlayerHint=This stops the camera from swaying after a 'Camera - Sway Camera' or 'Camera - Shake Camera' action is used.

AdjustCameraBoundsForPlayerBJ=Extend/Shrink Camera Bounds
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," the camera bounds for ",~Player," west by ",~West,", east by ",~East,", north by ",~North,", and south by ",~South

SetCameraBoundsToRectForPlayerBJ=Set Camera Bounds
SetCameraBoundsToRectForPlayerBJ="Set the camera bounds for ",~Player," to ",~Rect
SetCameraBoundsToRectForPlayerBJHint=This restricts the game camera to the specified rect.  Changing the camera bounds does not change the scale of the minimap.  This should only be called while the camera is facing north.

SetCameraQuickPositionLocForPlayer=Set Spacebar-Point
SetCameraQuickPositionLocForPlayer="Set a spacebar-point for ",~Player," at ",~Point
SetCameraQuickPositionLocForPlayerHint=A spacebar-point is a location that the game camera jumps to when the player presses the spacebar.

TransmissionFromUnitWithNameBJ=Transmission From Unit
TransmissionFromUnitWithNameBJ="Send transmission to ",~Player Group," from ",~Unit," named ",~Name,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint=The duration of 'No sound' is 5 seconds.

TransmissionFromUnitTypeWithNameBJ=Transmission From Unit-Type
TransmissionFromUnitTypeWithNameBJ="Send transmission to ",~Player Group," from a ",~Player," ",~Unit-Type," named ",~Name," at ",~Point,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint=The duration of 'No sound' is 5 seconds.

ForceCinematicSubtitlesBJ=Subtitle Display Override
ForceCinematicSubtitlesBJ="Turn subtitle display override ",~On/Off
ForceCinematicSubtitlesBJHint=Turning this on will cause transmission text to be displayed on the screen even if the user normally has subtitles turned off.

CinematicModeBJ=Cinematic Mode
CinematicModeBJ="Turn cinematic mode ",~On/Off," for ",~Player Group

CinematicModeExBJ=Cinematic Mode (Timed)
CinematicModeExBJ="Turn cinematic mode ",~On/Off," for ",~Player Group," over ",~Time," seconds"

CinematicFadeBJ=Fade Filter
CinematicFadeBJ=~Fade Type," over ",~Duration," seconds using texture ",~Texture," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
CinematicFadeBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CinematicFilterGenericBJ=Advanced Filter
CinematicFilterGenericBJ="Apply a filter over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DisplayCineFilterBJ=Show/Hide Filter
DisplayCineFilterBJ=~Show/Hide," filter"

PingMinimapLocForForce=Ping Minimap
PingMinimapLocForForce="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds"

PingMinimapLocForForceEx=Ping Minimap With Color
PingMinimapLocForForceEx="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds, using a ",~Style," ping of color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint=The color values are (Red, Green, Blue).  Warning pings are always red.

UnitAddIndicatorBJ=Flash Speech Indicator For Unit
UnitAddIndicatorBJ="Flash a speech indicator for ",~Unit," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
UnitAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DestructableAddIndicatorBJ=Flash Speech Indicator For Destructible
DestructableAddIndicatorBJ="Flash a speech indicator for ",~Destructible," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
DestructableAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ItemAddIndicatorBJ=Flash Speech Indicator For Item
ItemAddIndicatorBJ="Flash a speech indicator for ",~Item," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
ItemAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ClearTextMessagesBJ=Clear Text Messages
ClearTextMessagesBJ="Clear the screen of text messages for ",~Player Group

ShowInterfaceForceOff=Letterbox Mode On
ShowInterfaceForceOff="Turn on letterbox mode (hide interface) for ",~Player Group,": fade out over ",~Duration," seconds"
ShowInterfaceForceOffHint=Puts the camera into letterbox mode, hiding the game interface.

ShowInterfaceForceOn=Letterbox Mode Off
ShowInterfaceForceOn="Turn off letterbox mode (show interface) for ",~Player Group,": fade in over ",~Duration," seconds"
ShowInterfaceForceOnHint=Puts the camera into normal (non-letterbox) mode, displaying the game interface.

SetUserControlForceOff=Disable User Control
SetUserControlForceOff="Disable user control for ",~Player Group

SetUserControlForceOn=Enable User Control
SetUserControlForceOn="Enable user control for ",~Player Group

EnableOcclusionBJ=Enable/Disable Occlusion
EnableOcclusionBJ=~Enable/Disable," occlusion for ",~Player Group
EnableOcclusionBJHint=When occlusion is enabled, trees that block vision of units become transparent.

EnableWorldFogBoundaryBJ=Enable/Disable Boundary Tinting
EnableWorldFogBoundaryBJ=~Enable/Disable," boundary tinting for ",~Player Group

StartTimerBJ=Start Timer
StartTimerBJ="Start ",~Timer," as a ",~One-Shot/Repeating," timer that will expire in ",~Time," seconds"

PauseTimerBJ=Pause Timer
PauseTimerBJ=~Pause/Resume," ",~Timer

CreateTimerDialogBJ=Create Timer Window
CreateTimerDialogBJ="Create a timer window for ",~Timer," with title ",~Title
CreateTimerDialogBJHint=Timer Windows cannot be displayed at map initialization.

DestroyTimerDialogBJ=Destroy Timer Window
DestroyTimerDialogBJ="Destroy ",~Timer Window

TimerDialogDisplayForPlayerBJ=Show/Hide Timer Window For Player
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," for ",~Player
TimerDialogDisplayForPlayerBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogDisplayBJ=Show/Hide Timer Window
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogSetTitleBJ=Change Timer Window Title
TimerDialogSetTitleBJ="Change the title of ",~Timer Window," to ",~Title

TimerDialogSetTitleColorBJ=Change Timer Window Title Color
TimerDialogSetTitleColorBJ="Change the color of the title for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTitleColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

TimerDialogSetTimeColorBJ=Change Timer Window Time Color
TimerDialogSetTimeColorBJ="Change the color of the time for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTimeColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CreateDestructableLoc=Create
CreateDestructableLoc="Create a ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

CreateDeadDestructableLocBJ=Create (Dead)
CreateDeadDestructableLocBJ="Create a dead ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableLocBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

KillDestructable=Kill
KillDestructable="Kill ",~Destructible

RemoveDestructable=Remove
RemoveDestructable="Remove ",~Destructible

DestructableRestoreLife=Resurrect
DestructableRestoreLife="Resurrect ",~Destructible," with ",~Value," life and ",~Show/Hide," birth animation"

ShowDestructableBJ=Show/Hide
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint=Hidden destructibles are not displayed, but still affect pathing and visibility.

SetDestructableLifePercentBJ=Set Life (To Percentage)
SetDestructableLifePercentBJ="Set life of ",~Destructible," to ",~Percent,"%"

SetDestructableLife=Set Life (To Value)
SetDestructableLife="Set life of ",~Destructible," to ",~Value

SetDestructableMaxLifeBJ=Set Max Life
SetDestructableMaxLifeBJ="Set max life of ",~Destructible," to ",~Value

ModifyGateBJ=Open/Close/Destroy Gate
ModifyGateBJ=~Open/Close/Destroy," ",~Gate

ChangeElevatorWalls=Open/Close Elevator Walls
ChangeElevatorWalls=~Open/Close," ",~Walls," of ",~Elevator

ChangeElevatorHeight=Set Elevator Height
ChangeElevatorHeight="Set height of ",~Elevator," to ",~Height

SetDestructableInvulnerableBJ=Make Invulnerable/Vulnerable
SetDestructableInvulnerableBJ="Make ",~Destructible," ",~Invulnerable/Vulnerable

SetDestructableOccluderHeight=Set Occlusion Height
SetDestructableOccluderHeight="Set the occlusion height of ",~Destructible," to ",~Height

EnumDestructablesInRectAllMultiple=Pick Every Destructible In Rect And Do Multiple Actions
EnumDestructablesInRectAllMultiple="Pick every destructible in ",~Rect," and do (Actions)"
EnumDestructablesInRectAllMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInCircleBJMultiple=Pick Every Destructible In Circle And Do Multiple Actions
EnumDestructablesInCircleBJMultiple="Pick every destructible within ",~Radius," of ",~Point," and do (Actions)"
EnumDestructablesInCircleBJMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInRectAll=Pick Every Destructible In Rect And Do Action
EnumDestructablesInRectAll="Pick every destructible in ",~Rect," and do ",~Action
EnumDestructablesInRectAllHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.

EnumDestructablesInCircleBJ=Pick Every Destructible In Circle And Do Action
EnumDestructablesInCircleBJ="Pick every destructible within ",~Radius," of ",~Point," and do ",~Action
EnumDestructablesInCircleBJHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.

DialogDisplayBJ=Show/Hide
DialogDisplayBJ=~Show/Hide," ",~Dialog," for ",~Player
DialogDisplayBJHint=Dialogs cannot be displayed at map initialization.

DialogSetMessageBJ=Change Title
DialogSetMessageBJ="Change the title of ",~Dialog," to ",~Title

DialogAddButtonBJ=Create Dialog Button
DialogAddButtonBJ="Create a dialog button for ",~Dialog," labelled ",~Text

DialogClearBJ=Clear
DialogClearBJ="Clear ",~Dialog
DialogClearBJHint=This clears the title and all buttons for the specified dialog.

AddWeatherEffectSaveLast=Create Weather Effect
AddWeatherEffectSaveLast="Create at ",~Rect," the weather effect ",~Weather Id

EnableWeatherEffect=Enable/Disable Weather Effect
EnableWeatherEffect="Turn ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint=You can create weather effects via the 'Environment - Create Weather Effect' action.

RemoveWeatherEffectBJ=Remove Weather Effect
RemoveWeatherEffectBJ="Remove ",~Weather Effect

TerrainDeformationCraterBJ=Create Terrain Deformation: Crater
TerrainDeformationCraterBJ="Create a ",~Duration," second ",~Type," crater deformation at ",~Point," with radius ",~Radius," and depth ",~Depth
TerrainDeformationCraterBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.  Permanent deformations are not preserved in saved game files.

TerrainDeformationRippleBJ=Create Terrain Deformation: Ripple
TerrainDeformationRippleBJ="Create a ",~Duration," second ",~Type," ripple deformation at ",~Point," with starting radius ",~Radius,", ending radius ",~Radius,", and depth ",~Depth,", using ",~Time," second ripples spaced ",~Distance," apart"
TerrainDeformationRippleBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationWaveBJ=Create Terrain Deformation: Wave
TerrainDeformationWaveBJ="Create a ",~Duration," second wave deformation from ",~Source," to ",~Target," with radius ",~Radius,", depth ",~Depth,", and a ",~Delay," second trailing delay"
TerrainDeformationWaveBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.

TerrainDeformationRandomBJ=Create Terrain Deformation: Random
TerrainDeformationRandomBJ="Create a ",~Duration," second random deformation at ",~Point," with radius ",~Radius,", using depths between ",~Minimum," and ",~Maximum,", updating every ",~Update Interval," seconds"
TerrainDeformationRandomBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationStopBJ=Stop Terrain Deformation
TerrainDeformationStopBJ="Stop ",~Terrain Deformation," over ",~Duration," seconds"
TerrainDeformationStopBJHint=The deformation will smoothly reduce to nothing over the duration.

TerrainDeformStopAll=Stop All Terrain Deformations
TerrainDeformStopAll="Stop all active terrain deformations instantly"
TerrainDeformStopAllHint=This includes any terrain deformations indirectly caused by spells or abilities.

SetWaterDeforms=Turn Water Deformation On/Off
SetWaterDeforms="Turn water deformation ",~On/Off
SetWaterDeformsHint=When this is turned on, terrain deformations will also apply to any water above the terrain.  This does not work with permanent deformations.

SetTerrainTypeBJ=Change Terrain Type
SetTerrainTypeBJ="Change terrain type at ",~Location," to ",~Terrain Type," using variation ",~Variation," in an area of size ",~Area," and shape ",~Shape
SetTerrainTypeBJHint=Use a variation of -1 to generate random variations across the area.

SetTerrainPathableBJ=Turn Terrain Pathing On/Off
SetTerrainPathableBJ="Set terrain pathing at ",~Location," of type ",~Pathing," to ",~On/Off
SetTerrainPathableBJHint=Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.).

SetWaterBaseColorBJ=Set Water Tinting Color
SetWaterBaseColorBJ="Change water tinting color to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetWaterBaseColorBJHint=The color values are (Red, Green, Blue).  100% transparent water is completely invisible.

SetSkyModel=Set Sky
SetSkyModel="Set sky to ",~Sky

SetTerrainFogExBJ=Set Fog
SetTerrainFogExBJ="Set fog to style ",~Style,", z-start ",~Z-Start,", z-end ",~Z-End,", density ",~Density," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint=The color values are (Red, Green, Blue).

ResetTerrainFogBJ=Reset Fog
ResetTerrainFogBJ="Reset fog to default values"

SetBlightRectBJ=Create/Remove Blight Rect
SetBlightRectBJ=~Create/Remove," Blight for ",~Player," across ",~Rect

SetBlightRadiusLocBJ=Create/Remove Blight Circle
SetBlightRadiusLocBJ=~Create/Remove," Blight for ",~Player," from ",~Point," to a radius of ",~Radius

CreateTextTagLocBJ=Create Floating Text At Point
CreateTextTagLocBJ="Create floating text that reads ",~Message," at ",~Point," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagLocBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

CreateTextTagUnitBJ=Create Floating Text Above Unit
CreateTextTagUnitBJ="Create floating text that reads ",~Message," above ",~Unit," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagUnitBJHint=Floating text created in this manner does not follow the unit's movement.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

DestroyTextTagBJ=Destroy
DestroyTextTagBJ="Destroy ",~Floating Text

ShowTextTagForceBJ=Show/Hide
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," for ",~Player Group

SetTextTagVelocityBJ=Set Velocity
SetTextTagVelocityBJ="Set the velocity of ",~Floating Text," to ",~Speed," towards ",~Angle," degrees"
SetTextTagVelocityBJHint=You can only accurately set the velocity of floating text once, when it is first created.  The angle is expected in degrees, with 0 being east and 90 being north.

SetTextTagColorBJ=Change Color
SetTextTagColorBJ="Change the color of ",~Floating Text," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetTextTagColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetTextTagPosBJ=Change Position To Point
SetTextTagPosBJ="Change the position of ",~Floating Text," to ",~Point," with Z offset ",~Z

SetTextTagPosUnitBJ=Change Position To Unit
SetTextTagPosUnitBJ="Change the position of ",~Floating Text," to ",~Unit," with Z offset ",~Z

SetTextTagTextBJ=Change Text
SetTextTagTextBJ="Change text of ",~Floating Text," to ",~Message," using font size ",~Size

SetTextTagSuspendedBJ=Suspend/Resume
SetTextTagSuspendedBJ="Change ",~Floating Text,": ",~Enable/Disable," suspend state"

SetTextTagPermanentBJ=Permanent/Expires
SetTextTagPermanentBJ="Change ",~Floating Text,": ",~Enable/Disable," permanence"

SetTextTagLifespanBJ=Change Lifespan
SetTextTagLifespanBJ="Change the lifespan of ",~Floating Text," to ",~Time," seconds"
SetTextTagLifespanBJHint=This does not affect permanent floating text.  This sets the age at which floating text is removed and cleaned up.

SetTextTagFadepointBJ=Change Fading Age
SetTextTagFadepointBJ="Change the fading age of ",~Floating Text," to ",~Time," seconds"
SetTextTagFadepointBJHint=This does not affect permanent floating text.  This sets the age at which floating text begins fading.

SetTextTagAgeBJ=Change Age
SetTextTagAgeBJ="Change the age of ",~Floating Text," to ",~Time," seconds"
SetTextTagAgeBJHint=This does not affect permanent floating text.

DisplayTextToForce=Text Message (Auto-Timed) (Auto-Timed)
DisplayTextToForce="Display to ",~Player Group," the text: ",~Text
DisplayTextToForceHint=The text is shown for an amount of time that automatically increases with the text length.

DisplayTimedTextToForce=Text Message (Explicitly Timed) (Explicitly Timed)
DisplayTimedTextToForce="Display to ",~Player Group," for ",~Time," seconds the text: ",~Text

PauseGameOn=Pause Game
PauseGameOn="Pause the game"

PauseGameOff=Unpause Game
PauseGameOff="Unpause the game"

SetGameSpeed=Set Game Speed
SetGameSpeed="Set game speed to ",~Speed
SetGameSpeedHint=You can lock the game speed with the 'Game - Lock Game Speed' trigger action.

LockGameSpeedBJ=Lock Game Speed
LockGameSpeedBJ="Lock the game speed"
LockGameSpeedBJHint=This prevents the game speed from being modified.  Not even triggers can modify the game speed when it is locked.

UnlockGameSpeedBJ=Unlock Game Speed
UnlockGameSpeedBJ="Unlock the game speed"
UnlockGameSpeedBJHint=This allows the game speed to be modified again after a 'Game - Lock Game Speed' action is used.

SetMapFlag=Set Map Flag
SetMapFlag="Set ",~Map Flag," to ",~On/Off

SetTimeOfDay=Set Time Of Day
SetTimeOfDay="Set the time of day to ",~Time
SetTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

SetTimeOfDayScalePercentBJ=Set Time Of Day Speed
SetTimeOfDayScalePercentBJ="Set time of day speed to ",~Percent,"% of the default speed"
SetTimeOfDayScalePercentBJHint=Use 100% to revert the speed to normal.

UseTimeOfDayBJ=Turn Day/Night Cycle On/Off
UseTimeOfDayBJ="Turn the day/night cycle ",~On/Off

ShareEverythingWithTeam=Share Vision And Full Unit Control With Team
ShareEverythingWithTeam="Grant shared vision and full shared unit control of ",~Player," units with his/her allies"
ShareEverythingWithTeamHint=Two players are considered allies if they are both allied with each other.

MakeUnitsPassiveForPlayer=Give Units To Neutral Victim
MakeUnitsPassiveForPlayer="Give all ",~Player," units to the Neutral Victim player"
MakeUnitsPassiveForPlayerHint=By default, the Neutral Victim player treats all other players as allies, but is treated as an enemy by all other players.

SetNextLevelBJ=Set Next Level
SetNextLevelBJ="Set the next level to ",~Level
SetNextLevelBJHint=This sets a level to be started after the current game ends.

CustomVictoryBJ=Victory
CustomVictoryBJ="Victory ",~Player," (",~Show/Skip," dialogs, ",~Show/Skip," scores)"

CustomDefeatBJ=Defeat
CustomDefeatBJ="Defeat ",~Player," with the message: ",~Message

LoadGameBJ=Load Game
LoadGameBJ="Load ",~Filename," (",~Show/Skip," scores)"

SaveAndLoadGameBJ=Save Game And Load Game
SaveAndLoadGameBJ="Save game as ",~Filename," and load ",~Filename," (",~Show/Skip," scores)"

SaveAndChangeLevelBJ=Save Game And Change Level
SaveAndChangeLevelBJ="Save game as ",~Filename," and change level to ",~Filename," (",~Show/Skip," scores)"

RenameSaveDirectoryBJ=Rename Saved-Game Folder
RenameSaveDirectoryBJ="Rename the ",~Folder," saved-game folder to ",~Folder

RemoveSaveDirectoryBJ=Delete Saved-Game Folder
RemoveSaveDirectoryBJ="Delete the ",~Folder," saved-game folder"
RemoveSaveDirectoryBJHint=This deletes the specified saved-game folder and all of its contents.

CopySaveGameBJ=Copy Saved-Game
CopySaveGameBJ="Create a copy of the ",~Filename," saved-game and name it ",~Filename
CopySaveGameBJHint=This action only works in response to Game Load and Game Save events, and can only be used up to 16 times per event.

SetCampaignMenuRaceBJ=Set Campaign Screen
SetCampaignMenuRaceBJ="Set campaign to ",~Campaign

SetMissionAvailableBJ=Enable/Disable Mission
SetMissionAvailableBJ=~Enable/Disable," ",~Mission

SetCampaignAvailableBJ=Enable/Disable Campaign
SetCampaignAvailableBJ=~Enable/Disable," the ",~Campaign

SetCinematicAvailableBJ=Enable/Disable Cinematic
SetCinematicAvailableBJ=~Enable/Disable," the ",~Cinematic

ShowCustomCampaignButton=Show/Hide Custom Campaign Button
ShowCustomCampaignButton=~Show/Hide," custom campaign button ",~Number

SetAllyColorFilterState=Set Ally Color Filter
SetAllyColorFilterState="Set ally color filtering to ",~State
SetAllyColorFilterStateHint=A value of 0 disables filtering.  A value of 1 enables filtering for the minimap.  A value of 2 enables filtering for the minimap and the game view.

SetCreepCampFilterState=Show/Hide Creep Camps On Minimap
SetCreepCampFilterState=~Show/Hide," creep camps on the minimap"

EnableMinimapFilterButtons=Enable/Disable Minimap Buttons
EnableMinimapFilterButtons=~Enable/Disable," ally color button and ",~Enable/Disable," creep camp button"

EnableSelect=Enable/Disable Selection
EnableSelect=~Enable/Disable," selection and deselection functionality (",~Enable/Disable," selection circles)"
EnableSelectHint=Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled.

EnableDragSelect=Enable/Disable Drag-Selection
EnableDragSelect=~Enable/Disable," drag-selection functionality (",~Enable/Disable," drag-selection box)"

EnablePreSelect=Enable/Disable Pre-Selection
EnablePreSelect=~Enable/Disable," pre-selection functionality (",~Enable/Disable," pre-selection circles, life bars, and object info)"

ForceUIKeyBJ=Force UI Key
ForceUIKeyBJ="Force ",~Player," to press the key ",~Key

ForceUICancelBJ=Force UI Cancel
ForceUICancelBJ="Force ",~Player," to press Escape/Cancel"

Preload=Preload File
Preload="Preload ",~Filename

PreloadEnd=Begin Preloading
PreloadEnd="Begin preloading with a ",~Time," second timeout"

Preloader=Preload Batch
Preloader="Preload all files listed in ",~Filename

InitGameCacheBJ=Create Game Cache
InitGameCacheBJ="Create a game cache from ",~Filename
InitGameCacheBJHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created.

SaveGameCacheBJ=Save Game Cache
SaveGameCacheBJ="Save ",~Game Cache
SaveGameCacheBJHint=Saves the game cache, using the same filename from which it was created.

StoreUnitBJ=Store Unit
StoreUnitBJ="Store ",~Unit," as ",~Label," of ",~Category," in ",~Game Cache
StoreUnitBJHint=Use the 'Game Cache - Restore Unit' actions to load this unit from a cache.  Label and Category names should not contain spaces.

StoreRealBJ=Store Real
StoreRealBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreRealBJHint=Use the 'Game Cache - Load Real Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreIntegerBJ=Store Integer
StoreIntegerBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreIntegerBJHint=Use the 'Game Cache - Load Integer Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreBooleanBJ=Store Boolean
StoreBooleanBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreBooleanBJHint=Use the 'Game Cache - Load Boolean Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreStringBJ=Store String
StoreStringBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreStringBJHint=Use the 'Game Cache - Load String Value' function to load this value from a cache.  Label and Category names should not contain spaces.

InitHashtableBJ=Create Hashtable
InitHashtableBJ="Create a hashtable"
InitHashtableBJHint=A hashtable allows you to store data.

SaveRealBJ=Save Real
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint=Use the 'Hashtable - Load Real Value' function to load this value from a hashtable.

SaveIntegerBJ=Save Integer
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint=Use the 'Hashtable - Load Integer Value' function to load this value from a hashtable.

SaveBooleanBJ=Save Boolean
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint=Use the 'Hashtable - Load Boolean Value' function to load this value from a hashtable.

SaveStringBJ=Save String
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint=Use the 'Hashtable - Load String Value' function to load this value from a hashtable.

SavePlayerHandleBJ=Save Player Handle
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint=Use the 'Hashtable - Load Player' actions to load this player from a hashtable.

SaveWidgetHandleBJ=Save Widget Handle
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~%s
SaveWidgetHandleBJHint=Use the 'Hashtable - Load Widget' actions to load this widget from a hashtable.

SaveDestructableHandleBJ=Save Destructable Handle
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint=Use the 'Hashtable - Load Destructable' actions to load this destructable from a hashtable.

SaveItemHandleBJ=Save Item Handle
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint=Use the 'Hashtable - Load Item' actions to load this item from a hashtable.

SaveUnitHandleBJ=Save Unit Handle
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint=Use the 'Hashtable - Load Unit' actions to load this unit from a hashtable.

SaveAbilityHandleBJ=Save Ability Handle
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~%s
SaveAbilityHandleBJHint=Use the 'Hashtable - Load Ability' actions to load this ability from a hashtable.

SaveTimerHandleBJ=Save Timer Handle
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint=Use the 'Hashtable - Load Timer' actions to load this timer from a hashtable.

SaveTriggerHandleBJ=Save Trigger Handle
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint=Use the 'Hashtable - Load Trigger' actions to load this trigger from a hashtable.

SaveTriggerConditionHandleBJ=Save Triggercondition Handle
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint=Use the 'Hashtable - Load Triggercondition' actions to load this triggercondition from a hashtable.

SaveTriggerActionHandleBJ=Save Triggeraction Handle
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint=Use the 'Hashtable - Load Triggeraction' actions to load this triggeraction from a hashtable.

SaveTriggerEventHandleBJ=Save Eventid Handle
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~%s
SaveTriggerEventHandleBJHint=Use the 'Hashtable - Load Eventid' actions to load this eventid from a hashtable.

SaveForceHandleBJ=Save Force Handle
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint=Use the 'Hashtable - Load Force' actions to load this force from a hashtable.

SaveGroupHandleBJ=Save Group Handle
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint=Use the 'Hashtable - Load Group' actions to load this group from a hashtable.

SaveLocationHandleBJ=Save Location Handle
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint=Use the 'Hashtable - Load Location' actions to load this location from a hashtable.

SaveRegionHandleBJ=Save Region Handle
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~%s
SaveRegionHandleBJHint=Use the 'Hashtable - Load Region' actions to load this region from a hashtable.

SaveRectHandleBJ=Save Rect Handle
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint=Use the 'Hashtable - Load Rect' actions to load this rect from a hashtable.

SaveBooleanExprHandleBJ=Save Boolexpr Handle
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint=Use the 'Hashtable - Load Boolexpr' actions to load this boolexpr from a hashtable.

SaveSoundHandleBJ=Save Sound Handle
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint=Use the 'Hashtable - Load Sound' actions to load this sound from a hashtable.

SaveEffectHandleBJ=Save Effect Handle
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint=Use the 'Hashtable - Load Effect' actions to load this effect from a hashtable.

SaveUnitPoolHandleBJ=Save Unitpool Handle
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~%s
SaveUnitPoolHandleBJHint=Use the 'Hashtable - Load Unitpool' actions to load this unitpool from a hashtable.

SaveItemPoolHandleBJ=Save Itempool Handle
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~%s
SaveItemPoolHandleBJHint=Use the 'Hashtable - Load Itempool' actions to load this itempool from a hashtable.

SaveQuestHandleBJ=Save Quest Handle
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint=Use the 'Hashtable - Load Quest' actions to load this quest from a hashtable.

SaveQuestItemHandleBJ=Save Questitem Handle
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint=Use the 'Hashtable - Load Questitem' actions to load this questitem from a hashtable.

SaveDefeatConditionHandleBJ=Save Defeatcondition Handle
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint=Use the 'Hashtable - Load Defeatcondition' actions to load this defeatcondition from a hashtable.

SaveTimerDialogHandleBJ=Save Timerdialog Handle
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint=Use the 'Hashtable - Load Timerdialog' actions to load this timerdialog from a hashtable.

SaveLeaderboardHandleBJ=Save Leaderboard Handle
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint=Use the 'Hashtable - Load Leaderboard' actions to load this leaderboard from a hashtable.

SaveMultiboardHandleBJ=Save Multiboard Handle
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint=Use the 'Hashtable - Load Multiboard' actions to load this multiboard from a hashtable.

SaveMultiboardItemHandleBJ=Save Multiboarditem Handle
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~%s
SaveMultiboardItemHandleBJHint=Use the 'Hashtable - Load Multiboarditem' actions to load this multiboarditem from a hashtable.

SaveTrackableHandleBJ=Save Trackable Handle
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~%s
SaveTrackableHandleBJHint=Use the 'Hashtable - Load Trackable' actions to load this trackable from a hashtable.

SaveGameCacheHandleBJ=Save Gamecache Handle
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint=Use the 'Hashtable - Load Gamecache' actions to load this gamecache from a hashtable.

SaveDialogHandleBJ=Save Dialog Handle
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint=Use the 'Hashtable - Load Dialog' actions to load this dialog from a hashtable.

SaveButtonHandleBJ=Save Button Handle
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint=Use the 'Hashtable - Load Button' actions to load this button from a hashtable.

SaveTextTagHandleBJ=Save Texttag Handle
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint=Use the 'Hashtable - Load Texttag' actions to load this texttag from a hashtable.

SaveLightningHandleBJ=Save Lightning Handle
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint=Use the 'Hashtable - Load Lightning' actions to load this lightning from a hashtable.

SaveImageHandleBJ=Save Image Handle
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint=Use the 'Hashtable - Load Image' actions to load this image from a hashtable.

SaveUbersplatHandleBJ=Save Ubersplat Handle
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint=Use the 'Hashtable - Load Ubersplat' actions to load this ubersplat from a hashtable.

SaveFogStateHandleBJ=Save Fogstate Handle
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint=Use the 'Hashtable - Load Fogstate' actions to load this fogstate from a hashtable.

SaveFogModifierHandleBJ=Save Fogmodifier Handle
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint=Use the 'Hashtable - Load Fogmodifier' actions to load this fogmodifier from a hashtable.

RestoreUnitLocFacingAngleBJ=Restore Unit Facing Angle
RestoreUnitLocFacingAngleBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Angle
RestoreUnitLocFacingAngleBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

RestoreUnitLocFacingPointBJ=Restore Unit Facing Point
RestoreUnitLocFacingPointBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Point
RestoreUnitLocFacingPointBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

ReloadGameCachesFromDisk=Reload All
ReloadGameCachesFromDisk="Reload all game cache data from disk"

FlushGameCacheBJ=Clear Game Cache
FlushGameCacheBJ="Clear ",~Game Cache
FlushGameCacheBJHint=Clears all labels of all categories in a game cache.

FlushStoredMissionBJ=Clear Category
FlushStoredMissionBJ="Clear all labels of ",~Category," in ",~Game Cache
FlushStoredMissionBJHint=Clears all labels of a specific category in a game cache.

FlushParentHashtableBJ=Clear Parent Hashtable
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint=Clears all parent and child hashtables.

FlushChildHashtableBJ=Clear Child Hashtable
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint=Clears all childen of a specific parent in a hashtable.

SelectHeroSkill=Learn Skill
SelectHeroSkill="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkillHint=This only works if the Hero has at least one skill point to spend.

SetHeroLevel=Set Level
SetHeroLevel="Set ",~Hero," Hero-level to ",~Level,", ",~Show/Hide," level-up graphics"

SetHeroXP=Set Experience
SetHeroXP="Set ",~Hero," experience to ",~Quantity,", ",~Show/Hide," level-up graphics"

AddHeroXPSwapped=Add Experience
AddHeroXPSwapped="Add ",~Quantity," experience to ",~Hero,", ",~Show/Hide," level-up graphics"

SuspendHeroXPBJ=Enable/Disable Experience Gain
SuspendHeroXPBJ=~Enable/Disable," experience gain for ",~Hero

SetPlayerHandicapXPBJ=Set Experience Rate
SetPlayerHandicapXPBJ="Make ",~Player," Heroes gain ",~Percent,"% experience from future kills"

ReviveHeroLoc=Revive (Instantly)
ReviveHeroLoc="Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive.

ModifyHeroStat=Modify Hero Attribute
ModifyHeroStat="Modify ",~Attribute," of ",~Hero,": ",~Modify," ",~Value

ModifyHeroSkillPoints=Modify Hero Skill Points
ModifyHeroSkillPoints="Modify unspent skill points of ",~Hero,": ",~Modify," ",~Value," points"

SetReservedLocalHeroButtons=Reserve Hero Buttons
SetReservedLocalHeroButtons="Reserve ",~Number," Hero buttons for the local player"
SetReservedLocalHeroButtonsHint=Button slots reserved by this action are not used by Heroes controlled via shared unit control.

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Give ",~Item," to ",~Hero

UnitAddItemByIdSwapped=Create Item For Hero
UnitAddItemByIdSwapped="Create ",~Item-Type," and give it to ",~Hero

UnitRemoveItemSwapped=Drop Item From Hero
UnitRemoveItemSwapped="Drop ",~Item," from ",~Hero
UnitRemoveItemSwappedHint=The item is removed from the Hero and placed on the ground at the Hero's feet.

UnitRemoveItemFromSlotSwapped=Drop Item From Hero Inventory Slot
UnitRemoveItemFromSlotSwapped="Drop the item from slot ",~Index," of ",~Hero
UnitRemoveItemFromSlotSwappedHint=If an item exists in the given slot, it is removed from the Hero and placed on the ground at the Hero's feet.

UnitUseItemTarget=Use Item On A Unit
UnitUseItemTarget="Order ",~Hero," to use ",~Item," on ",~Unit

UnitUseItemPointLoc=Use Item On A Point
UnitUseItemPointLoc="Order ",~Hero," to use ",~Item," on ",~Point

UnitUseItemDestructable=Use Item On A Destructible
UnitUseItemDestructable="Order ",~Hero," to use ",~Item," on ",~Destructible

UnitUseItem=Use Item
UnitUseItem="Order ",~Hero," to use ",~Item

CreateItemLoc=Create
CreateItemLoc="Create ",~Item," at ",~Point

RemoveItem=Remove
RemoveItem="Remove ",~Item

SetItemVisibleBJ=Show/Hide Item
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint=This hides items on the ground.  It does not affect items held by units.

SetItemPositionLoc=Move (Instantly)
SetItemPositionLoc="Move ",~Item," to ",~Point

SetItemLifeBJ=Set Life
SetItemLifeBJ="Set life of ",~Item," to ",~Value

SetItemCharges=Set Charges Remaining
SetItemCharges="Set charges remaining in ",~Item," to ",~Charges
SetItemChargesHint=Use a value of zero to give the item unlimited charges.

SetItemInvulnerableBJ=Make Invulnerable/Vulnerable
SetItemInvulnerableBJ="Make ",~Item," ",~Invulnerable/Vulnerable

SetItemPawnable=Make Pawnable
SetItemPawnable="Make ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint=A pawnable item can be sold at item vendors.

SetItemDroppableBJ=Make Undroppable
SetItemDroppableBJ="Make ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint=An undroppable item cannot be removed from a Hero's inventory once it has been picked up.

SetItemDropOnDeathBJ=Make Item Drop From Heroes Upon Death
SetItemDropOnDeathBJ="Make ",~Item," ",~Drop from/Stay with," Heroes upon death"

SetItemPlayerBJ=Change Owner
SetItemPlayerBJ="Change ownership of ",~Item," to ",~Player," and ",~Change/Retain Color
SetItemPlayerBJHint=Not all items are capable of changing color.

SetItemUserData=Set Custom Value
SetItemUserData="Set the custom value of ",~Item," to ",~Index
SetItemUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

EnumItemsInRectBJMultiple=Pick Every Item In Rect And Do Multiple Actions
EnumItemsInRectBJMultiple="Pick every item in ",~Rect," and do (Actions)"
EnumItemsInRectBJMultipleHint=Use 'Picked Item' to refer each item as it is picked.  This works for every item in the rect, including hidden items.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumItemsInRectBJ=Pick Every Item In Rect And Do Action
EnumItemsInRectBJ="Pick every item in ",~Rect," and do ",~Action
EnumItemsInRectBJHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function.

CreateImageBJ=Create
CreateImageBJ="Create an image using ",~Image," of size ",~Size," at ",~Point," with Z offset ",~Z," using image type ",~Type
CreateImageBJHint=Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly.

DestroyImage=Destroy
DestroyImage="Destroy ",~Image

ShowImageBJ=Show/Hide
ShowImageBJ=~Show/Hide," ",~Image

SetImageConstantHeight=Change Constant Height
SetImageConstantHeight="Change the height state of ",~Image," to ",~Enable/Disable," at ",~Height

SetImagePositionBJ=Change Position
SetImagePositionBJ="Change the position of ",~Image," to ",~Position," with Z offset ",~Z
SetImagePositionBJHint=The point specified is used as the bottom-left corner of the image.

SetImageColorBJ=Change Color
SetImageColorBJ="Change the color of ",~Image," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetImageColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetImageRender=Change Render State
SetImageRender="Change ",~Image,": ",~Enable/Disable," rendering state"

SetImageRenderAlways=Change Render Always State
SetImageRenderAlways="Change ",~Image,": ",~Enable/Disable," render always state"

SetImageAboveWater=Change Above Water State
SetImageAboveWater="Change ",~Image,": ",~Enable/Disable," above water state, ",~Enable/Disable," water alpha inheritance"

SetImageType=Change Type
SetImageType="Change type of ",~Image," to ",~Type

CreateLeaderboardBJ=Create
CreateLeaderboardBJ="Create a leaderboard for ",~Player Group," titled ",~Title
CreateLeaderboardBJHint=Leaderboards cannot be displayed at map initialization.  If no title is specified, the title line will not be displayed.

DestroyLeaderboardBJ=Destroy
DestroyLeaderboardBJ="Destroy ",~Leaderboard

LeaderboardSortItemsBJ=Sort
LeaderboardSortItemsBJ="Sort ",~Leaderboard," by ",~Field," in ",~Ascending/Descending," order"

LeaderboardDisplayBJ=Show/Hide
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint=Leaderboards cannot be displayed at map initialization.

LeaderboardSetLabelBJ=Change Title
LeaderboardSetLabelBJ="Change the title of ",~Leaderboard," to ",~Title

LeaderboardSetLabelColorBJ=Change Label Colors
LeaderboardSetLabelColorBJ="Change the color of all labels for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetValueColorBJ=Change Value Colors
LeaderboardSetValueColorBJ="Change the color of all values for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetStyleBJ=Change Style
LeaderboardSetStyleBJ="Change the display style for ",~Leaderboard," to ",~Show/Hide," the title, ",~Show/Hide," labels, ",~Show/Hide," values, and ",~Show/Hide," icons"

LeaderboardAddItemBJ=Add Player
LeaderboardAddItemBJ="Add ",~Player," to ",~Leaderboard," with label ",~Label," and value ",~Value

LeaderboardRemovePlayerItemBJ=Remove Player
LeaderboardRemovePlayerItemBJ="Remove ",~Player," from ",~Leaderboard

LeaderboardSetPlayerItemLabelBJ=Change Player Label
LeaderboardSetPlayerItemLabelBJ="Change the label for ",~Player," in ",~Leaderboard," to ",~Label

LeaderboardSetPlayerItemLabelColorBJ=Change Player Label Color
LeaderboardSetPlayerItemLabelColorBJ="Change the color of the label for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemValueBJ=Change Player Value
LeaderboardSetPlayerItemValueBJ="Change the value for ",~Player," in ",~Leaderboard," to ",~Value

LeaderboardSetPlayerItemValueColorBJ=Change Player Value Color
LeaderboardSetPlayerItemValueColorBJ="Change the color of the value for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemStyleBJ=Change Player Style
LeaderboardSetPlayerItemStyleBJ="Change the display style for ",~Player," in ",~Leaderboard," to ",~Show/Hide," the label, ",~Show/Hide," the value, and ",~Show/Hide," the icon"

AddLightningLoc=Create Lightning Effect
AddLightningLoc="Create a ",~Type," lightning effect from source ",~Point," to target ",~Point

DestroyLightningBJ=Destroy Lightning Effect
DestroyLightningBJ="Destroy ",~Lightning

MoveLightningLoc=Move Lightning Effect
MoveLightningLoc="Move ",~Lightning," to source ",~Point," and target ",~Point

SetLightningColorBJ=Set Lightning Effect Color
SetLightningColorBJ="Change color of ",~Lightning," to (",~Red," ",~Green," ",~Blue,") with ",~Alpha," alpha"
SetLightningColorBJHint=The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible.

MeleeStartingVisibility=Use Melee Time Of Day
MeleeStartingVisibility="Use melee time of day (for all players)"

MeleeStartingHeroLimit=Hero Limits
MeleeStartingHeroLimit="Limit Heroes to 1 per Hero-type (for all players)"

MeleeGrantHeroItems=Hero Starting Items
MeleeGrantHeroItems="Give trained Heroes a Scroll of Town Portal (for all players)"

MeleeStartingResources=Set Starting Resources
MeleeStartingResources="Set starting resources (for all players)"

MeleeClearExcessUnits=Remove Excess Units
MeleeClearExcessUnits="Remove creeps and critters from used start locations (for all players)"
MeleeClearExcessUnitsHint=Removes all Neutral Hostile units and non-building Neutral Passive units within a radius of 1024 around each used start location.

MeleeStartingUnits=Create Starting Units
MeleeStartingUnits="Create starting units (for all players)"

MeleeStartingAI=Run AI
MeleeStartingAI="Run melee AI scripts (for computer players)"
MeleeStartingAIHint=Players should have starting units and resources before this action is run.

MeleeInitVictoryDefeat=Victory/Defeat Conditions
MeleeInitVictoryDefeat="Enforce victory/defeat conditions (for all players)"
MeleeInitVictoryDefeatHint=Players should have starting units before this action is run.

MeleeStartingUnitsForPlayer=Create Starting Units For Player
MeleeStartingUnitsForPlayer="Create ",~Race," starting units for ",~Player," at ",~Point," (",~Include/Exclude," Heroes)"
MeleeStartingUnitsForPlayerHint=This action creates the same starting units that are created for melee games.

CreateMultiboardBJ=Create
CreateMultiboardBJ="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title
CreateMultiboardBJHint=Multiboards cannot be displayed at map initialization.

DestroyMultiboardBJ=Destroy
DestroyMultiboardBJ="Destroy ",~Multiboard

MultiboardDisplayBJ=Show/Hide
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint=Multiboards cannot be displayed at map initialization.

MultiboardAllowDisplayBJ=Show/Hide All Multiboards
MultiboardAllowDisplayBJ=~Show/Hide," all multiboards"

MultiboardMinimizeBJ=Minimize/Maximize
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint=A minimized multiboard will only display the title.

MultiboardClear=Clear
MultiboardClear="Clear ",~Multiboard
MultiboardClearHint=This will remove all rows and columns from the multiboard.

MultiboardSetTitleText=Change Title
MultiboardSetTitleText="Change the title of ",~Multiboard," to ",~Title

MultiboardSetTitleTextColorBJ=Change Title Color
MultiboardSetTitleTextColorBJ="Change the color of the title for ",~Multiboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetTitleTextColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetRowCount=Change Number Of Rows
MultiboardSetRowCount="Change the number of rows for ",~Multiboard," to ",~Rows

MultiboardSetColumnCount=Change Number Of Columns
MultiboardSetColumnCount="Change the number of columns for ",~Multiboard," to ",~Columns

MultiboardSetItemStyleBJ=Set Item Display Style
MultiboardSetItemStyleBJ="Set the display style for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Show/Hide," text and ",~Show/Hide," icons"
MultiboardSetItemStyleBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemValueBJ=Set Item Text
MultiboardSetItemValueBJ="Set the text for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Text
MultiboardSetItemValueBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemColorBJ=Set Item Color
MultiboardSetItemColorBJ="Set the color for ",~Multiboard," item in column ",~Column,", row ",~Row," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetItemColorBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetItemWidthBJ=Set Item Width
MultiboardSetItemWidthBJ="Set the width for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Width,"% of the total screen width"

MultiboardSetItemIconBJ=Set Item Icon
MultiboardSetItemIconBJ="Set the icon for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Icon File

AddResourceAmountBJ=Add Gold To Gold Mine
AddResourceAmountBJ="Add ",~Quantity," gold to ",~Gold Mine
AddResourceAmountBJHint=Use a negative number to subtract.

SetResourceAmount=Set Resources Of Gold Mine
SetResourceAmount="Set ",~Gold Mine," to ",~Quantity," gold"

BlightGoldMineForPlayer=Haunt Gold Mine (Instantly)
BlightGoldMineForPlayer="Haunt ",~Gold Mine," for ",~Player
BlightGoldMineForPlayerHint=This replaces the Gold Mine with a Haunted Gold Mine of equal resources.

WaygateActivateBJ=Enable/Disable Way Gate
WaygateActivateBJ=~Enable/Disable," ",~Way Gate

WaygateSetDestinationLocBJ=Set Way Gate Destination
WaygateSetDestinationLocBJ="Set ",~Way Gate," destination to ",~Target

SetAltMinimapIcon=Change Special Minimap Icon
SetAltMinimapIcon="Change the special minimap icon to ",~Image
SetAltMinimapIconHint=The image used for this action must be exactly 16x16 pixels in size.

UnitSetUsesAltIconBJ=Turn Special Minimap Icon On/Off
UnitSetUsesAltIconBJ="Turn special minimap icon ",~On/Off," for ",~Unit
UnitSetUsesAltIconBJHint=Use the 'Neutral Building - Change Special Minimap Icon' action to control the icon that is displayed.

AddItemToStockBJ=Add Item-Type (To Marketplace)
AddItemToStockBJ="Add ",~Item-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddItemToStockBJHint=This only affects a building if it has the 'Sell Items' ability.

AddItemToAllStock=Add Item-Type (To All Marketplaces)
AddItemToAllStock="Add ",~Item-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddItemToAllStockHint=This affects all buildings that have the 'Sell Items' ability.

AddUnitToStockBJ=Add Unit-Type (To Marketplace)
AddUnitToStockBJ="Add ",~Unit-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddUnitToStockBJHint=This only affects a building if it has the 'Sell Units' ability.

AddUnitToAllStock=Add Unit-Type (To All Marketplaces)
AddUnitToAllStock="Add ",~Unit-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddUnitToAllStockHint=This affects all buildings that have the 'Sell Units' ability.

RemoveItemFromStockBJ=Remove Item-Type (From Marketplace)
RemoveItemFromStockBJ="Remove ",~Item-Type," from ",~Marketplace
RemoveItemFromStockBJHint=This only affects a building if it has the 'Sell Items' ability.

RemoveItemFromAllStock=Remove Item-Type (From All Marketplaces)
RemoveItemFromAllStock="Remove ",~Item-Type," from all marketplaces"
RemoveItemFromAllStockHint=This affects all buildings that have the 'Sell Items' ability.

RemoveUnitFromStockBJ=Remove Unit-Type (From Marketplace)
RemoveUnitFromStockBJ="Remove ",~Unit-Type," from ",~Marketplace
RemoveUnitFromStockBJHint=This only affects a building if it has the 'Sell Units' ability.

RemoveUnitFromAllStock=Remove Unit-Type (From All Marketplaces)
RemoveUnitFromAllStock="Remove ",~Unit-Type," from all marketplaces"
RemoveUnitFromAllStockHint=This affects all buildings that have the 'Sell Units' ability.

SetItemTypeSlots=Limit Item Slots (Of Marketplace)
SetItemTypeSlots="Limit ",~Marketplace," to ",~Quantity," item slots"
SetItemTypeSlotsHint=This only affects a building if it has the 'Sell Items' ability.

SetAllItemTypeSlots=Limit Item Slots (Of All Marketplaces)
SetAllItemTypeSlots="Limit all marketplaces to ",~Quantity," item slots"
SetAllItemTypeSlotsHint=This affects all buildings that have the 'Sell Items' ability.

SetUnitTypeSlots=Limit Unit Slots (Of Marketplace)
SetUnitTypeSlots="Limit ",~Marketplace," to ",~Quantity," unit slots"
SetUnitTypeSlotsHint=This only affects a building if it has the 'Sell Units' ability.

SetAllUnitTypeSlots=Limit Unit Slots (Of All Marketplaces)
SetAllUnitTypeSlots="Limit all marketplaces to ",~Quantity," unit slots"
SetAllUnitTypeSlotsHint=This affects all buildings that have the 'Sell Units' ability.

SetPlayerState=Set Property
SetPlayerState="Set ",~Player," ",~Property," to ",~Value

AdjustPlayerStateBJ=Add Property
AdjustPlayerStateBJ="Add ",~Value," to ",~Player," ",~Property
AdjustPlayerStateBJHint=Use a negative number to subtract.

SetPlayerFlagBJ=Turn Player Flag On/Off
SetPlayerFlagBJ="Turn ",~Player Flag," ",~On/Off," for ",~Player

SetPlayerTaxRateBJ=Divert Player Income (Tax)
SetPlayerTaxRateBJ="Divert ",~Rate,"% of the ",~Resource," income of ",~Player," to ",~Player
SetPlayerTaxRateBJHint=Income lost in this way can be accessed using the 'Player Score' function with 'Gold/Lumber Lost To Tax' values.

EnableCreepSleepBJ=Enable/Disable Sleeping For All Creeps
EnableCreepSleepBJ=~Enable/Disable," sleeping for all creeps"
EnableCreepSleepBJHint=This affects nocturnal sleep, not magical sleep.

SetPlayerAllianceStateBJ=Set Alliance
SetPlayerAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetPlayerAllianceStateBJHint=Note that neutral player slots cannot share their vision.

SetPlayerAllianceBJ=Set Aspect Of Alliance
SetPlayerAllianceBJ="For ",~Player,", turn ",~Alliance Type," ",~On/Off," toward ",~Player
SetPlayerAllianceBJHint=This modifies one aspect of a player's alliance state, leaving others untouched.  Note that neutral player slots cannot share their vision.

SetPlayerAbilityAvailableBJ=Enable/Disable Ability
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~Ability," for ",~Player

SetPlayerUnitAvailableBJ=Set Training/Construction Availability Of Unit
SetPlayerUnitAvailableBJ="Make ",~Unit-Type," ",~Available/Unavailable," for training/construction by ",~Player
SetPlayerUnitAvailableBJHint=This determines whether or not a type of unit can be trained or constructed by a player.

SetPlayerUnitMaxAllowed=Limit Training Of Unit-Type
SetPlayerUnitMaxAllowed="Limit training of ",~Unit-Type," to ",~Limit," for ",~Player
SetPlayerUnitMaxAllowedHint=A limit of -1 allows unlimited training of the unit-type.  A limit of 0 makes the unit-type unavailable for training.

SetPlayerMaxHeroesAllowed=Limit Training Of Heroes
SetPlayerMaxHeroesAllowed="Limit training of Heroes to ",~Limit," for ",~Player
SetPlayerMaxHeroesAllowedHint=A limit of -1 allows unlimited training of Heroes.  A limit of 0 makes Heroes unavailable for training.

SetPlayerTechResearchedSwap=Set Current Research Level
SetPlayerTechResearchedSwap="Set the current research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechResearchedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.  Tech cannot be unlearned through the use of this action.

SetPlayerTechMaxAllowedSwap=Set Max Research Level
SetPlayerTechMaxAllowedSwap="Set the max research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechMaxAllowedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

SetPlayerColorBJ=Change Color
SetPlayerColorBJ="Change color of ",~Player," to ",~Color,", ",~Changing/Retaining color," of existing units"

SetPlayerHandicapBJ=Set Handicap
SetPlayerHandicapBJ="Set ",~Player," handicap to ",~Percent,"%"
SetPlayerHandicapBJHint=Handicaps apply to the max life of all units owned or created for the player.  Heroes are less affected by handicaps than non-Hero units.

SetPlayerOnScoreScreenBJ=Show/Hide In Score Screen
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," in the post-game score screen"

SetPlayerName=Set Name
SetPlayerName="Set name of ",~Player," to ",~Name

ForForceMultiple=Pick Every Player In Player Group And Do Multiple Actions
ForForceMultiple="Pick every player in ",~Player Group," and do (Actions)"
ForForceMultipleHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForForce=Pick Every Player In Player Group And Do Action
ForForce="Pick every player in ",~Player Group," and do ",~Action
ForForceHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.

ForceAddPlayerSimple=Add Player
ForceAddPlayerSimple="Add ",~Player," to ",~Player Group
ForceAddPlayerSimpleHint=This adds a player to a Player Group variable.  This does not affect the player.

ForceRemovePlayerSimple=Remove Player
ForceRemovePlayerSimple="Remove ",~Player," from ",~Player Group
ForceRemovePlayerSimpleHint=This removes a player from a Player Group variable.  This does not affect the player.

ForceClear=Clear
ForceClear="Remove all players from ",~Player Group
ForceClearHint=This removes all players from a Player Group variable.  This does not affect the players themselves.

SetForceAllianceStateBJ=Set Alliance
SetForceAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetForceAllianceStateBJHint=Note that neutral player slots cannot share their vision.

QuestMessageBJ=Quest Message
QuestMessageBJ="Display to ",~Player Group," the ",~Quest Message Type," message: ",~Message

CreateQuestBJ=Create Quest
CreateQuestBJ="Create a ",~Quest Type," quest titled ",~Title," with the description ",~Description,", using icon path ",~Icon Path

DestroyQuestBJ=Destroy Quest
DestroyQuestBJ="Destroy ",~Quest
DestroyQuestBJHint=Destroyed quests are removed from the quest log.

QuestSetEnabledBJ=Enable/Disable Quest
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint=Disabled quests are not displayed in the quest log.

QuestSetCompletedBJ=Mark Quest As Completed
QuestSetCompletedBJ="Mark ",~Quest," as ",~Completed/Incomplete

QuestSetFailedBJ=Mark Quest As Failed
QuestSetFailedBJ="Mark ",~Quest," as ",~Failed/Not Failed

QuestSetDiscoveredBJ=Mark Quest As Discovered
QuestSetDiscoveredBJ="Mark ",~Quest," as ",~Discovered/Undiscovered

QuestSetTitleBJ=Change Quest Title
QuestSetTitleBJ="Change the title of ",~Quest," to ",~Title

QuestSetDescriptionBJ=Change Quest Description
QuestSetDescriptionBJ="Change the description of ",~Quest," to ",~Description

CreateQuestItemBJ=Create Quest Requirement
CreateQuestItemBJ="Create a quest requirement for ",~Quest," with the description ",~Description

QuestItemSetCompletedBJ=Mark Quest Requirement As Completed
QuestItemSetCompletedBJ="Mark ",~Quest Requirement," as ",~Completed/Incomplete

QuestItemSetDescriptionBJ=Change Quest Requirement Description
QuestItemSetDescriptionBJ="Change the description of ",~Quest Requirement," to ",~Description

CreateDefeatConditionBJ=Create Defeat Condition
CreateDefeatConditionBJ="Create a defeat condition with the description ",~Description
CreateDefeatConditionBJHint=Defeat conditions are displayed for every quest.

DestroyDefeatConditionBJ=Destroy Defeat Condition
DestroyDefeatConditionBJ="Destroy ",~Defeat Condition
DestroyDefeatConditionBJHint=Destroyed defeat conditions are removed from the quest log.

DefeatConditionSetDescriptionBJ=Change Defeat Condition Description
DefeatConditionSetDescriptionBJ="Change the description of ",~Defeat Condition," to ",~Description

FlashQuestDialogButtonBJ=Flash Quest Dialog Button
FlashQuestDialogButtonBJ="Flash the quest dialog button"

MoveRectToLoc=Move
MoveRectToLoc="Center ",~Rect," on ",~Point
MoveRectToLocHint=This has no effect unless the specified rect is a variable.

ClearSelectionForPlayer=Clear Selection For Player
ClearSelectionForPlayer="Clear selection for ",~Player
ClearSelectionForPlayerHint=Forces a player to deselect all units.

SelectGroupForPlayerBJ=Select Unit Group For Player
SelectGroupForPlayerBJ="Select ",~Unit Group," for ",~Player
SelectGroupForPlayerBJHint=Forces a player to deselect all units and select up to 12 units of the unit group.

SelectUnitForPlayerSingle=Select Unit For Player
SelectUnitForPlayerSingle="Select ",~Unit," for ",~Player
SelectUnitForPlayerSingleHint=Forces a player to deselect all units and select only the given unit.

SelectUnitAddForPlayer=Add Unit To Selection For Player
SelectUnitAddForPlayer="Add ",~Unit," to selection for ",~Player
SelectUnitAddForPlayerHint=Forces a player to select the given unit in addition to whatever is already selected.

SelectUnitRemoveForPlayer=Remove Unit From Selection For Player
SelectUnitRemoveForPlayer="Remove ",~Unit," from selection for ",~Player
SelectUnitRemoveForPlayerHint=Forces a player to deselect the given unit, retaining the rest of the current selection.

ClearSelection=Clear
ClearSelection="Clear selection"
ClearSelectionHint=Deselect all units.

SelectGroupBJ=Select Unit Group
SelectGroupBJ="Select ",~Unit Group
SelectGroupBJHint=Deselects all units and selects up to 12 units of the unit group.

SelectUnitSingle=Select Unit
SelectUnitSingle="Select ",~Unit
SelectUnitSingleHint=Deselects all units and selects only the given unit.

SelectUnitAdd=Add Unit
SelectUnitAdd="Add ",~Unit," to selection"
SelectUnitAddHint=Selects the given unit in addition to whatever is already selected.

SelectUnitRemove=Remove Unit
SelectUnitRemove="Remove ",~Unit," from selection"
SelectUnitRemoveHint=Deselects the given unit, retaining the rest of the current selection.

PlaySoundBJ=Play Sound
PlaySoundBJ="Play ",~Sound
PlaySoundBJHint=Sounds cannot be played at map initialization.  Use the Sound Editor to create sound variables.  Note that a 3D sound must be positioned to be played.

PlaySoundAtPointBJ=Play Sound At Point
PlaySoundAtPointBJ="Play ",~3D Sound," at ",~Volume,"% volume, located at ",~Point," with Z offset ",~Z
PlaySoundAtPointBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundOnUnitBJ=Play Sound On Unit
PlaySoundOnUnitBJ="Play ",~3D Sound," at ",~Volume,"% volume, attached to ",~Unit
PlaySoundOnUnitBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundFromOffsetBJ=Play Sound From Offset
PlaySoundFromOffsetBJ="Play ",~Sound," at ",~Volume,"% volume, skipping the first ",~Offset," seconds"
PlaySoundFromOffsetBJHint=Sounds cannot be played at map initialization.  This should not be used on 3D sounds.

StopSoundBJ=Stop Sound
StopSoundBJ="Stop ",~Sound," ",~After Fading/Immediately

KillSoundWhenDoneBJ=Destroy Sound
KillSoundWhenDoneBJ="Destroy ",~Sound
KillSoundWhenDoneBJHint=If the sound is already playing, it will be destroyed upon finishing.

SetSoundVolumeBJ=Set Sound Volume
SetSoundVolumeBJ="Set volume of ",~Sound," to ",~Volume,"%"

SetSoundOffsetBJ=Skip To Sound Offset
SetSoundOffsetBJ="Skip to ",~Offset," seconds from the start of ",~Sound
SetSoundOffsetBJHint=This should only be used on sounds that are currently playing.  This should not be used on 3D sounds.

SetSoundDistanceCutoffBJ=Set Sound Cutoff Distance
SetSoundDistanceCutoffBJ="Set cutoff distance of ",~Sound," to ",~Distance

SetSoundPitchBJ=Set Sound Pitch
SetSoundPitchBJ="Set pitch of ",~Sound," to ",~Pitch

AttachSoundToUnitBJ=Attach 3D Sound To Unit
AttachSoundToUnitBJ="Attach ",~3D Sound," to ",~Unit
AttachSoundToUnitBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundPositionLocBJ=Set 3D Sound Position
SetSoundPositionLocBJ="Set position of ",~3D Sound," to ",~Point," with Z offset ",~Z
SetSoundPositionLocBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundDistances=Set 3D Sound Distances
SetSoundDistances="Set ",~3D Sound," distances to ",~Distance," minimum and ",~Distance," maximum"
SetSoundDistancesHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetStackedSoundBJ=Add/Remove 3D Sound Across Rect
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," across ",~Rect
SetStackedSoundBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetAmbientDaySound=Use Daytime Ambient Theme
SetAmbientDaySound="Use the ",~Theme," daytime ambient theme"

SetAmbientNightSound=Use Nighttime Ambient Theme
SetAmbientNightSound="Use the ",~Theme," nighttime ambient theme"

EnableDawnDusk=Enable/Disable Dawn And Dusk Sounds
EnableDawnDusk=~Enable/Disable," dawn and dusk sounds"

SetMapMusicIndexedBJ=Set Music List (Using A Specific Initial Song)
SetMapMusicIndexedBJ="Set the music list to ",~Music,", starting with song ",~Index
SetMapMusicIndexedBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

SetMapMusicRandomBJ=Set Music List (Using A Random Initial Song)
SetMapMusicRandomBJ="Set the music list to ",~Music,", starting with a random song"
SetMapMusicRandomBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

ClearMapMusicBJ=Clear Music List
ClearMapMusicBJ="Clear the music list"
ClearMapMusicBJHint=Clearing the music list will cause music to cease after the currently playing music ends.

PlayMusicBJ=Play Music
PlayMusicBJ="Play ",~Music

PlayMusicExBJ=Play Music From Offset
PlayMusicExBJ="Play ",~Music,", skipping the first ",~Offset," seconds and fading in over ",~Fade Time," seconds"

PlayThematicMusicBJ=Play Music Theme
PlayThematicMusicBJ="Play ",~Music Theme
PlayThematicMusicBJHint=This will play a music theme once, and then resume the game music.

PlayThematicMusicExBJ=Play Music Theme From Offset
PlayThematicMusicExBJ="Play ",~Music Theme,", skipping the first ",~Offset," seconds"
PlayThematicMusicExBJHint=This will play a music theme once, and then resume the game music.

EndThematicMusicBJ=Stop Music Theme
EndThematicMusicBJ="Stop the currently playing music theme"

StopMusicBJ=Stop Music
StopMusicBJ="Stop music ",~After Fading/Immediately

ResumeMusicBJ=Resume Music
ResumeMusicBJ="Resume music"

SetMusicVolumeBJ=Set Music Volume
SetMusicVolumeBJ="Set music volume to ",~Volume,"%"

SetMusicOffsetBJ=Skip To Music Offset
SetMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music"

SetThematicMusicOffsetBJ=Skip To Music Theme Offset
SetThematicMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music theme"

VolumeGroupSetVolumeBJ=Set Volume Channel
VolumeGroupSetVolumeBJ="Set ",~Volume Channel," to ",~Volume,"%"

SetCineModeVolumeGroupsBJ=Set All Volume Channels For Cinematics
SetCineModeVolumeGroupsBJ="Setup all volume channels for cinematics"
SetCineModeVolumeGroupsBJHint=This uses the same volume channel settings as the 'Cinematic - Cinematic Mode' action.

SetSpeechVolumeGroupsBJ=Set All Volume Channels For Speech
SetSpeechVolumeGroupsBJ="Setup all volume channels for speech"

VolumeGroupResetBJ=Reset All Volume Channels
VolumeGroupResetBJ="Reset all volume channels to 100%"

AddSpecialEffectLocBJ=Create Special Effect At Point
AddSpecialEffectLocBJ="Create a special effect at ",~Point," using ",~Model File

AddSpecialEffectTargetUnitBJ=Create Special Effect On Unit
AddSpecialEffectTargetUnitBJ="Create a special effect attached to the ",~Attachment Point," of ",~Unit," using ",~Model File

DestroyEffectBJ=Destroy Special Effect
DestroyEffectBJ="Destroy ",~Special Effect

DisableTrigger=Turn Off
DisableTrigger="Turn off ",~Trigger
DisableTriggerHint=Does not interrupt existing executions of the trigger, but prevents future executions.

EnableTrigger=Turn On
EnableTrigger="Turn on ",~Trigger
EnableTriggerHint=Allows the trigger to be executed.

ConditionalTriggerExecute=Run (Checking Conditions)
ConditionalTriggerExecute="Run ",~Trigger," (checking conditions)"
ConditionalTriggerExecuteHint=Runs the trigger's actions if its conditions are true.

TriggerExecute=Run (Ignoring Conditions)
TriggerExecute="Run ",~Trigger," (ignoring conditions)"
TriggerExecuteHint=Runs the trigger's actions while ignoring events and conditions.

QueuedTriggerAddBJ=Add To Trigger Queue
QueuedTriggerAddBJ="Add ",~Trigger," to the trigger queue (",~Checking/Ignoring," conditions)"
QueuedTriggerAddBJHint=Triggers added to the trigger queue are executed one at a time, in turn.  Triggers added in this manner should remove themselves using 'Trigger - Remove From Queue'.

QueuedTriggerRemoveBJ=Remove From Trigger Queue
QueuedTriggerRemoveBJ="Remove ",~Trigger," from the trigger queue"
QueuedTriggerRemoveBJHint=If a trigger is already running via the trigger queue, removing it will allow the next trigger in the trigger queue to run, but will not stop the trigger itself from finishing its execution.

QueuedTriggerClearBJ=Clear Trigger Queue
QueuedTriggerClearBJ="Clear the trigger queue"
QueuedTriggerClearBJHint=This will remove all triggers from the trigger queue.

QueuedTriggerClearInactiveBJ=Clear Trigger Queue Of Pending Triggers
QueuedTriggerClearInactiveBJ="Clear all pending triggers from the trigger queue"
QueuedTriggerClearInactiveBJHint=This will remove all pending triggers from the trigger queue.  If a trigger is currently running in the queue, it will not be removed.

AddTriggerEvent=Add New Event
AddTriggerEvent="Add to ",~Trigger," the event ",~Event

CreateNUnitsAtLoc=Create Units Facing Angle
CreateNUnitsAtLoc="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreateNUnitsAtLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateNUnitsAtLocFacingLocBJ=Create Units Facing Point
CreateNUnitsAtLocFacingLocBJ="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Point
CreateNUnitsAtLocFacingLocBJHint=Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateCorpseLocBJ=Create Corpse
CreateCorpseLocBJ="Create a ",~Unit," corpse for ",~Player," at ",~Point
CreateCorpseLocBJHint=Not all units have corpse forms.  Use 'Last Created Unit' to refer to this unit.

CreatePermanentCorpseLocBJ=Create Permanent Corpse
CreatePermanentCorpseLocBJ="Create a permanent ",~Style," ",~Unit," corpse for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreatePermanentCorpseLocBJHint=Fleshy corpses will often appear skeletal for the first 8 seconds of their existence.

KillUnit=Kill
KillUnit="Kill ",~Unit

RemoveUnit=Remove
RemoveUnit="Remove ",~Unit," from the game"
RemoveUnitHint=Leaves no corpse.  If used on a Hero, that Hero cannot be resurrected.

ExplodeUnitBJ=Explode
ExplodeUnitBJ="Explode ",~Unit

ReplaceUnitBJ=Replace
ReplaceUnitBJ="Replace ",~Unit," with a ",~Unit-Type," using ",~Property Usage," life and mana"
ReplaceUnitBJHint=Use 'Last Replaced Unit' to refer to the replacement unit.  Note that any variables referring to the old unit will need to be updated.  Replacing a Haunted Gold Mine will usually yield a normal Gold Mine in addition to the replacement unit.

ShowUnitHide=Hide
ShowUnitHide="Hide ",~Unit
ShowUnitHideHint=Use the 'Unhide Unit' action to show a unit.  Hidden units do not show up in 'Units In Rect' queries.

ShowUnitShow=Unhide
ShowUnitShow="Unhide ",~Unit
ShowUnitShowHint=Use the 'Hide Unit' action to hide a unit.  Hidden units do not show up in 'Units In Rect' queries.

SetUnitColor=Change Color
SetUnitColor="Change color of ",~Unit," to ",~Color
SetUnitColorHint=Changing a unit's color does not change the unit's ownership.

SetUnitOwner=Change Owner
SetUnitOwner="Change ownership of ",~Unit," to ",~Player," and ",~Change/Retain Color

UnitShareVisionBJ=Shared Vision
UnitShareVisionBJ=~Grant/Deny," shared vision of ",~Unit," to ",~Player
UnitShareVisionBJHint=Note that neutral player slots cannot share their vision.

SetUnitPositionLoc=Move Unit (Instantly)
SetUnitPositionLoc="Move ",~Unit," instantly to ",~Point

SetUnitPositionLocFacingBJ=Move Unit And Face Angle (Instantly)
SetUnitPositionLocFacingBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Direction," degrees"
SetUnitPositionLocFacingBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.

SetUnitPositionLocFacingLocBJ=Move Unit And Face Point (Instantly)
SetUnitPositionLocFacingLocBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Point

SetUnitRallyPoint=Set Rally-Point To Point
SetUnitRallyPoint="Set Rally-Point for ",~Unit," to ",~Point

SetUnitRallyUnit=Set Rally-Point To Unit
SetUnitRallyUnit="Set Rally-Point for ",~Unit," to ",~Unit

SetUnitRallyDestructable=Set Rally-Point To Destructible
SetUnitRallyDestructable="Set Rally-Point for ",~Unit," to ",~Destructible

SetUnitLifePercentBJ=Set Life (To Percentage)
SetUnitLifePercentBJ="Set life of ",~Unit," to ",~Percent,"%"

SetUnitManaPercentBJ=Set Mana (To Percentage)
SetUnitManaPercentBJ="Set mana of ",~Unit," to ",~Percent,"%"

SetUnitLifeBJ=Set Life (To Value)
SetUnitLifeBJ="Set life of ",~Unit," to ",~Value

SetUnitManaBJ=Set Mana (To Value)
SetUnitManaBJ="Set mana of ",~Unit," to ",~Value

SetUnitInvulnerable=Make Invulnerable/Vulnerable
SetUnitInvulnerable="Make ",~Unit," ",~Invulnerable/Vulnerable

PauseUnitBJ=Pause/Unpause
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.

PauseAllUnitsBJ=Pause/Unpause All Units
PauseAllUnitsBJ=~Pause/Unpause," all units"
PauseAllUnitsBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.  This action only affects units that exist when this action is run.

UnitPauseTimedLifeBJ=Pause/Unpause Expiration Timer
UnitPauseTimedLifeBJ=~Pause/Unpause," the expiration timer for ",~Unit
UnitPauseTimedLifeBJHint=Only summoned units have expiration timers.

UnitApplyTimedLifeBJ=Add Expiration Timer
UnitApplyTimedLifeBJ="Add a ",~Duration," second ",~Buff Type," expiration timer to ",~Unit

SetUnitExplodedBJ=Make Unit Explode On Death
SetUnitExplodedBJ="Make ",~Unit," ",~Explode/Die Normally," on death"

UnitSuspendDecayBJ=Suspend Corpse Decay
UnitSuspendDecayBJ=~Suspend/Resume," corpse decay for ",~Unit
UnitSuspendDecayBJHint=This only works on corpses, and only after the corpses' death animations have finished.

UnitResetCooldown=Reset Ability Cooldowns
UnitResetCooldown="Reset ability cooldowns for ",~Unit
UnitResetCooldownHint=This makes all of the unit's abilities available for use again almost immediately.

UnitSetConstructionProgress=Set Building Construction Progress
UnitSetConstructionProgress="Set ",~Building," construction progress to ",~Progress,"%"
UnitSetConstructionProgressHint=This should only be used on buildings that are currently under construction.

UnitSetUpgradeProgress=Set Building Upgrade Progress
UnitSetUpgradeProgress="Set ",~Building," upgrade progress to ",~Progress,"%"
UnitSetUpgradeProgressHint=This should only be used on buildings that are currently being upgraded.  This does not affect research-based upgrades.

UnitAddSleepPerm=Make Unit Sleep
UnitAddSleepPerm="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked"
UnitAddSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitSetCanSleepBJ=Make Unit Sleep At Night
UnitSetCanSleepBJ="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked at night"
UnitSetCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitWakeUpBJ=Wake Up
UnitWakeUpBJ="Wake up ",~Unit
UnitWakeUpBJHint=This affects nocturnal sleep, not magical sleep.

UnitGenerateAlarms=Turn Alarm Generation On/Off
UnitGenerateAlarms="Turn alarm generation for ",~Unit," ",~On/Off
UnitGenerateAlarmsHint=This only affects buildings.

RescueUnitBJ=Rescue Unit
RescueUnitBJ="Rescue ",~Unit," for ",~Player," and ",~Change/Retain Color

MakeUnitRescuableToForceBJ=Make Rescuable
MakeUnitRescuableToForceBJ="Make ",~Unit," ",~Rescuable/Unrescuable," by ",~Player Group

SetUnitRescueRange=Set Rescue Range
SetUnitRescueRange="Limit rescue events for ",~Unit," to a range of ",~Range
SetUnitRescueRangeHint=To make a unit rescuable, use 'Unit - Make Rescuable' or set the unit's owner to 'Rescuable'.

SetRescueUnitColorChangeBJ=Set Rescue Behavior For Units
SetRescueUnitColorChangeBJ="Make units ",~Change/Retain Color," when rescued"
SetRescueUnitColorChangeBJHint=By default, units owned by 'Rescuable' players do not change color when rescued.  This action does not affect units that have already been rescued.

SetRescueBuildingColorChangeBJ=Set Rescue Behavior For Buildings
SetRescueBuildingColorChangeBJ="Make buildings ",~Change/Retain Color," when rescued"
SetRescueBuildingColorChangeBJHint=By default, buildings owned by 'Rescuable' players change color when rescued.  This action does not affect buildings that have already been rescued.

SetUnitUseFoodBJ=Enable/Disable Supply Usage
SetUnitUseFoodBJ=~Enable/Disable," supply usage for ",~Unit

SetUnitFacingToFaceUnitTimed=Make Unit Face Unit
SetUnitFacingToFaceUnitTimed="Make ",~Unit," face ",~Unit," over ",~Time," seconds"
SetUnitFacingToFaceUnitTimedHint=Forces a unit to face another unit.  This only works if the source unit is not moving at the time.

SetUnitFacingToFaceLocTimed=Make Unit Face Point
SetUnitFacingToFaceLocTimed="Make ",~Unit," face ",~Point," over ",~Time," seconds"
SetUnitFacingToFaceLocTimedHint=Forces a unit to face a point.  This only works if the source unit is not moving at the time.

SetUnitFacingTimed=Make Unit Face Angle
SetUnitFacingTimed="Make ",~Unit," face ",~Angle," over ",~Time," seconds"
SetUnitFacingTimedHint=Forces a unit to face a directional angle, expected in degrees, with 0 being east.  This only works if the source unit is not moving at the time.

SetUnitMoveSpeed=Set Movement Speed
SetUnitMoveSpeed="Set ",~Unit," movement speed to ",~Speed
SetUnitMoveSpeedHint=Common movement speeds range from 150 to 300.

SetUnitPathing=Turn Collision On/Off
SetUnitPathing="Turn collision for ",~Unit," ",~On/Off
SetUnitPathingHint=Collision-disabled units ignore obstacles, but are still themselves treated as obstacles.

SetUnitAcquireRangeBJ=Set Acquisition Range
SetUnitAcquireRangeBJ="Set ",~Unit," acquisition range to ",~Range
SetUnitAcquireRangeBJHint=The acquisition range of a unit is the distance at which the unit acquires targets to attack.

SetUnitUserData=Set Custom Value
SetUnitUserData="Set the custom value of ",~Unit," to ",~Index
SetUnitUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

UnitRemoveBuffsBJ=Remove Buffs
UnitRemoveBuffsBJ="Remove ",~Buff Type," buffs from ",~Unit

UnitRemoveBuffsExBJ=Remove Buffs By Type
UnitRemoveBuffsExBJ="Remove ",~Buff Type," buffs considered ",~Buff Resist," from ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

UnitRemoveBuffBJ=Remove Specific Buff
UnitRemoveBuffBJ="Remove ",~Buff," buff from ",~Unit

UnitAddAbilityBJ=Add Ability
UnitAddAbilityBJ="Add ",~Ability," to ",~Unit

UnitRemoveAbilityBJ=Remove Ability
UnitRemoveAbilityBJ="Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent.

UnitAddTypeBJ=Add Classification
UnitAddTypeBJ="Add classification of ",~Classification," to ",~Unit
UnitAddTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

UnitRemoveTypeBJ=Remove Classification
UnitRemoveTypeBJ="Remove classification of ",~Classification," from ",~Unit
UnitRemoveTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

IssueTargetOrder=Issue Order Targeting A Unit
IssueTargetOrder="Order ",~Unit," to ",~Order," ",~Unit

IssuePointOrderLoc=Issue Order Targeting A Point
IssuePointOrderLoc="Order ",~Unit," to ",~Order," ",~Point

IssueTargetDestructableOrder=Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Order ",~Unit," to ",~Order," ",~Destructible

IssueTargetItemOrder=Issue Order Targeting An Item
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item

IssueImmediateOrder=Issue Order With No Target
IssueImmediateOrder="Order ",~Unit," to ",~Order

IssueTrainOrderByIdBJ=Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.

IssueUpgradeOrderByIdBJ=Issue Research Order
IssueUpgradeOrderByIdBJ="Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action.

IssueBuildOrderByIdLocBJ=Issue Build Order
IssueBuildOrderByIdLocBJ="Order ",~Unit," to build a ",~Unit-Type," at ",~Point

UnitDropItemPointLoc=Issue Drop Item Order
UnitDropItemPointLoc="Order ",~Unit," to drop ",~Item," at ",~Point

UnitDropItemSlotBJ=Issue Move Item In Inventory Order
UnitDropItemSlotBJ="Order ",~Unit," to move ",~Item," to inventory slot ",~Index
UnitDropItemSlotBJHint=This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped.

UnitDropItemTargetBJ=Issue Give Item Order
UnitDropItemTargetBJ="Order ",~Unit," to give ",~Item," to ",~Unit

UnitDamagePointLoc=Damage Area
UnitDamagePointLoc="Cause ",~Unit," to damage circular area after ",~Seconds," seconds of radius ",~Size," at ",~Location,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamagePointLocHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

UnitDamageTargetBJ=Damage Target
UnitDamageTargetBJ="Cause ",~Unit," to damage ",~Target,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamageTargetBJHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

DecUnitAbilityLevelSwapped=Decrease Level Of Ability For Unit
DecUnitAbilityLevelSwapped="Decrease level of ",~Ability," for ",~Unit
DecUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

IncUnitAbilityLevelSwapped=Increase Level Of Ability For Unit
IncUnitAbilityLevelSwapped="Increase level of ",~Ability," for ",~Unit
IncUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

SetUnitAbilityLevelSwapped=Set Level Of Ability For Unit
SetUnitAbilityLevelSwapped="Set level of ",~Ability," for ",~Unit," to ",~Level
SetUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

ForGroupMultiple=Pick Every Unit In Unit Group And Do Multiple Actions
ForGroupMultiple="Pick every unit in ",~Unit Group," and do (Actions)"
ForGroupMultipleHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForGroup=Pick Every Unit In Unit Group And Do Action
ForGroup="Pick every unit in ",~Unit Group," and do ",~Action
ForGroupHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.

GroupAddUnitSimple=Add Unit
GroupAddUnitSimple="Add ",~Unit," to ",~Unit Group
GroupAddUnitSimpleHint=This adds a unit to a Unit Group variable.  This does not affect the unit itself.

GroupAddGroup=Add Unit Group
GroupAddGroup="Add all units of ",~Unit Group," to ",~Unit Group
GroupAddGroupHint=This adds all units of a unit group to a Unit Group variable.  This does not affect the units themselves.

GroupRemoveUnitSimple=Remove Unit
GroupRemoveUnitSimple="Remove ",~Unit," from ",~Unit Group
GroupRemoveUnitSimpleHint=This removes a unit from a Unit Group variable.  This does not affect the unit itself.

GroupRemoveGroup=Remove Unit Group
GroupRemoveGroup="Remove all units of ",~Unit Group," from ",~Unit Group
GroupRemoveGroupHint=This removes all units of a unit group from a Unit Group variable.  This does not affect the units themselves.

GroupClear=Clear
GroupClear="Remove all units from ",~Unit Group
GroupClearHint=This removes all units from a Unit Group variable.  This does not affect the units themselves.

GroupTargetOrder=Issue Order Targeting A Unit
GroupTargetOrder="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game.

GroupPointOrderLoc=Issue Order Targeting A Point
GroupPointOrderLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetDestructableOrder=Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetItemOrder=Issue Order Targeting An Item
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupImmediateOrder=Issue Order With No Target
GroupImmediateOrder="Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTrainOrderByIdBJ=Issue Train Order
GroupTrainOrderByIdBJ="Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group.

CreateUbersplatBJ=Create
CreateUbersplatBJ="Create ubersplat at ",~Location," of type ",~Type," with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency (",~Enable/Disable," paused state, ",~Enble/Disable," skipping birth time)"
CreateUbersplatBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Ubersplat - Change Render Always State' to toggle display of this ubersplat.  By default, ubersplats are not rendered.

DestroyUbersplat=Destroy
DestroyUbersplat="Destroy ",~Ubersplat

ResetUbersplat=Reset
ResetUbersplat="Reset ",~Ubersplat

FinishUbersplat=Finish
FinishUbersplat="Finish ",~Ubersplat

ShowUbersplatBJ=Show/Hide
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat

SetUbersplatRender=Change Render State
SetUbersplatRender="Change ",~Ubersplat,": ",~Enable/Disable," render state"

SetUbersplatRenderAlways=Change Render Always State
SetUbersplatRenderAlways="Change ",~Ubersplat,": ",~Enable/Disable," render always state"

FogEnableOn=Enable Fog Of War
FogEnableOn="Enable fog of war"

FogEnableOff=Disable Fog Of War
FogEnableOff="Disable fog of war"

FogMaskEnableOn=Enable Black Mask
FogMaskEnableOn="Enable black mask"

FogMaskEnableOff=Disable Black Mask
FogMaskEnableOff="Disable black mask"

CreateFogModifierRectBJ=Create Visibility Modifier Rect
CreateFogModifierRectBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," across ",~Rect

CreateFogModifierRadiusLocBJ=Create Visibility Modifier Circle
CreateFogModifierRadiusLocBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," from ",~Point," to a radius of ",~Radius

FogModifierStart=Enable Visibility Modifier
FogModifierStart="Enable ",~Visibility Modifier

FogModifierStop=Disable Visibility Modifier
FogModifierStop="Disable ",~Visibility Modifier

DestroyFogModifier=Destroy Visibility Modifier
DestroyFogModifier="Destroy ",~Visibility Modifier

DestroyTimer=Destroy
DestroyTimer="Destroy ",~Timer
DestroyTimerHint=Removes a timer from memory. Always destroy no longer needed timers. [UMSWE]

DialogDestroy=Destroy
DialogDestroy="Destroy ",~Dialog
DialogDestroyHint=Removes a dialog from memory. Always destroy no longer needed dialogs. [UMSWE]

DestroyForce=Destroy
DestroyForce="Destroy ",~Force
DestroyForceHint=Removes a Player Group from memory. Always destroy no longer needed Player Groups. [UMSWE]

DestroyGroup=Destroy Unit Group
DestroyGroup="Destroy unit group ",~Group
DestroyGroupHint=Destroy unit groups you don't need any mor to save memory [UMSWE]

DestroyTrigger=Destroy
DestroyTrigger="Destroy ",~Trigger
DestroyTriggerHint=Destroys a trigger [UMSWE]

RemoveRegion=Remove Region
RemoveRegion="Remove ",~Region
RemoveRegionHint=Use this to delete a region to save memory. The variable itself will remain without data [UMSWE]

MultiboardSetItemsValueColor=All Items - Set Item Lable Color
MultiboardSetItemsValueColor="Set item lable color for all items of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemsValueColorHint=Changes the color of all items. The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

MultiboardSetItemValueColor=Set Item Lable Color
MultiboardSetItemValueColor="Set item lable color for multiboard item ",~Item," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemValueColorHint=The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

AddLightningEx=Create Lightning Effect (Advanced)
AddLightningEx="Create a ",~Type,", ",~Visibility," lightning effect from source (",~X1,",",~Y1,",",~Z1,") to target (",~X2,",",~Y2,",",~Z2,") "
AddLightningExHint=Use coordinates, Z values are elevation [UMSWE]

MoveLightningEx=Move Lightning Effect (Advanced)
MoveLightningEx="Make ",~Bolt," ",~Boolean," and move it to reach from (",~X1,",",~Y1,",",~Z1,") to (",~X2,",",~Y2,",",~Z2,") "
MoveLightningExHint=Use coordinates, Z values are elevation [UMSWE]

SetHeroAgi=Set Hero Agility
SetHeroAgi="Set Agility of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroAgiHint=Changes the hero's agility [UMSWE]

SetHeroInt=Set Hero Intelligence
SetHeroInt="Set Intelligence of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroIntHint=Changes the hero's Intelligence [UMSWE]

SetHeroStr=Set Hero Strength
SetHeroStr="Set Strength of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroStrHint=Changes the hero's strength [UMSWE]

GroupTargetOrderBJ=Issue Order Targeting A Unit (takes string)
GroupTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetOrderById=Issue Order Targeting A Unit (takes ordercode)
GroupTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderBJ=Issue Order Targeting An Item (takes string)
GroupItemTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderById=Issue Order Targeting An Item (takes ordercode)
GroupItemTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLocBJ=Issue Order Targeting A Point (takes string)
GroupPointOrderLocBJ="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupPointOrderByIdLoc=Issue Order Targeting A Point (takes ordercode)
GroupPointOrderByIdLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderByIdLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetDestructableOrderS=Issue Order Targeting A Destructible (takes string)
GroupTargetDestructableOrderS="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderSHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderByIdD=Issue Order Targeting A Destructible (takes ordercode)
GroupTargetOrderByIdD="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetOrderByIdDHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderBJ=Issue Order With No Target (takes string)
GroupImmediateOrderBJ="Order ",~Unit Group," to ",~Order
GroupImmediateOrderBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderById=Issue Order With No Target (takes ordercode)
GroupImmediateOrderById="Order ",~Unit Group," to ",~Order
GroupImmediateOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupEnumUnitsOfType=Add Units of Type to Group
GroupEnumUnitsOfType="Take group ",~group," and add all units of type ",~unitname," matching condition ",~Condition
GroupEnumUnitsOfTypeHint=Use the names in the 6th column in UnitUI.slk as unitnames [UMSWE]

GroupEnumUnitsOfTypeCounted=Add Number Of Units Of Type
GroupEnumUnitsOfTypeCounted="To ",~Group" add units of type ","",~Type," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsOfTypeCountedHint=For the type use the unit names of the 6th column in UnitUI.slk [UMSWE]

GroupEnumUnitsOfPlayer=Add Units Of Player
GroupEnumUnitsOfPlayer="To ",~Group," add units of player ",~Player," matching ",~Condition
GroupEnumUnitsOfPlayerHint=[UMSWE]

GroupEnumUnitsInRect=Add Units In Rect
GroupEnumUnitsInRect="To ",~Group," add units in ",~Rect," matching ",~Condition
GroupEnumUnitsInRectHint=[UMSWE]

GroupEnumUnitsInRectCounted=Add Number Of Units In Rect
GroupEnumUnitsInRectCounted="To ",~Group," add units in ",~Rect," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRectCountedHint=[UMSWE]

GroupEnumUnitsInRangeOfLoc=Add Units in Range of Point
GroupEnumUnitsInRangeOfLoc="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition
GroupEnumUnitsInRangeOfLocHint=[UMSWE]

GroupEnumUnitsInRangeOfLocCounted=Add Number of Units in Range of Point
GroupEnumUnitsInRangeOfLocCounted="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRangeOfLocCountedHint=[UMSWE]

GroupEnumUnitsSelected=Add Units Selected by Player
GroupEnumUnitsSelected="To ",~Group," add units selected by ",~Player," matching ",~Condition
GroupEnumUnitsSelectedHint=[UMSWE]

SetPlayerTechMaxAllowed=Set Max Number Of Units by Type
SetPlayerTechMaxAllowed="For ",~Player,", set the maximun number of ",~Unit-Type," to ",~Number
SetPlayerTechMaxAllowedHint=Just here for COMPATIBILITY reasons. Use the specific functions provided by blizzard instead. [UMSWE]

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey: ",~Key
DialogAddButtonHint=Use ASCII numbers for the hotkey number [UMSWE]

DialogAddQuitButton=Create Quit Button
DialogAddQuitButton="Create a quit button for dialog ",~Dialog," (",~Show," score screen) labeled ",~Text," and use the shortcut ",~ASCII
DialogAddQuitButtonHint=Use ASCII numbers to add a shortcut [UMSWE]

DisplayTextToPlayer=Text Message to Player (Auto-Timed)
DisplayTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") the text: ",~Text
DisplayTextToPlayerHint=The text is shown for an amount of time that automatically increases with the text length. The offset is the X,Y position on the screen. [UMSWE]

DisplayTimedTextToPlayer=Text Message to Player (Explicitly Timed)
DisplayTimedTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") for ",~Time," seconds the text: ",~Text
DisplayTimedTextToPlayerHint=The offset is the X,Y position on the screen. [UMSWE]

EnumItemsInRect=Pick Every Item In Rect Matching Condition And Do Action
EnumItemsInRect="Pick every item in ",~Rect," matching ",~Condition," and do ",~Action
EnumItemsInRectHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function. [UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

SelectHeroSkill2=Learn Skill (Takes Abilcode)
SelectHeroSkill2="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkill2Hint=This only works if the Hero has at least one skill point to spend. [UMSWE]

TimerStart=Start Timer (With Callback)
TimerStart="Start ",~Timer," lasting ",~Time," and ",~Repeat," and execute ",~Action," when it expires"
TimerStartHint=[UMSWE]

PlayCinematic=Play Movie
PlayCinematic="Play the cinematic movie called ",~name
PlayCinematicHint=The Movie must be in the Movies folder of Warcraft and in the same format as the other movies. String without .mpq 

RandomDistAddItem=Add Item To Random Item Pool
RandomDistAddItem="Add the item type ",~id," to the pool and give it a chance of ",~percent," to be chosen"
RandomDistAddItemHint=Use 'Get Random Item From Pool' to use your own item pool, the chances of all items added to the pool are summed up to calculate the final chance [UMSWE]

RandomDistReset=Reset Random Item Pool
RandomDistReset="Reset your own pool for random items"
RandomDistResetHint=[UMSWE]

SetUnitLookAtS=Lock Body-Part Facing (Takes String)
SetUnitLookAtS="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtSHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet. Use this to specify any bone by it's name. [UMSWE]

UnitApplyTimedLifeB=Apply Life Timer (takes buffcode)
UnitApplyTimedLifeB="Set timed life for unit ",~Unit," with buff ID ",~Buff Type," and duration ",~Integer," seconds"
UnitApplyTimedLifeBHint=Gives a unit a life timer. [UMSWE]

UnitMakeAbilityPermanentBJ=Make Ability Permanent
UnitMakeAbilityPermanentBJ="For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentBJHint=[UMSWE]

SetUnitAnimationByIndex=Set Unit Animation by Index
SetUnitAnimationByIndex="Set current animation for ",~unit," to its ",~nr,"th animation"
SetUnitAnimationByIndexHint=Use the arrow buttons in the preview window to see all animations [UMSWE]

UnitIgnoreAlarm=Ignore Alarm
UnitIgnoreAlarm="Make unit ",~Unit," ignore alarms ",~Flag
UnitIgnoreAlarmHint=[UMSWE]

ExecuteFunc=Execute Function
ExecuteFunc="Execute ",~Function
ExecuteFuncHint=Use 'Conversion - Trigger Name To Function' to access the actions part of a trigger, the called function shouldn't have parameters [UMSWE]

EnableUserUI=Enable/Disable User UI
EnableUserUI=~Enable/Disable," User UI"
EnableUserUIHint=[UMSWE]

EndGame=End Game
EndGame="End game and ",~Show/Skip," scores"
EndGameHint=No victory or defeat dialog [UMSWE]

ChangeLevel=Load Next Map
ChangeLevel="End game, load the map ",~Mapname," and ",~Show/Skip," scores"
ChangeLevelHint=No victory or defeat dialog and no 'Connect to Server Bug' [UMSWE]

RestartGame=Restart Game
RestartGame="Restart the current map and ",~Show/Skip," scores"
RestartGameHint=No victory or defeat dialog [UMSWE]

DisableRestartMission=Disable Restart Mission
DisableRestartMission="Disable restart mission ",~Flag
DisableRestartMissionHint=[UMSWE]

DoNotSaveReplay=Do Not Save Replay
DoNotSaveReplay="Do not save replay"
DoNotSaveReplayHint=[UMSWE]

SetIntegerGameState=Set Game State
SetIntegerGameState="Set ",~Gamestate," to ",~Value
SetIntegerGameStateHint=[UMSWE]

SyncSelections=Synchronize Selections
SyncSelections="Synchronize the unit selections"
SyncSelectionsHint=Used to avoid desyncs before getting the selection state with custom script calls [UMSWE]

MoveLocation=Move Point
MoveLocation="Move ",~Point," to offset(",~X,", ",~Y,")"
MoveLocationHint=[UMSWE]

RemoveLocation=Remove Point
RemoveLocation="Remove ",~Location
RemoveLocationHint=Use this to delete a point to save memory. The variable itself will remain without data [UMSWE]

MoveRectTo=Move to Offset
MoveRectTo="Center ",~Rect," on offset(",~Real,", ",~Real,")"
MoveRectToHint=This has no effect unless the specified rect is a variable [UMSWE]

RemoveRect=Remove
RemoveRect="Remove ",~Rect
RemoveRectHint=Use this to delete a rect to save memory. The variable itself will remain without data [UMSWE]

TriggerAddCondition=Add Condition To Trigger
TriggerAddCondition="Take ",~Trigger," and add this condition: ",~Condition
TriggerAddConditionHint=[UMSWE]

TriggerAddAction=Add Action To Trigger
TriggerAddAction="Take ",~Trigger," and add this action: ",~Action
TriggerAddActionHint=[UMSWE]

TriggerRemoveCondition=Remove Condition
TriggerRemoveCondition="Take ",~Trigger," and remove the condition ",~Boolexp
TriggerRemoveConditionHint=Removes a condition from a trigger [UMSWE]

TriggerClearConditions=Clear Conditions
TriggerClearConditions="Take ",~Trigger," and remove all conditions "
TriggerClearConditionsHint=Removes all conditions from a trigger [UMSWE]

TriggerRemoveAction=Remove Action
TriggerRemoveAction="Take ",~Trigger," and remove the action ",~Action
TriggerRemoveActionHint=Removes an action from a trigger [UMSWE]

TriggerClearActions=Clear Actions
TriggerClearActions="Take ",~Trigger," and remove all actions"
TriggerClearActionsHint=Removes all actions from a trigger [UMSWE]

ResetTrigger=Reset Trigger
ResetTrigger="Reset ",~Trigger
ResetTriggerHint=Resets a trigger to its original state [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

IssueInstantTargetOrder=Give Item from Unit to Unit
IssueInstantTargetOrder="Order ",~Unit," to ",~Order," ",~Item," to ",~Unit
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueNeutralImmediateOrderById=Buy Unit from Store
IssueNeutralImmediateOrderById="For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

IssueTargetOrderBJ=Issue Order Targeting A Unit (Takes String)
IssueTargetOrderBJ="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderById=Issue Order Targeting A Unit (Takes Ordercode)
IssueTargetOrderById="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderByIdHint=[UMSWE]

IssuePointOrderLocBJ=Issue Order Targeting A Point (Takes String)
IssuePointOrderLocBJ="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssuePointOrderByIdLoc=Issue Order Targeting A Point (Takes Ordercode)
IssuePointOrderByIdLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderByIdLocHint=[UMSWE]

IssueTargetOrderD=Issue Order Targeting A Destructible (Takes String)
IssueTargetOrderD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderDHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderByIdD=Issue Order Targeting A Destructible (Takes Ordercode)
IssueTargetOrderByIdD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderByIdDHint=[UMSWE]

IssueImmediateOrderBJ=Issue Order With No Target (Takes String)
IssueImmediateOrderBJ="Order ",~Unit," to ",~Order
IssueImmediateOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueImmediateOrderById=Issue Order With No Target (Takes Ordercode)
IssueImmediateOrderById="Order ",~Unit," to ",~Order
IssueImmediateOrderByIdHint=[UMSWE]

IssueItemTargetOrderS=Issue Order Targeting An Item (Takes String)
IssueItemTargetOrderS="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderSHint=[UMSWE]

IssueItemTargetOrderId=Issue Order Targeting An Item (Takes Ordercode)
IssueItemTargetOrderId="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderIdHint=[UMSWE]

RegionAddCell=Add Cell To Region
RegionAddCell="Take ",~region," and add a cell at location (",~X,",",~Y,")"
RegionAddCellHint=[UMSWE]

RegionAddCellAtLoc=Region Add Cell At Location
RegionAddCellAtLoc="Take ",~region," and add a cell at ",~location
RegionAddCellAtLocHint=[UMSWE]

RegionAddRect=Add Rect To Region
RegionAddRect="Take ",~region," and add ",~rect," to it"
RegionAddRectHint=[UMSWE]

RegionClearCell=Remove Cell From Region
RegionClearCell="Take ",~region," and remove the cell at (",~X,",",~Y,")"
RegionClearCellHint=[UMSWE]

RegionClearCellAtLoc=Remove Cell At Location From Region
RegionClearCellAtLoc="Take ",~region," and remove the cell at",~location
RegionClearCellAtLocHint=[UMSWE]

RegionClearRect=Remove Rect From Region
RegionClearRect="Take ",~region," and remove ",~rect," from it"
RegionClearRectHint=[UMSWE]

FlushStoredInteger=Flush Stored Integer
FlushStoredInteger="Flush the Integer stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredIntegerHint=[UMSWE]

FlushStoredBoolean=Flush Stored Boolean
FlushStoredBoolean="Flush the Boolean stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredBooleanHint=[UMSWE]

FlushStoredReal=Flush Stored Real
FlushStoredReal="Flush the Real stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredRealHint=[UMSWE]

FlushStoredUnit=Flush Stored Unit
FlushStoredUnit="Flush the Unit stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredUnitHint=[UMSWE]

FlushStoredString=Flush Stored String
FlushStoredString="Flush the String stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredStringHint=[UMSWE]

CreateDestructableZA=Create With Z Offset
CreateDestructableZA="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

CreateDeadDestructableZA=Create With Z Offset (Dead)
CreateDeadDestructableZA="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

DialogAddButtonWithHotkeyBJ=Create Dialog Button with Hotkey (GU Version)
DialogAddButtonWithHotkeyBJ="Create a dialog button for ",~Dialog," labelled ",~Text," and keycode ",~Code
DialogAddButtonWithHotkeyBJHint=Just here for COMPATIBILITY reasons. Better use the common.j version of this action. [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=Just here for COMPATIBILITY reasons. Better use the function returning the trackable to save it to a variable. [UMSWE]

MultiboardDisplay=Display Multiboard
MultiboardDisplay="Take multiboard ",~board," and ",~ShowHide," it"
MultiboardDisplayHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

DestroyMultiboard=Destroy Multiboard
DestroyMultiboard="Destroy multiboard ",~board
DestroyMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardMinimize=Minimize Multiboard
MultiboardMinimize="Take multiboard ",~board," and ",~Min," it"
MultiboardMinimizeHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetTitleTextColor=Set Title Text Color
MultiboardSetTitleTextColor="Set title text color of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetTitleTextColorHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsStyle=All Items - Set Item Style
MultiboardSetItemsStyle="Set item style for all items of multiboard ",~board," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemsStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsValue=All Items - Set Item Value
MultiboardSetItemsValue="Set the label for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsWidth=All Items - Set Item Width
MultiboardSetItemsWidth="Set width for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsIcon=All Items - Set Item Icon
MultiboardSetItemsIcon="Set used icon for all items of multiboard ",~board," to ",~Icon
MultiboardSetItemsIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardReleaseItem=Release Multiboard Item
MultiboardReleaseItem="Release multiboard item ",~Item
MultiboardReleaseItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemStyle=Set Item Style
MultiboardSetItemStyle="Set item style of multiboard item ",~Item," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemValue=Set Item Value
MultiboardSetItemValue="Set the label for multiboard item ",~Item," to ",~Value
MultiboardSetItemValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemWidth=Set Item Width
MultiboardSetItemWidth="Set width for multiboard item ",~Item," to ",~Value
MultiboardSetItemWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemIcon=Set Item Icon
MultiboardSetItemIcon="Set used icon for multiboard item ",~Item," to ",~Icon
MultiboardSetItemIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Location
AddSpellEffectByIdLoc="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectByIdLocB=Create Buff Effect At Location
AddSpellEffectByIdLocB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetByIdB=Create Buff Effect On Unit
AddSpellEffectTargetByIdB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

UnitApplyTimedLife=Apply Life Timer
UnitApplyTimedLife="Set timed life for unit ",~Unit," with buff ID ",~Integer," and duration ",~Integer," seconds"
UnitApplyTimedLifeHint=Just here for COMPATIBILITY reasons. Better use the new official action. [UMSWE]

IssueItemTargetOrder=Issue Order Targeting An Item
IssueItemTargetOrder="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

GroupItemTargetOrder=Group Issue Order Targeting An Item
GroupItemTargetOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]


[TriggerCallStrings]
ConvertRace=ConvertRace
ConvertRace="ConvertRace(",~i,")"
ConvertRaceHint="[NATIVE] native ConvertRace takes integer i returns race"

ConvertAllianceType=ConvertAllianceType
ConvertAllianceType="ConvertAllianceType(",~i,")"
ConvertAllianceTypeHint="[NATIVE] native ConvertAllianceType takes integer i returns alliancetype"

ConvertRacePref=ConvertRacePref
ConvertRacePref="ConvertRacePref(",~i,")"
ConvertRacePrefHint="[NATIVE] native ConvertRacePref takes integer i returns racepreference"

ConvertIGameState=ConvertIGameState
ConvertIGameState="ConvertIGameState(",~i,")"
ConvertIGameStateHint="[NATIVE] native ConvertIGameState takes integer i returns igamestate"

ConvertFGameState=ConvertFGameState
ConvertFGameState="ConvertFGameState(",~i,")"
ConvertFGameStateHint="[NATIVE] native ConvertFGameState takes integer i returns fgamestate"

ConvertPlayerState=ConvertPlayerState
ConvertPlayerState="ConvertPlayerState(",~i,")"
ConvertPlayerStateHint="[NATIVE] native ConvertPlayerState takes integer i returns playerstate"

ConvertPlayerScore=ConvertPlayerScore
ConvertPlayerScore="ConvertPlayerScore(",~i,")"
ConvertPlayerScoreHint="[NATIVE] native ConvertPlayerScore takes integer i returns playerscore"

ConvertPlayerGameResult=ConvertPlayerGameResult
ConvertPlayerGameResult="ConvertPlayerGameResult(",~i,")"
ConvertPlayerGameResultHint="[NATIVE] native ConvertPlayerGameResult takes integer i returns playergameresult"

ConvertUnitState=ConvertUnitState
ConvertUnitState="ConvertUnitState(",~i,")"
ConvertUnitStateHint="[NATIVE] native ConvertUnitState takes integer i returns unitstate"

ConvertAIDifficulty=ConvertAIDifficulty
ConvertAIDifficulty="ConvertAIDifficulty(",~i,")"
ConvertAIDifficultyHint="[NATIVE] native ConvertAIDifficulty takes integer i returns aidifficulty"

ConvertGameEvent=ConvertGameEvent
ConvertGameEvent="ConvertGameEvent(",~i,")"
ConvertGameEventHint="[NATIVE] native ConvertGameEvent takes integer i returns gameevent"

ConvertPlayerEvent=ConvertPlayerEvent
ConvertPlayerEvent="ConvertPlayerEvent(",~i,")"
ConvertPlayerEventHint="[NATIVE] native ConvertPlayerEvent takes integer i returns playerevent"

ConvertPlayerUnitEvent=ConvertPlayerUnitEvent
ConvertPlayerUnitEvent="ConvertPlayerUnitEvent(",~i,")"
ConvertPlayerUnitEventHint="[NATIVE] native ConvertPlayerUnitEvent takes integer i returns playerunitevent"

ConvertWidgetEvent=ConvertWidgetEvent
ConvertWidgetEvent="ConvertWidgetEvent(",~i,")"
ConvertWidgetEventHint="[NATIVE] native ConvertWidgetEvent takes integer i returns widgetevent"

ConvertDialogEvent=ConvertDialogEvent
ConvertDialogEvent="ConvertDialogEvent(",~i,")"
ConvertDialogEventHint="[NATIVE] native ConvertDialogEvent takes integer i returns dialogevent"

ConvertUnitEvent=ConvertUnitEvent
ConvertUnitEvent="ConvertUnitEvent(",~i,")"
ConvertUnitEventHint="[NATIVE] native ConvertUnitEvent takes integer i returns unitevent"

ConvertLimitOp=ConvertLimitOp
ConvertLimitOp="ConvertLimitOp(",~i,")"
ConvertLimitOpHint="[NATIVE] native ConvertLimitOp takes integer i returns limitop"

ConvertUnitType=ConvertUnitType
ConvertUnitType="ConvertUnitType(",~i,")"
ConvertUnitTypeHint="[NATIVE] native ConvertUnitType takes integer i returns unittype"

ConvertGameSpeed=ConvertGameSpeed
ConvertGameSpeed="ConvertGameSpeed(",~i,")"
ConvertGameSpeedHint="[NATIVE] native ConvertGameSpeed takes integer i returns gamespeed"

ConvertPlacement=ConvertPlacement
ConvertPlacement="ConvertPlacement(",~i,")"
ConvertPlacementHint="[NATIVE] native ConvertPlacement takes integer i returns placement"

ConvertStartLocPrio=ConvertStartLocPrio
ConvertStartLocPrio="ConvertStartLocPrio(",~i,")"
ConvertStartLocPrioHint="[NATIVE] native ConvertStartLocPrio takes integer i returns startlocprio"

ConvertGameDifficulty=ConvertGameDifficulty
ConvertGameDifficulty="ConvertGameDifficulty(",~i,")"
ConvertGameDifficultyHint="[NATIVE] native ConvertGameDifficulty takes integer i returns gamedifficulty"

ConvertGameType=ConvertGameType
ConvertGameType="ConvertGameType(",~i,")"
ConvertGameTypeHint="[NATIVE] native ConvertGameType takes integer i returns gametype"

ConvertMapFlag=ConvertMapFlag
ConvertMapFlag="ConvertMapFlag(",~i,")"
ConvertMapFlagHint="[NATIVE] native ConvertMapFlag takes integer i returns mapflag"

ConvertMapVisibility=ConvertMapVisibility
ConvertMapVisibility="ConvertMapVisibility(",~i,")"
ConvertMapVisibilityHint="[NATIVE] native ConvertMapVisibility takes integer i returns mapvisibility"

ConvertMapSetting=ConvertMapSetting
ConvertMapSetting="ConvertMapSetting(",~i,")"
ConvertMapSettingHint="[NATIVE] native ConvertMapSetting takes integer i returns mapsetting"

ConvertMapDensity=ConvertMapDensity
ConvertMapDensity="ConvertMapDensity(",~i,")"
ConvertMapDensityHint="[NATIVE] native ConvertMapDensity takes integer i returns mapdensity"

ConvertMapControl=ConvertMapControl
ConvertMapControl="ConvertMapControl(",~i,")"
ConvertMapControlHint="[NATIVE] native ConvertMapControl takes integer i returns mapcontrol"

ConvertPlayerColor=ConvertPlayerColor
ConvertPlayerColor="ConvertPlayerColor(",~i,")"
ConvertPlayerColorHint="[NATIVE] native ConvertPlayerColor takes integer i returns playercolor"

ConvertPlayerSlotState=ConvertPlayerSlotState
ConvertPlayerSlotState="ConvertPlayerSlotState(",~i,")"
ConvertPlayerSlotStateHint="[NATIVE] native ConvertPlayerSlotState takes integer i returns playerslotstate"

ConvertVolumeGroup=ConvertVolumeGroup
ConvertVolumeGroup="ConvertVolumeGroup(",~i,")"
ConvertVolumeGroupHint="[NATIVE] native ConvertVolumeGroup takes integer i returns volumegroup"

ConvertCameraField=ConvertCameraField
ConvertCameraField="ConvertCameraField(",~i,")"
ConvertCameraFieldHint="[NATIVE] native ConvertCameraField takes integer i returns camerafield"

ConvertBlendMode=ConvertBlendMode
ConvertBlendMode="ConvertBlendMode(",~i,")"
ConvertBlendModeHint="[NATIVE] native ConvertBlendMode takes integer i returns blendmode"

ConvertRarityControl=ConvertRarityControl
ConvertRarityControl="ConvertRarityControl(",~i,")"
ConvertRarityControlHint="[NATIVE] native ConvertRarityControl takes integer i returns raritycontrol"

ConvertTexMapFlags=ConvertTexMapFlags
ConvertTexMapFlags="ConvertTexMapFlags(",~i,")"
ConvertTexMapFlagsHint="[NATIVE] native ConvertTexMapFlags takes integer i returns texmapflags"

ConvertFogState=ConvertFogState
ConvertFogState="ConvertFogState(",~i,")"
ConvertFogStateHint="[NATIVE] native ConvertFogState takes integer i returns fogstate"

ConvertEffectType=ConvertEffectType
ConvertEffectType="ConvertEffectType(",~i,")"
ConvertEffectTypeHint="[NATIVE] native ConvertEffectType takes integer i returns effecttype"

ConvertVersion=ConvertVersion
ConvertVersion="ConvertVersion(",~i,")"
ConvertVersionHint="[NATIVE] native ConvertVersion takes integer i returns version"

ConvertItemType=ConvertItemType
ConvertItemType="ConvertItemType(",~i,")"
ConvertItemTypeHint="[NATIVE] native ConvertItemType takes integer i returns itemtype"

ConvertAttackType=ConvertAttackType
ConvertAttackType="ConvertAttackType(",~i,")"
ConvertAttackTypeHint="[NATIVE] native ConvertAttackType takes integer i returns attacktype"

ConvertDamageType=ConvertDamageType
ConvertDamageType="ConvertDamageType(",~i,")"
ConvertDamageTypeHint="[NATIVE] native ConvertDamageType takes integer i returns damagetype"

ConvertWeaponType=ConvertWeaponType
ConvertWeaponType="ConvertWeaponType(",~i,")"
ConvertWeaponTypeHint="[NATIVE] native ConvertWeaponType takes integer i returns weapontype"

ConvertSoundType=ConvertSoundType
ConvertSoundType="ConvertSoundType(",~i,")"
ConvertSoundTypeHint="[NATIVE] native ConvertSoundType takes integer i returns soundtype"

ConvertPathingType=ConvertPathingType
ConvertPathingType="ConvertPathingType(",~i,")"
ConvertPathingTypeHint="[NATIVE] native ConvertPathingType takes integer i returns pathingtype"

ConvertProjectileType=ConvertProjectileType
ConvertProjectileType="ConvertProjectileType(",~i,")"
ConvertProjectileTypeHint="[UjAPI] native ConvertProjectileType takes integer i returns projectiletype"

ConvertMappedField=ConvertMappedField
ConvertMappedField="ConvertMappedField(",~i,")"
ConvertMappedFieldHint="[UjAPI] native ConvertMappedField takes integer i returns mappedfield"

ConvertAttachmentType=ConvertAttachmentType
ConvertAttachmentType="ConvertAttachmentType(",~i,")"
ConvertAttachmentTypeHint="[UjAPI] native ConvertAttachmentType takes integer i returns attachmenttype"

ConvertBoneType=ConvertBoneType
ConvertBoneType="ConvertBoneType(",~i,")"
ConvertBoneTypeHint="[UjAPI] native ConvertBoneType takes integer i returns bonetype"

ConvertAnimType=ConvertAnimType
ConvertAnimType="ConvertAnimType(",~i,")"
ConvertAnimTypeHint="[UjAPI] native ConvertAnimType takes integer i returns animtype"

ConvertSubAnimType=ConvertSubAnimType
ConvertSubAnimType="ConvertSubAnimType(",~i,")"
ConvertSubAnimTypeHint="[UjAPI] native ConvertSubAnimType takes integer i returns subanimtype"

ConvertCursorAnimType=ConvertCursorAnimType
ConvertCursorAnimType="ConvertCursorAnimType(",~i,")"
ConvertCursorAnimTypeHint="[UjAPI] native ConvertCursorAnimType takes integer i returns cursoranimtype"

ConvertOriginFrameType=ConvertOriginFrameType
ConvertOriginFrameType="ConvertOriginFrameType(",~i,")"
ConvertOriginFrameTypeHint="[UjAPI] native ConvertOriginFrameType takes integer i returns originframetype"

ConvertFramePointType=ConvertFramePointType
ConvertFramePointType="ConvertFramePointType(",~i,")"
ConvertFramePointTypeHint="[UjAPI] native ConvertFramePointType takes integer i returns framepointtype"

ConvertTextAlignType=ConvertTextAlignType
ConvertTextAlignType="ConvertTextAlignType(",~i,")"
ConvertTextAlignTypeHint="[UjAPI] native ConvertTextAlignType takes integer i returns textaligntype"

ConvertFrameEventType=ConvertFrameEventType
ConvertFrameEventType="ConvertFrameEventType(",~i,")"
ConvertFrameEventTypeHint="[UjAPI] native ConvertFrameEventType takes integer i returns frameeventtype"

ConvertOsKeyType=ConvertOsKeyType
ConvertOsKeyType="ConvertOsKeyType(",~i,")"
ConvertOsKeyTypeHint="[UjAPI] native ConvertOsKeyType takes integer i returns oskeytype"

ConvertMouseButtonType=ConvertMouseButtonType
ConvertMouseButtonType="ConvertMouseButtonType(",~i,")"
ConvertMouseButtonTypeHint="[UjAPI] native ConvertMouseButtonType takes integer i returns mousebuttontype"

ConvertAbilityIntegerField=ConvertAbilityIntegerField
ConvertAbilityIntegerField="ConvertAbilityIntegerField(",~i,")"
ConvertAbilityIntegerFieldHint="[UjAPI] native ConvertAbilityIntegerField takes integer i returns abilityintegerfield"

ConvertAbilityRealField=ConvertAbilityRealField
ConvertAbilityRealField="ConvertAbilityRealField(",~i,")"
ConvertAbilityRealFieldHint="[UjAPI] native ConvertAbilityRealField takes integer i returns abilityrealfield"

ConvertAbilityBooleanField=ConvertAbilityBooleanField
ConvertAbilityBooleanField="ConvertAbilityBooleanField(",~i,")"
ConvertAbilityBooleanFieldHint="[UjAPI] native ConvertAbilityBooleanField takes integer i returns abilitybooleanfield"

ConvertAbilityStringField=ConvertAbilityStringField
ConvertAbilityStringField="ConvertAbilityStringField(",~i,")"
ConvertAbilityStringFieldHint="[UjAPI] native ConvertAbilityStringField takes integer i returns abilitystringfield"

ConvertAbilityIntegerLevelField=ConvertAbilityIntegerLevelField
ConvertAbilityIntegerLevelField="ConvertAbilityIntegerLevelField(",~i,")"
ConvertAbilityIntegerLevelFieldHint="[UjAPI] native ConvertAbilityIntegerLevelField takes integer i returns abilityintegerlevelfield"

ConvertAbilityRealLevelField=ConvertAbilityRealLevelField
ConvertAbilityRealLevelField="ConvertAbilityRealLevelField(",~i,")"
ConvertAbilityRealLevelFieldHint="[UjAPI] native ConvertAbilityRealLevelField takes integer i returns abilityreallevelfield"

ConvertAbilityBooleanLevelField=ConvertAbilityBooleanLevelField
ConvertAbilityBooleanLevelField="ConvertAbilityBooleanLevelField(",~i,")"
ConvertAbilityBooleanLevelFieldHint="[UjAPI] native ConvertAbilityBooleanLevelField takes integer i returns abilitybooleanlevelfield"

ConvertAbilityStringLevelField=ConvertAbilityStringLevelField
ConvertAbilityStringLevelField="ConvertAbilityStringLevelField(",~i,")"
ConvertAbilityStringLevelFieldHint="[UjAPI] native ConvertAbilityStringLevelField takes integer i returns abilitystringlevelfield"

ConvertAbilityIntegerLevelArrayField=ConvertAbilityIntegerLevelArrayField
ConvertAbilityIntegerLevelArrayField="ConvertAbilityIntegerLevelArrayField(",~i,")"
ConvertAbilityIntegerLevelArrayFieldHint="[UjAPI] native ConvertAbilityIntegerLevelArrayField takes integer i returns abilityintegerlevelarrayfield"

ConvertAbilityRealLevelArrayField=ConvertAbilityRealLevelArrayField
ConvertAbilityRealLevelArrayField="ConvertAbilityRealLevelArrayField(",~i,")"
ConvertAbilityRealLevelArrayFieldHint="[UjAPI] native ConvertAbilityRealLevelArrayField takes integer i returns abilityreallevelarrayfield"

ConvertAbilityBooleanLevelArrayField=ConvertAbilityBooleanLevelArrayField
ConvertAbilityBooleanLevelArrayField="ConvertAbilityBooleanLevelArrayField(",~i,")"
ConvertAbilityBooleanLevelArrayFieldHint="[UjAPI] native ConvertAbilityBooleanLevelArrayField takes integer i returns abilitybooleanlevelarrayfield"

ConvertAbilityStringLevelArrayField=ConvertAbilityStringLevelArrayField
ConvertAbilityStringLevelArrayField="ConvertAbilityStringLevelArrayField(",~i,")"
ConvertAbilityStringLevelArrayFieldHint="[UjAPI] native ConvertAbilityStringLevelArrayField takes integer i returns abilitystringlevelarrayfield"

ConvertDestructableStringField=ConvertDestructableStringField
ConvertDestructableStringField="ConvertDestructableStringField(",~i,")"
ConvertDestructableStringFieldHint="[UjAPI] native ConvertDestructableStringField takes integer i returns destructablestringfield"

ConvertItemIntegerField=ConvertItemIntegerField
ConvertItemIntegerField="ConvertItemIntegerField(",~i,")"
ConvertItemIntegerFieldHint="[UjAPI] native ConvertItemIntegerField takes integer i returns itemintegerfield"

ConvertItemRealField=ConvertItemRealField
ConvertItemRealField="ConvertItemRealField(",~i,")"
ConvertItemRealFieldHint="[UjAPI] native ConvertItemRealField takes integer i returns itemrealfield"

ConvertItemBooleanField=ConvertItemBooleanField
ConvertItemBooleanField="ConvertItemBooleanField(",~i,")"
ConvertItemBooleanFieldHint="[UjAPI] native ConvertItemBooleanField takes integer i returns itembooleanfield"

ConvertItemStringField=ConvertItemStringField
ConvertItemStringField="ConvertItemStringField(",~i,")"
ConvertItemStringFieldHint="[UjAPI] native ConvertItemStringField takes integer i returns itemstringfield"

ConvertUnitIntegerField=ConvertUnitIntegerField
ConvertUnitIntegerField="ConvertUnitIntegerField(",~i,")"
ConvertUnitIntegerFieldHint="[UjAPI] native ConvertUnitIntegerField takes integer i returns unitintegerfield"

ConvertUnitRealField=ConvertUnitRealField
ConvertUnitRealField="ConvertUnitRealField(",~i,")"
ConvertUnitRealFieldHint="[UjAPI] native ConvertUnitRealField takes integer i returns unitrealfield"

ConvertUnitBooleanField=ConvertUnitBooleanField
ConvertUnitBooleanField="ConvertUnitBooleanField(",~i,")"
ConvertUnitBooleanFieldHint="[UjAPI] native ConvertUnitBooleanField takes integer i returns unitbooleanfield"

ConvertUnitStringField=ConvertUnitStringField
ConvertUnitStringField="ConvertUnitStringField(",~i,")"
ConvertUnitStringFieldHint="[UjAPI] native ConvertUnitStringField takes integer i returns unitstringfield"

ConvertUnitWeaponIntegerField=ConvertUnitWeaponIntegerField
ConvertUnitWeaponIntegerField="ConvertUnitWeaponIntegerField(",~i,")"
ConvertUnitWeaponIntegerFieldHint="[UjAPI] native ConvertUnitWeaponIntegerField takes integer i returns unitweaponintegerfield"

ConvertUnitWeaponRealField=ConvertUnitWeaponRealField
ConvertUnitWeaponRealField="ConvertUnitWeaponRealField(",~i,")"
ConvertUnitWeaponRealFieldHint="[UjAPI] native ConvertUnitWeaponRealField takes integer i returns unitweaponrealfield"

ConvertUnitWeaponBooleanField=ConvertUnitWeaponBooleanField
ConvertUnitWeaponBooleanField="ConvertUnitWeaponBooleanField(",~i,")"
ConvertUnitWeaponBooleanFieldHint="[UjAPI] native ConvertUnitWeaponBooleanField takes integer i returns unitweaponbooleanfield"

ConvertUnitWeaponStringField=ConvertUnitWeaponStringField
ConvertUnitWeaponStringField="ConvertUnitWeaponStringField(",~i,")"
ConvertUnitWeaponStringFieldHint="[UjAPI] native ConvertUnitWeaponStringField takes integer i returns unitweaponstringfield"

ConvertMoveType=ConvertMoveType
ConvertMoveType="ConvertMoveType(",~i,")"
ConvertMoveTypeHint="[UjAPI] native ConvertMoveType takes integer i returns movetype"

ConvertPathingAIType=ConvertPathingAIType
ConvertPathingAIType="ConvertPathingAIType(",~i,")"
ConvertPathingAITypeHint="[UjAPI] native ConvertPathingAIType takes integer i returns pathingaitype"

ConvertCollisionType=ConvertCollisionType
ConvertCollisionType="ConvertCollisionType(",~i,")"
ConvertCollisionTypeHint="[UjAPI] native ConvertCollisionType takes integer i returns collisiontype"

ConvertTargetFlag=ConvertTargetFlag
ConvertTargetFlag="ConvertTargetFlag(",~i,")"
ConvertTargetFlagHint="[UjAPI] native ConvertTargetFlag takes integer i returns targetflag"

ConvertDamageFlag=ConvertDamageFlag
ConvertDamageFlag="ConvertDamageFlag(",~i,")"
ConvertDamageFlagHint="[UjAPI] native ConvertDamageFlag takes integer i returns damageflag"

ConvertArmorType=ConvertArmorType
ConvertArmorType="ConvertArmorType(",~i,")"
ConvertArmorTypeHint="[UjAPI] native ConvertArmorType takes integer i returns armortype"

ConvertHeroAttribute=ConvertHeroAttribute
ConvertHeroAttribute="ConvertHeroAttribute(",~i,")"
ConvertHeroAttributeHint="[UjAPI] native ConvertHeroAttribute takes integer i returns heroattribute"

ConvertDefenseType=ConvertDefenseType
ConvertDefenseType="ConvertDefenseType(",~i,")"
ConvertDefenseTypeHint="[UjAPI] native ConvertDefenseType takes integer i returns defensetype"

ConvertRegenType=ConvertRegenType
ConvertRegenType="ConvertRegenType(",~i,")"
ConvertRegenTypeHint="[UjAPI] native ConvertRegenType takes integer i returns regentype"

ConvertUnitCategory=ConvertUnitCategory
ConvertUnitCategory="ConvertUnitCategory(",~i,")"
ConvertUnitCategoryHint="[UjAPI] native ConvertUnitCategory takes integer i returns unitcategory"

ConvertPathingFlag=ConvertPathingFlag
ConvertPathingFlag="ConvertPathingFlag(",~i,")"
ConvertPathingFlagHint="[UjAPI] native ConvertPathingFlag takes integer i returns pathingflag"

ConvertTimeType=ConvertTimeType
ConvertTimeType="ConvertTimeType(",~i,")"
ConvertTimeTypeHint="[UjAPI] native ConvertTimeType takes integer i returns timetype"

ConvertVariableType=ConvertVariableType
ConvertVariableType="ConvertVariableType(",~i,")"
ConvertVariableTypeHint="[UjAPI] native ConvertVariableType takes integer i returns variabletype"

ConvertRenderStage=ConvertRenderStage
ConvertRenderStage="ConvertRenderStage(",~i,")"
ConvertRenderStageHint="[UjAPI] native ConvertRenderStage takes integer i returns renderstage"

ConvertLayoutStyleFlag=ConvertLayoutStyleFlag
ConvertLayoutStyleFlag="ConvertLayoutStyleFlag(",~i,")"
ConvertLayoutStyleFlagHint="[UjAPI] native ConvertLayoutStyleFlag takes integer i returns layoutstyleflag"

ConvertGridStyleFlag=ConvertGridStyleFlag
ConvertGridStyleFlag="ConvertGridStyleFlag(",~i,")"
ConvertGridStyleFlagHint="[UjAPI] native ConvertGridStyleFlag takes integer i returns gridstyleflag"

ConvertLayerStyleFlag=ConvertLayerStyleFlag
ConvertLayerStyleFlag="ConvertLayerStyleFlag(",~i,")"
ConvertLayerStyleFlagHint="[UjAPI] native ConvertLayerStyleFlag takes integer i returns layerstyleflag"

ConvertControlStyleFlag=ConvertControlStyleFlag
ConvertControlStyleFlag="ConvertControlStyleFlag(",~i,")"
ConvertControlStyleFlagHint="[UjAPI] native ConvertControlStyleFlag takes integer i returns controlstyleflag"

ConvertFrameState=ConvertFrameState
ConvertFrameState="ConvertFrameState(",~i,")"
ConvertFrameStateHint="[UjAPI] native ConvertFrameState takes integer i returns framestate"

ConvertAbilityType=ConvertAbilityType
ConvertAbilityType="ConvertAbilityType(",~i,")"
ConvertAbilityTypeHint="[UjAPI] native ConvertAbilityType takes integer i returns abilitytype"

ConvertItemDisableFlag=ConvertItemDisableFlag
ConvertItemDisableFlag="ConvertItemDisableFlag(",~i,")"
ConvertItemDisableFlagHint="[UjAPI] native ConvertItemDisableFlag takes integer i returns itemdisableflag"

ConvertConnectionType=ConvertConnectionType
ConvertConnectionType="ConvertConnectionType(",~i,")"
ConvertConnectionTypeHint="[UjAPI] native ConvertConnectionType takes integer i returns connectiontype"

ConvertTradeState=ConvertTradeState
ConvertTradeState="ConvertTradeState(",~i,")"
ConvertTradeStateHint="[UjAPI] native ConvertTradeState takes integer i returns tradestate"

OrderId=OrderId
OrderId="OrderId(",~orderNameString,")"
OrderIdHint="[NATIVE] native OrderId takes string orderNameString returns integer"

OrderId2String=OrderId2String
OrderId2String="OrderId2String(",~orderId,")"
OrderId2StringHint="[NATIVE] native OrderId2String takes integer orderId returns string"

UnitId=UnitId
UnitId="UnitId(",~unitTypeIdString,")"
UnitIdHint="[NATIVE] native UnitId takes string unitTypeIdString returns integer"

UnitId2String=UnitId2String
UnitId2String="UnitId2String(",~unitTypeId,")"
UnitId2StringHint="[NATIVE] native UnitId2String takes integer unitTypeId returns string"

AbilityId=AbilityId
AbilityId="AbilityId(",~abilityIdString,")"
AbilityIdHint="[NATIVE] native AbilityId takes string abilityIdString returns integer"

AbilityId2String=AbilityId2String
AbilityId2String="AbilityId2String(",~abilityTypeId,")"
AbilityId2StringHint="[NATIVE] native AbilityId2String takes integer abilityTypeId returns string"

GetObjectName=GetObjectName
GetObjectName="GetObjectName(",~objectTypeId,")"
GetObjectNameHint="[NATIVE] native GetObjectName takes integer objectTypeId returns string"

GetBJMaxPlayers=GetBJMaxPlayers
GetBJMaxPlayers="GetBJMaxPlayers(",")"
GetBJMaxPlayersHint="[UjAPI] native GetBJMaxPlayers takes nothing returns integer"

GetBJPlayerNeutralVictim=GetBJPlayerNeutralVictim
GetBJPlayerNeutralVictim="GetBJPlayerNeutralVictim(",")"
GetBJPlayerNeutralVictimHint="[UjAPI] native GetBJPlayerNeutralVictim takes nothing returns integer"

GetBJPlayerNeutralExtra=GetBJPlayerNeutralExtra
GetBJPlayerNeutralExtra="GetBJPlayerNeutralExtra(",")"
GetBJPlayerNeutralExtraHint="[UjAPI] native GetBJPlayerNeutralExtra takes nothing returns integer"

GetBJMaxPlayerSlots=GetBJMaxPlayerSlots
GetBJMaxPlayerSlots="GetBJMaxPlayerSlots(",")"
GetBJMaxPlayerSlotsHint="[UjAPI] native GetBJMaxPlayerSlots takes nothing returns integer"

GetPlayerNeutralPassive=GetPlayerNeutralPassive
GetPlayerNeutralPassive="GetPlayerNeutralPassive(",")"
GetPlayerNeutralPassiveHint="[UjAPI] native GetPlayerNeutralPassive takes nothing returns integer"

GetPlayerNeutralAggressive=GetPlayerNeutralAggressive
GetPlayerNeutralAggressive="GetPlayerNeutralAggressive(",")"
GetPlayerNeutralAggressiveHint="[UjAPI] native GetPlayerNeutralAggressive takes nothing returns integer"

GetJassArrayLimit=GetJassArrayLimit
GetJassArrayLimit="GetJassArrayLimit(",")"
GetJassArrayLimitHint="[UjAPI] native GetJassArrayLimit takes nothing returns integer"

GetTextTagLimit=GetTextTagLimit
GetTextTagLimit="GetTextTagLimit(",")"
GetTextTagLimitHint="[UjAPI] native GetTextTagLimit takes nothing returns integer"

Sin=Sin
Sin="Sin(",~radians,")"
SinHint="[NATIVE] native Sin takes real radians returns real"

Cos=Cos
Cos="Cos(",~radians,")"
CosHint="[NATIVE] native Cos takes real radians returns real"

Tan=Tan
Tan="Tan(",~radians,")"
TanHint="[NATIVE] native Tan takes real radians returns real"

Asin=Asin
Asin="Asin(",~y,")"
AsinHint="[NATIVE] native Asin takes real y returns real"

Acos=Acos
Acos="Acos(",~x,")"
AcosHint="[NATIVE] native Acos takes real x returns real"

Atan=Atan
Atan="Atan(",~x,")"
AtanHint="[NATIVE] native Atan takes real x returns real"

Atan2=Atan2
Atan2="Atan2(",~y,", ",~x,")"
Atan2Hint="[NATIVE] native Atan2 takes real y, real x returns real"

GetHandleId=GetHandleId
GetHandleId="GetHandleId(",~whichHandle,")"
GetHandleIdHint="[NATIVE] native GetHandleId takes handle whichHandle returns integer"

SubString=SubString
SubString="SubString(",~source,", ",~start,", ",~end,")"
SubStringHint="[NATIVE] native SubString takes string source, integer start, integer end returns string"

StringHash=StringHash
StringHash="StringHash(",~s,")"
StringHashHint="[NATIVE] native StringHash takes string s returns integer"

GetLocalizedString=GetLocalizedString
GetLocalizedString="GetLocalizedString(",~source,")"
GetLocalizedStringHint="[NATIVE] native GetLocalizedString takes string source returns string"

GetLocalizedHotkey=GetLocalizedHotkey
GetLocalizedHotkey="GetLocalizedHotkey(",~source,")"
GetLocalizedHotkeyHint="[NATIVE] native GetLocalizedHotkey takes string source returns integer"

GetStartLocPrioSlot=GetStartLocPrioSlot
GetStartLocPrioSlot="GetStartLocPrioSlot(",~whichStartLoc,", ",~prioSlotIndex,")"
GetStartLocPrioSlotHint="[NATIVE] native GetStartLocPrioSlot takes integer whichStartLoc, integer prioSlotIndex returns integer"

GetStartLocPrio=GetStartLocPrio
GetStartLocPrio="GetStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,")"
GetStartLocPrioHint="[NATIVE] native GetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex returns startlocprio"

IsGameTypeSupported=IsGameTypeSupported
IsGameTypeSupported="IsGameTypeSupported(",~whichGameType,")"
IsGameTypeSupportedHint="[NATIVE] native IsGameTypeSupported takes gametype whichGameType returns boolean"

GetGameTypeSelected=GetGameTypeSelected
GetGameTypeSelected="GetGameTypeSelected(",")"
GetGameTypeSelectedHint="[NATIVE] native GetGameTypeSelected takes nothing returns gametype"

GetGamePlacement=GetGamePlacement
GetGamePlacement="GetGamePlacement(",")"
GetGamePlacementHint="[NATIVE] native GetGamePlacement takes nothing returns placement"

GetResourceDensity=GetResourceDensity
GetResourceDensity="GetResourceDensity(",")"
GetResourceDensityHint="[NATIVE] native GetResourceDensity takes nothing returns mapdensity"

GetCreatureDensity=GetCreatureDensity
GetCreatureDensity="GetCreatureDensity(",")"
GetCreatureDensityHint="[NATIVE] native GetCreatureDensity takes nothing returns mapdensity"

GetStartLocationX=GetStartLocationX
GetStartLocationX="GetStartLocationX(",~whichStartLocation,")"
GetStartLocationXHint="[NATIVE] native GetStartLocationX takes integer whichStartLocation returns real"

GetStartLocationY=GetStartLocationY
GetStartLocationY="GetStartLocationY(",~whichStartLocation,")"
GetStartLocationYHint="[NATIVE] native GetStartLocationY takes integer whichStartLocation returns real"

GetStartLocationLoc=GetStartLocationLoc
GetStartLocationLoc="GetStartLocationLoc(",~whichStartLocation,")"
GetStartLocationLocHint="[NATIVE] native GetStartLocationLoc takes integer whichStartLocation returns location"

GetPlayerStartLocation=GetPlayerStartLocation
GetPlayerStartLocation="GetPlayerStartLocation(",~whichPlayer,")"
GetPlayerStartLocationHint="[NATIVE] native GetPlayerStartLocation takes player whichPlayer returns integer"

GetPlayerSelectable=GetPlayerSelectable
GetPlayerSelectable="GetPlayerSelectable(",~whichPlayer,")"
GetPlayerSelectableHint="[NATIVE] native GetPlayerSelectable takes player whichPlayer returns boolean"

GetPlayerTaxRate=GetPlayerTaxRate
GetPlayerTaxRate="GetPlayerTaxRate(",~sourcePlayer,", ",~otherPlayer,", ",~whichResource,")"
GetPlayerTaxRateHint="[NATIVE] native GetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource returns integer"

IsPlayerRacePrefSet=IsPlayerRacePrefSet
IsPlayerRacePrefSet="IsPlayerRacePrefSet(",~whichPlayer,", ",~pref,")"
IsPlayerRacePrefSetHint="[NATIVE] native IsPlayerRacePrefSet takes player whichPlayer, racepreference pref returns boolean"

GroupImmediateOrderById=GroupImmediateOrderById
GroupImmediateOrderById="GroupImmediateOrderById(",~whichGroup,", ",~orderId,")"
GroupImmediateOrderByIdHint="[NATIVE] native GroupImmediateOrderById takes group whichGroup, integer orderId returns boolean"

GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(",~whichGroup,", ",~orderName,", ",~x,", ",~y,")"
GroupPointOrderHint="[NATIVE] native GroupPointOrder takes group whichGroup, string orderName, real x, real y returns boolean"

GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(",~whichGroup,", ",~orderId,", ",~x,", ",~y,")"
GroupPointOrderByIdHint="[NATIVE] native GroupPointOrderById takes group whichGroup, integer orderId, real x, real y returns boolean"

GroupPointOrderByIdLoc=GroupPointOrderByIdLoc
GroupPointOrderByIdLoc="GroupPointOrderByIdLoc(",~whichGroup,", ",~orderId,", ",~whichLocation,")"
GroupPointOrderByIdLocHint="[NATIVE] native GroupPointOrderByIdLoc takes group whichGroup, integer orderId, location whichLocation returns boolean"

GroupTargetOrderUnit=GroupTargetOrder (Unit)
GroupTargetOrderUnit="GroupTargetOrderUnit(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderUnitHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, unit targetWidget returns boolean"

GroupTargetOrderItem=GroupTargetOrder (Item)
GroupTargetOrderItem="GroupTargetOrderItem(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderItemHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, item targetWidget returns boolean"

GroupTargetOrderDestructable=GroupTargetOrder (Destructable)
GroupTargetOrderDestructable="GroupTargetOrderDestructable(",~whichGroup,", ",~orderName,", ",~targetWidget,")"
GroupTargetOrderDestructableHint="[NATIVE] native GroupTargetOrder takes group whichGroup, string orderName, destructable targetWidget returns boolean"

GroupTargetOrderByIdUnit=GroupTargetOrderById (Unit)
GroupTargetOrderByIdUnit="GroupTargetOrderByIdUnit(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdUnitHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, unit targetWidget returns boolean"

GroupTargetOrderByIdItem=GroupTargetOrderById (Item)
GroupTargetOrderByIdItem="GroupTargetOrderByIdItem(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdItemHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, item targetWidget returns boolean"

GroupTargetOrderByIdDestructable=GroupTargetOrderById (Destructable)
GroupTargetOrderByIdDestructable="GroupTargetOrderByIdDestructable(",~whichGroup,", ",~orderId,", ",~targetWidget,")"
GroupTargetOrderByIdDestructableHint="[NATIVE] native GroupTargetOrderById takes group whichGroup, integer orderId, destructable targetWidget returns boolean"

MoveRectTo=MoveRectTo
MoveRectTo="MoveRectTo(",~whichRect,", ",~newCenterX,", ",~newCenterY,")"
MoveRectToHint="[NATIVE] native MoveRectTo takes rect whichRect, real newCenterX, real newCenterY returns nothing"

MoveRectToLoc=MoveRectToLoc
MoveRectToLoc="MoveRectToLoc(",~whichRect,", ",~newCenterLoc,")"
MoveRectToLocHint="[NATIVE] native MoveRectToLoc takes rect whichRect, location newCenterLoc returns nothing"

GetLocationZ=GetLocationZ
GetLocationZ="GetLocationZ(",~whichLocation,")"
GetLocationZHint="[NATIVE] native GetLocationZ takes location whichLocation returns real"

GetWorldBounds=GetWorldBounds
GetWorldBounds="GetWorldBounds(",")"
GetWorldBoundsHint="[NATIVE] native GetWorldBounds takes nothing returns rect"

IsTriggerWaitOnSleeps=IsTriggerWaitOnSleeps
IsTriggerWaitOnSleeps="IsTriggerWaitOnSleeps(",~whichTrigger,")"
IsTriggerWaitOnSleepsHint="[NATIVE] native IsTriggerWaitOnSleeps takes trigger whichTrigger returns boolean"

And=And
And="And(",~operandA,", ",~operandB,")"
AndHint="[NATIVE] native And takes boolexpr operandA, boolexpr operandB returns boolexpr"

Or=Or
Or="Or(",~operandA,", ",~operandB,")"
OrHint="[NATIVE] native Or takes boolexpr operandA, boolexpr operandB returns boolexpr"

Not=Not
Not="Not(",~operand,")"
NotHint="[NATIVE] native Not takes boolexpr operand returns boolexpr"

Condition=Condition
Condition="Condition(",~func,")"
ConditionHint="[NATIVE] native Condition takes code func returns conditionfunc"

Filter=Filter
Filter="Filter(",~func,")"
FilterHint="[NATIVE] native Filter takes code func returns filterfunc"

TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(",~whichTrigger,", ",~timeout,", ",~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE] native TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event"

TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(",~whichTrigger,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE] native TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event"

TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableHitEventHint="[NATIVE] native TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable whichTrackable returns event"

TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE] native TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable whichTrackable returns event"

GetClickedButton=GetClickedButton
GetClickedButton="GetClickedButton(",")"
GetClickedButtonHint="[NATIVE] native GetClickedButton takes nothing returns button"

GetClickedDialog=GetClickedDialog
GetClickedDialog="GetClickedDialog(",")"
GetClickedDialogHint="[NATIVE] native GetClickedDialog takes nothing returns dialog"

GetTournamentFinishNowPlayer=GetTournamentFinishNowPlayer
GetTournamentFinishNowPlayer="GetTournamentFinishNowPlayer(",")"
GetTournamentFinishNowPlayerHint="[NATIVE] native GetTournamentFinishNowPlayer takes nothing returns player"

GetLearnedSkill=GetLearnedSkill
GetLearnedSkill="GetLearnedSkill(",")"
GetLearnedSkillHint="[NATIVE] native GetLearnedSkill takes nothing returns integer"

GetKillingUnit=GetKillingUnit
GetKillingUnit="GetKillingUnit(",")"
GetKillingUnitHint="[NATIVE] native GetKillingUnit takes nothing returns unit"

GetTransportUnit=GetTransportUnit
GetTransportUnit="GetTransportUnit(",")"
GetTransportUnitHint="[NATIVE] native GetTransportUnit takes nothing returns unit"

GetLoadedUnit=GetLoadedUnit
GetLoadedUnit="GetLoadedUnit(",")"
GetLoadedUnitHint="[NATIVE] native GetLoadedUnit takes nothing returns unit"

GetIssuedOrderId=GetIssuedOrderId
GetIssuedOrderId="GetIssuedOrderId(",")"
GetIssuedOrderIdHint="[NATIVE] native GetIssuedOrderId takes nothing returns integer"

GetOrderPointX=GetOrderPointX
GetOrderPointX="GetOrderPointX(",")"
GetOrderPointXHint="[NATIVE] native GetOrderPointX takes nothing returns real"

GetOrderPointY=GetOrderPointY
GetOrderPointY="GetOrderPointY(",")"
GetOrderPointYHint="[NATIVE] native GetOrderPointY takes nothing returns real"

GetOrderTarget=GetOrderTarget
GetOrderTarget="GetOrderTarget(",")"
GetOrderTargetHint="[NATIVE] native GetOrderTarget takes nothing returns widget"

GetSpellAbility=GetSpellAbility
GetSpellAbility="GetSpellAbility(",")"
GetSpellAbilityHint="[NATIVE] native GetSpellAbility takes nothing returns ability"

GetSpellTargetX=GetSpellTargetX
GetSpellTargetX="GetSpellTargetX(",")"
GetSpellTargetXHint="[NATIVE] native GetSpellTargetX takes nothing returns real"

GetSpellTargetY=GetSpellTargetY
GetSpellTargetY="GetSpellTargetY(",")"
GetSpellTargetYHint="[NATIVE] native GetSpellTargetY takes nothing returns real"

TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(",~whichTrigger,", ",~whichPlayer,", ",~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE] native TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event"

TriggerRegisterDeathEventUnit=TriggerRegisterDeathEvent (Unit)
TriggerRegisterDeathEventUnit="TriggerRegisterDeathEventUnit(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventUnitHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, unit whichWidget returns event"

TriggerRegisterDeathEventItem=TriggerRegisterDeathEvent (Item)
TriggerRegisterDeathEventItem="TriggerRegisterDeathEventItem(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventItemHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, item whichWidget returns event"

TriggerRegisterDeathEventDestructable=TriggerRegisterDeathEvent (Destructable)
TriggerRegisterDeathEventDestructable="TriggerRegisterDeathEventDestructable(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventDestructableHint="[NATIVE] native TriggerRegisterDeathEvent takes trigger whichTrigger, destructable whichWidget returns event"

TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,", ",~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE] native TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event"

TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(",~whichTrigger,", ",~whichUnit,", ",~range,", ",~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE] native TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event"

GetWidgetLifeUnit=GetWidgetLife (Unit)
GetWidgetLifeUnit="GetWidgetLifeUnit(",~whichWidget,")"
GetWidgetLifeUnitHint="[NATIVE] native GetWidgetLife takes unit whichWidget returns real"

GetWidgetLifeItem=GetWidgetLife (Item)
GetWidgetLifeItem="GetWidgetLifeItem(",~whichWidget,")"
GetWidgetLifeItemHint="[NATIVE] native GetWidgetLife takes item whichWidget returns real"

GetWidgetLifeDestructable=GetWidgetLife (Destructable)
GetWidgetLifeDestructable="GetWidgetLifeDestructable(",~whichWidget,")"
GetWidgetLifeDestructableHint="[NATIVE] native GetWidgetLife takes destructable whichWidget returns real"

GetWidgetXUnit=GetWidgetX (Unit)
GetWidgetXUnit="GetWidgetXUnit(",~whichWidget,")"
GetWidgetXUnitHint="[NATIVE] native GetWidgetX takes unit whichWidget returns real"

GetWidgetXItem=GetWidgetX (Item)
GetWidgetXItem="GetWidgetXItem(",~whichWidget,")"
GetWidgetXItemHint="[NATIVE] native GetWidgetX takes item whichWidget returns real"

GetWidgetXDestructable=GetWidgetX (Destructable)
GetWidgetXDestructable="GetWidgetXDestructable(",~whichWidget,")"
GetWidgetXDestructableHint="[NATIVE] native GetWidgetX takes destructable whichWidget returns real"

GetWidgetYUnit=GetWidgetY (Unit)
GetWidgetYUnit="GetWidgetYUnit(",~whichWidget,")"
GetWidgetYUnitHint="[NATIVE] native GetWidgetY takes unit whichWidget returns real"

GetWidgetYItem=GetWidgetY (Item)
GetWidgetYItem="GetWidgetYItem(",~whichWidget,")"
GetWidgetYItemHint="[NATIVE] native GetWidgetY takes item whichWidget returns real"

GetWidgetYDestructable=GetWidgetY (Destructable)
GetWidgetYDestructable="GetWidgetYDestructable(",~whichWidget,")"
GetWidgetYDestructableHint="[NATIVE] native GetWidgetY takes destructable whichWidget returns real"

GetTriggerWidget=GetTriggerWidget
GetTriggerWidget="GetTriggerWidget(",")"
GetTriggerWidgetHint="[NATIVE] native GetTriggerWidget takes nothing returns widget"

CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableHint="[NATIVE] native CreateDestructable takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns destructable"

CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableHint="[NATIVE] native CreateDeadDestructable takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns destructable"

IsDestructableInvulnerable=IsDestructableInvulnerable
IsDestructableInvulnerable="IsDestructableInvulnerable(",~whichDestructable,")"
IsDestructableInvulnerableHint="[NATIVE] native IsDestructableInvulnerable takes destructable whichDestructable returns boolean"

GetDestructableX=GetDestructableX
GetDestructableX="GetDestructableX(",~whichDestructable,")"
GetDestructableXHint="[NATIVE] native GetDestructableX takes destructable whichDestructable returns real"

GetDestructableY=GetDestructableY
GetDestructableY="GetDestructableY(",~whichDestructable,")"
GetDestructableYHint="[NATIVE] native GetDestructableY takes destructable whichDestructable returns real"

GetTriggerDestructable=GetTriggerDestructable
GetTriggerDestructable="GetTriggerDestructable(",")"
GetTriggerDestructableHint="[NATIVE] native GetTriggerDestructable takes nothing returns destructable"

CreateItem=CreateItem
CreateItem="CreateItem(",~itemTypeId,", ",~x,", ",~y,")"
CreateItemHint="[NATIVE] native CreateItem takes integer itemTypeId, real x, real y returns item"

GetItemX=GetItemX
GetItemX="GetItemX(",~whichItem,")"
GetItemXHint="[NATIVE] native GetItemX takes item whichItem returns real"

GetItemY=GetItemY
GetItemY="GetItemY(",~whichItem,")"
GetItemYHint="[NATIVE] native GetItemY takes item whichItem returns real"

IsItemVisible=IsItemVisible
IsItemVisible="IsItemVisible(",~whichItem,")"
IsItemVisibleHint="[NATIVE] native IsItemVisible takes item whichItem returns boolean"

IsItemPowerup=IsItemPowerup
IsItemPowerup="IsItemPowerup(",~whichItem,")"
IsItemPowerupHint="[NATIVE] native IsItemPowerup takes item whichItem returns boolean"

IsItemSellable=IsItemSellable
IsItemSellable="IsItemSellable(",~whichItem,")"
IsItemSellableHint="[NATIVE] native IsItemSellable takes item whichItem returns boolean"

IsItemPawnable=IsItemPawnable
IsItemPawnable="IsItemPawnable(",~whichItem,")"
IsItemPawnableHint="[NATIVE] native IsItemPawnable takes item whichItem returns boolean"

IsItemIdPowerup=IsItemIdPowerup
IsItemIdPowerup="IsItemIdPowerup(",~itemTypeId,")"
IsItemIdPowerupHint="[NATIVE] native IsItemIdPowerup takes integer itemTypeId returns boolean"

IsItemIdSellable=IsItemIdSellable
IsItemIdSellable="IsItemIdSellable(",~itemTypeId,")"
IsItemIdSellableHint="[NATIVE] native IsItemIdSellable takes integer itemTypeId returns boolean"

IsItemIdPawnable=IsItemIdPawnable
IsItemIdPawnable="IsItemIdPawnable(",~itemTypeId,")"
IsItemIdPawnableHint="[NATIVE] native IsItemIdPawnable takes integer itemTypeId returns boolean"

CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(",~whichPlayer,", ",~unitname,", ",~x,", ",~y,", ",~facing,")"
CreateUnitByNameHint="[NATIVE] native CreateUnitByName takes player whichPlayer, string unitname, real x, real y, real facing returns unit"

CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(",~whichPlayer,", ",~unitname,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocByNameHint="[NATIVE] native CreateUnitAtLocByName takes player whichPlayer, string unitname, location whichLocation, real facing returns unit"

CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateCorpseHint="[NATIVE] native CreateCorpse takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

GetUnitPropWindow=GetUnitPropWindow
GetUnitPropWindow="GetUnitPropWindow(",~whichUnit,")"
GetUnitPropWindowHint="[NATIVE] native GetUnitPropWindow takes unit whichUnit returns real"

GetUnitDefaultPropWindow=GetUnitDefaultPropWindow
GetUnitDefaultPropWindow="GetUnitDefaultPropWindow(",~whichUnit,")"
GetUnitDefaultPropWindowHint="[NATIVE] native GetUnitDefaultPropWindow takes unit whichUnit returns real"

GetHeroStr=GetHeroStr
GetHeroStr="GetHeroStr(",~whichHero,", ",~includeBonuses,")"
GetHeroStrHint="[NATIVE] native GetHeroStr takes unit whichHero, boolean includeBonuses returns integer"

GetHeroAgi=GetHeroAgi
GetHeroAgi="GetHeroAgi(",~whichHero,", ",~includeBonuses,")"
GetHeroAgiHint="[NATIVE] native GetHeroAgi takes unit whichHero, boolean includeBonuses returns integer"

GetHeroInt=GetHeroInt
GetHeroInt="GetHeroInt(",~whichHero,", ",~includeBonuses,")"
GetHeroIntHint="[NATIVE] native GetHeroInt takes unit whichHero, boolean includeBonuses returns integer"

UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(",~whichHero,", ",~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE] native UnitStripHeroLevel takes unit whichHero, integer howManyLevels returns boolean"

UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(",~whichHero,", ",~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE] native UnitModifySkillPoints takes unit whichHero, integer skillPointDelta returns boolean"

DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,")"
DecUnitAbilityLevelHint="[NATIVE] native DecUnitAbilityLevel takes unit whichUnit, integer abilityTypeId returns integer"

IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,")"
IncUnitAbilityLevelHint="[NATIVE] native IncUnitAbilityLevel takes unit whichUnit, integer abilityTypeId returns integer"

SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(",~whichUnit,", ",~abilityTypeId,", ",~level,")"
SetUnitAbilityLevelHint="[NATIVE] native SetUnitAbilityLevel takes unit whichUnit, integer abilityTypeId, integer level returns integer"

ReviveHero=ReviveHero
ReviveHero="ReviveHero(",~whichHero,", ",~x,", ",~y,", ",~doEyecandy,")"
ReviveHeroHint="[NATIVE] native ReviveHero takes unit whichHero, real x, real y, boolean doEyecandy returns boolean"

IsUnitPaused=IsUnitPaused
IsUnitPaused="IsUnitPaused(",~whichHero,")"
IsUnitPausedHint="[NATIVE] native IsUnitPaused takes unit whichHero returns boolean"

UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(",~whichUnit,", ",~whichItem,")"
UnitAddItemHint="[NATIVE] native UnitAddItem takes unit whichUnit, item whichItem returns boolean"

UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(",~whichUnit,", ",~itemTypeId,")"
UnitAddItemByIdHint="[NATIVE] native UnitAddItemById takes unit whichUnit, integer itemTypeId returns item"

UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(",~whichUnit,", ",~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE] native UnitRemoveItemFromSlot takes unit whichUnit, integer itemSlot returns item"

UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(",~whichUnit,", ",~itemSlot,")"
UnitItemInSlotHint="[NATIVE] native UnitItemInSlot takes unit whichUnit, integer itemSlot returns item"

UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(",~whichUnit,")"
UnitInventorySizeHint="[NATIVE] native UnitInventorySize takes unit whichUnit returns integer"

UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitDropItemPointHint="[NATIVE] native UnitDropItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"

UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(",~whichUnit,", ",~whichItem,", ",~slot,")"
UnitDropItemSlotHint="[NATIVE] native UnitDropItemSlot takes unit whichUnit, item whichItem, integer slot returns boolean"

UnitDropItemTargetUnit=UnitDropItemTarget (Unit)
UnitDropItemTargetUnit="UnitDropItemTargetUnit(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetUnitHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, unit target returns boolean"

UnitDropItemTargetItem=UnitDropItemTarget (Item)
UnitDropItemTargetItem="UnitDropItemTargetItem(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetItemHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, item target returns boolean"

UnitDropItemTargetDestructable=UnitDropItemTarget (Destructable)
UnitDropItemTargetDestructable="UnitDropItemTargetDestructable(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetDestructableHint="[NATIVE] native UnitDropItemTarget takes unit whichUnit, item whichItem, destructable target returns boolean"

UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitUseItemPointHint="[NATIVE] native UnitUseItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"

UnitUseItemTargetUnit=UnitUseItemTarget (Unit)
UnitUseItemTargetUnit="UnitUseItemTargetUnit(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetUnitHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, unit target returns boolean"

UnitUseItemTargetItem=UnitUseItemTarget (Item)
UnitUseItemTargetItem="UnitUseItemTargetItem(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetItemHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, item target returns boolean"

UnitUseItemTargetDestructable=UnitUseItemTarget (Destructable)
UnitUseItemTargetDestructable="UnitUseItemTargetDestructable(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitUseItemTargetDestructableHint="[NATIVE] native UnitUseItemTarget takes unit whichUnit, item whichItem, destructable target returns boolean"

GetUnitState=GetUnitState
GetUnitState="GetUnitState(",~whichUnit,", ",~whichUnitState,")"
GetUnitStateHint="[NATIVE] native GetUnitState takes unit whichUnit, unitstate whichUnitState returns real"

IsUnitDetected=IsUnitDetected
IsUnitDetected="IsUnitDetected(",~whichUnit,", ",~whichPlayer,")"
IsUnitDetectedHint="[NATIVE] native IsUnitDetected takes unit whichUnit, player whichPlayer returns boolean"

IsUnit=IsUnit
IsUnit="IsUnit(",~whichUnit,", ",~whichSpecifiedUnit,")"
IsUnitHint="[NATIVE] native IsUnit takes unit whichUnit, unit whichSpecifiedUnit returns boolean"

IsUnitHidden=IsUnitHidden
IsUnitHidden="IsUnitHidden(",~whichUnit,")"
IsUnitHiddenHint="[NATIVE] native IsUnitHidden takes unit whichUnit returns boolean"

IsUnitIllusion=IsUnitIllusion
IsUnitIllusion="IsUnitIllusion(",~whichUnit,")"
IsUnitIllusionHint="[NATIVE] native IsUnitIllusion takes unit whichUnit returns boolean"

IsUnitInTransport=IsUnitInTransport
IsUnitInTransport="IsUnitInTransport(",~whichUnit,", ",~whichTransport,")"
IsUnitInTransportHint="[NATIVE] native IsUnitInTransport takes unit whichUnit, unit whichTransport returns boolean"

IsUnitLoaded=IsUnitLoaded
IsUnitLoaded="IsUnitLoaded(",~whichUnit,")"
IsUnitLoadedHint="[NATIVE] native IsUnitLoaded takes unit whichUnit returns boolean"

IsHeroUnitId=IsHeroUnitId
IsHeroUnitId="IsHeroUnitId(",~unitTypeId,")"
IsHeroUnitIdHint="[NATIVE] native IsHeroUnitId takes integer unitTypeId returns boolean"

UnitAddType=UnitAddType
UnitAddType="UnitAddType(",~whichUnit,", ",~whichUnitType,")"
UnitAddTypeHint="[NATIVE] native UnitAddType takes unit whichUnit, unittype whichUnitType returns boolean"

UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(",~whichUnit,", ",~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE] native UnitRemoveType takes unit whichUnit, unittype whichUnitType returns boolean"

UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(",~whichUnit,", ",~abilityTypeId,")"
UnitAddAbilityHint="[NATIVE] native UnitAddAbility takes unit whichUnit, integer abilityTypeId returns boolean"

UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(",~whichUnit,", ",~abilityTypeId,")"
UnitRemoveAbilityHint="[NATIVE] native UnitRemoveAbility takes unit whichUnit, integer abilityTypeId returns boolean"

UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitHasBuffsExHint="[NATIVE] native UnitHasBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean"

UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitCountBuffsExHint="[NATIVE] native UnitCountBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer"

UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(",~whichUnit,")"
UnitCanSleepHint="[NATIVE] native UnitCanSleep takes unit whichUnit returns boolean"

UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(",~whichUnit,")"
UnitIsSleepingHint="[NATIVE] native UnitIsSleeping takes unit whichUnit returns boolean"

UnitIgnoreAlarm=UnitIgnoreAlarm
UnitIgnoreAlarm="UnitIgnoreAlarm(",~whichUnit,", ",~flag,")"
UnitIgnoreAlarmHint="[NATIVE] native UnitIgnoreAlarm takes unit whichUnit, boolean flag returns boolean"

UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(",~whichUnit,", ",~delay,", ",~radius,", ",~x,", ",~y,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamagePointHint="[NATIVE] native UnitDamagePoint takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetUnit=UnitDamageTarget (Unit)
UnitDamageTargetUnit="UnitDamageTargetUnit(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetUnitHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, unit target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetItem=UnitDamageTarget (Item)
UnitDamageTargetItem="UnitDamageTargetItem(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetItemHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, item target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

UnitDamageTargetDestructable=UnitDamageTarget (Destructable)
UnitDamageTargetDestructable="UnitDamageTargetDestructable(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetDestructableHint="[NATIVE] native UnitDamageTarget takes unit whichUnit, destructable target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"

IssueImmediateOrderById=IssueImmediateOrderById
IssueImmediateOrderById="IssueImmediateOrderById(",~whichUnit,", ",~orderId,")"
IssueImmediateOrderByIdHint="[NATIVE] native IssueImmediateOrderById takes unit whichUnit, integer orderId returns boolean"

IssuePointOrder=IssuePointOrder
IssuePointOrder="IssuePointOrder(",~whichUnit,", ",~orderName,", ",~x,", ",~y,")"
IssuePointOrderHint="[NATIVE] native IssuePointOrder takes unit whichUnit, string orderName, real x, real y returns boolean"

IssuePointOrderById=IssuePointOrderById
IssuePointOrderById="IssuePointOrderById(",~whichUnit,", ",~orderId,", ",~x,", ",~y,")"
IssuePointOrderByIdHint="[NATIVE] native IssuePointOrderById takes unit whichUnit, integer orderId, real x, real y returns boolean"

IssuePointOrderByIdLoc=IssuePointOrderByIdLoc
IssuePointOrderByIdLoc="IssuePointOrderByIdLoc(",~whichUnit,", ",~orderId,", ",~whichLocation,")"
IssuePointOrderByIdLocHint="[NATIVE] native IssuePointOrderByIdLoc takes unit whichUnit, integer orderId, location whichLocation returns boolean"

IssueTargetOrderUnit=IssueTargetOrder (Unit)
IssueTargetOrderUnit="IssueTargetOrderUnit(",~whichUnit,", ",~orderName,", ",~targetWidget,")"
IssueTargetOrderUnitHint="[NATIVE] native IssueTargetOrder takes unit whichUnit, string orderName, unit targetWidget returns boolean"

IssueTargetOrderItem=IssueTargetOrder (Item)
IssueTargetOrderItem="IssueTargetOrderItem(",~whichUnit,", ",~orderName,", ",~targetWidget,")"
IssueTargetOrderItemHint="[NATIVE] native IssueTargetOrder takes unit whichUnit, string orderName, item targetWidget returns boolean"

IssueTargetOrderDestructable=IssueTargetOrder (Destructable)
IssueTargetOrderDestructable="IssueTargetOrderDestructable(",~whichUnit,", ",~orderName,", ",~targetWidget,")"
IssueTargetOrderDestructableHint="[NATIVE] native IssueTargetOrder takes unit whichUnit, string orderName, destructable targetWidget returns boolean"

IssueTargetOrderByIdUnit=IssueTargetOrderById (Unit)
IssueTargetOrderByIdUnit="IssueTargetOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
IssueTargetOrderByIdUnitHint="[NATIVE] native IssueTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget returns boolean"

IssueTargetOrderByIdItem=IssueTargetOrderById (Item)
IssueTargetOrderByIdItem="IssueTargetOrderByIdItem(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
IssueTargetOrderByIdItemHint="[NATIVE] native IssueTargetOrderById takes unit whichUnit, integer orderId, item targetWidget returns boolean"

IssueTargetOrderByIdDestructable=IssueTargetOrderById (Destructable)
IssueTargetOrderByIdDestructable="IssueTargetOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
IssueTargetOrderByIdDestructableHint="[NATIVE] native IssueTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget returns boolean"

IssueInstantPointOrderUnit=IssueInstantPointOrder (Unit)
IssueInstantPointOrderUnit="IssueInstantPointOrderUnit(",~whichUnit,", ",~orderName,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderUnitHint="[NATIVE] native IssueInstantPointOrder takes unit whichUnit, string orderName, real x, real y, unit instantTargetWidget returns boolean"

IssueInstantPointOrderItem=IssueInstantPointOrder (Item)
IssueInstantPointOrderItem="IssueInstantPointOrderItem(",~whichUnit,", ",~orderName,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderItemHint="[NATIVE] native IssueInstantPointOrder takes unit whichUnit, string orderName, real x, real y, item instantTargetWidget returns boolean"

IssueInstantPointOrderDestructable=IssueInstantPointOrder (Destructable)
IssueInstantPointOrderDestructable="IssueInstantPointOrderDestructable(",~whichUnit,", ",~orderName,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderDestructableHint="[NATIVE] native IssueInstantPointOrder takes unit whichUnit, string orderName, real x, real y, destructable instantTargetWidget returns boolean"

IssueInstantPointOrderByIdUnit=IssueInstantPointOrderById (Unit)
IssueInstantPointOrderByIdUnit="IssueInstantPointOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderByIdUnitHint="[NATIVE] native IssueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, unit instantTargetWidget returns boolean"

IssueInstantPointOrderByIdItem=IssueInstantPointOrderById (Item)
IssueInstantPointOrderByIdItem="IssueInstantPointOrderByIdItem(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderByIdItemHint="[NATIVE] native IssueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, item instantTargetWidget returns boolean"

IssueInstantPointOrderByIdDestructable=IssueInstantPointOrderById (Destructable)
IssueInstantPointOrderByIdDestructable="IssueInstantPointOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderByIdDestructableHint="[NATIVE] native IssueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderUnitUnit=IssueInstantTargetOrder (Unit, Unit)
IssueInstantTargetOrderUnitUnit="IssueInstantTargetOrderUnitUnit(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderUnitUnitHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, unit targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderItemUnit=IssueInstantTargetOrder (Item, Unit)
IssueInstantTargetOrderItemUnit="IssueInstantTargetOrderItemUnit(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderItemUnitHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, item targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderDestructableUnit=IssueInstantTargetOrder (Destructable, Unit)
IssueInstantTargetOrderDestructableUnit="IssueInstantTargetOrderDestructableUnit(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderDestructableUnitHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, destructable targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderUnitItem=IssueInstantTargetOrder (Unit, Item)
IssueInstantTargetOrderUnitItem="IssueInstantTargetOrderUnitItem(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderUnitItemHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, unit targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderItemItem=IssueInstantTargetOrder (Item, Item)
IssueInstantTargetOrderItemItem="IssueInstantTargetOrderItemItem(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderItemItemHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, item targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderDestructableItem=IssueInstantTargetOrder (Destructable, Item)
IssueInstantTargetOrderDestructableItem="IssueInstantTargetOrderDestructableItem(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderDestructableItemHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, destructable targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderUnitDestructable=IssueInstantTargetOrder (Unit, Destructable)
IssueInstantTargetOrderUnitDestructable="IssueInstantTargetOrderUnitDestructable(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderUnitDestructableHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, unit targetWidget, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderItemDestructable=IssueInstantTargetOrder (Item, Destructable)
IssueInstantTargetOrderItemDestructable="IssueInstantTargetOrderItemDestructable(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderItemDestructableHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, item targetWidget, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderDestructableDestructable=IssueInstantTargetOrder (Destructable, Destructable)
IssueInstantTargetOrderDestructableDestructable="IssueInstantTargetOrderDestructableDestructable(",~whichUnit,", ",~orderName,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderDestructableDestructableHint="[NATIVE] native IssueInstantTargetOrder takes unit whichUnit, string orderName, destructable targetWidget, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdUnitUnit=IssueInstantTargetOrderById (Unit, Unit)
IssueInstantTargetOrderByIdUnitUnit="IssueInstantTargetOrderByIdUnitUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdUnitUnitHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdItemUnit=IssueInstantTargetOrderById (Item, Unit)
IssueInstantTargetOrderByIdItemUnit="IssueInstantTargetOrderByIdItemUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdItemUnitHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdDestructableUnit=IssueInstantTargetOrderById (Destructable, Unit)
IssueInstantTargetOrderByIdDestructableUnit="IssueInstantTargetOrderByIdDestructableUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdDestructableUnitHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, unit instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdUnitItem=IssueInstantTargetOrderById (Unit, Item)
IssueInstantTargetOrderByIdUnitItem="IssueInstantTargetOrderByIdUnitItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdUnitItemHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdItemItem=IssueInstantTargetOrderById (Item, Item)
IssueInstantTargetOrderByIdItemItem="IssueInstantTargetOrderByIdItemItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdItemItemHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdDestructableItem=IssueInstantTargetOrderById (Destructable, Item)
IssueInstantTargetOrderByIdDestructableItem="IssueInstantTargetOrderByIdDestructableItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdDestructableItemHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, item instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdUnitDestructable=IssueInstantTargetOrderById (Unit, Destructable)
IssueInstantTargetOrderByIdUnitDestructable="IssueInstantTargetOrderByIdUnitDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdUnitDestructableHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdItemDestructable=IssueInstantTargetOrderById (Item, Destructable)
IssueInstantTargetOrderByIdItemDestructable="IssueInstantTargetOrderByIdItemDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdItemDestructableHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, destructable instantTargetWidget returns boolean"

IssueInstantTargetOrderByIdDestructableDestructable=IssueInstantTargetOrderById (Destructable, Destructable)
IssueInstantTargetOrderByIdDestructableDestructable="IssueInstantTargetOrderByIdDestructableDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdDestructableDestructableHint="[NATIVE] native IssueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, destructable instantTargetWidget returns boolean"

IssueBuildOrder=IssueBuildOrder
IssueBuildOrder="IssueBuildOrder(",~whichPeon,", ",~unitToBuild,", ",~x,", ",~y,")"
IssueBuildOrderHint="[NATIVE] native IssueBuildOrder takes unit whichPeon, string unitToBuild, real x, real y returns boolean"

IssueBuildOrderById=IssueBuildOrderById
IssueBuildOrderById="IssueBuildOrderById(",~whichPeon,", ",~unitTypeId,", ",~x,", ",~y,")"
IssueBuildOrderByIdHint="[NATIVE] native IssueBuildOrderById takes unit whichPeon, integer unitTypeId, real x, real y returns boolean"

IssueNeutralImmediateOrder=IssueNeutralImmediateOrder
IssueNeutralImmediateOrder="IssueNeutralImmediateOrder(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,")"
IssueNeutralImmediateOrderHint="[NATIVE] native IssueNeutralImmediateOrder takes player whichPlayer, unit neutralStructure, string unitToBuild returns boolean"

IssueNeutralPointOrder=IssueNeutralPointOrder
IssueNeutralPointOrder="IssueNeutralPointOrder(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~x,", ",~y,")"
IssueNeutralPointOrderHint="[NATIVE] native IssueNeutralPointOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, real x, real y returns boolean"

IssueNeutralPointOrderById=IssueNeutralPointOrderById
IssueNeutralPointOrderById="IssueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~x,", ",~y,")"
IssueNeutralPointOrderByIdHint="[NATIVE] native IssueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, real x, real y returns boolean"

IssueNeutralTargetOrderUnit=IssueNeutralTargetOrder (Unit)
IssueNeutralTargetOrderUnit="IssueNeutralTargetOrderUnit(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~target,")"
IssueNeutralTargetOrderUnitHint="[NATIVE] native IssueNeutralTargetOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, unit target returns boolean"

IssueNeutralTargetOrderItem=IssueNeutralTargetOrder (Item)
IssueNeutralTargetOrderItem="IssueNeutralTargetOrderItem(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~target,")"
IssueNeutralTargetOrderItemHint="[NATIVE] native IssueNeutralTargetOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, item target returns boolean"

IssueNeutralTargetOrderDestructable=IssueNeutralTargetOrder (Destructable)
IssueNeutralTargetOrderDestructable="IssueNeutralTargetOrderDestructable(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~target,")"
IssueNeutralTargetOrderDestructableHint="[NATIVE] native IssueNeutralTargetOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, destructable target returns boolean"

IssueNeutralTargetOrderByIdUnit=IssueNeutralTargetOrderById (Unit)
IssueNeutralTargetOrderByIdUnit="IssueNeutralTargetOrderByIdUnit(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
IssueNeutralTargetOrderByIdUnitHint="[NATIVE] native IssueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, unit target returns boolean"

IssueNeutralTargetOrderByIdItem=IssueNeutralTargetOrderById (Item)
IssueNeutralTargetOrderByIdItem="IssueNeutralTargetOrderByIdItem(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
IssueNeutralTargetOrderByIdItemHint="[NATIVE] native IssueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, item target returns boolean"

IssueNeutralTargetOrderByIdDestructable=IssueNeutralTargetOrderById (Destructable)
IssueNeutralTargetOrderByIdDestructable="IssueNeutralTargetOrderByIdDestructable(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
IssueNeutralTargetOrderByIdDestructableHint="[NATIVE] native IssueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, destructable target returns boolean"

WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(",~waygate,")"
WaygateGetDestinationXHint="[NATIVE] native WaygateGetDestinationX takes unit waygate returns real"

WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(",~waygate,")"
WaygateGetDestinationYHint="[NATIVE] native WaygateGetDestinationY takes unit waygate returns real"

WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(",~waygate,")"
WaygateIsActiveHint="[NATIVE] native WaygateIsActive takes unit waygate returns boolean"

AddItemToAllStock=AddItemToAllStock
AddItemToAllStock="AddItemToAllStock(",~itemTypeId,", ",~currentStock,", ",~stockMax,")"
AddItemToAllStockHint="[NATIVE] native AddItemToAllStock takes integer itemTypeId, integer currentStock, integer stockMax returns nothing"

AddItemToStock=AddItemToStock
AddItemToStock="AddItemToStock(",~whichUnit,", ",~itemTypeId,", ",~currentStock,", ",~stockMax,")"
AddItemToStockHint="[NATIVE] native AddItemToStock takes unit whichUnit, integer itemTypeId, integer currentStock, integer stockMax returns nothing"

AddUnitToAllStock=AddUnitToAllStock
AddUnitToAllStock="AddUnitToAllStock(",~unitTypeId,", ",~currentStock,", ",~stockMax,")"
AddUnitToAllStockHint="[NATIVE] native AddUnitToAllStock takes integer unitTypeId, integer currentStock, integer stockMax returns nothing"

AddUnitToStock=AddUnitToStock
AddUnitToStock="AddUnitToStock(",~whichUnit,", ",~unitTypeId,", ",~currentStock,", ",~stockMax,")"
AddUnitToStockHint="[NATIVE] native AddUnitToStock takes unit whichUnit, integer unitTypeId, integer currentStock, integer stockMax returns nothing"

Player=Player
Player="Player(",~number,")"
PlayerHint="[NATIVE] native Player takes integer number returns player"

IsPlayerObserver=IsPlayerObserver
IsPlayerObserver="IsPlayerObserver(",~whichPlayer,")"
IsPlayerObserverHint="[NATIVE] native IsPlayerObserver takes player whichPlayer returns boolean"

IsVisibleToPlayer=IsVisibleToPlayer
IsVisibleToPlayer="IsVisibleToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsVisibleToPlayerHint="[NATIVE] native IsVisibleToPlayer takes real x, real y, player whichPlayer returns boolean"

IsFoggedToPlayer=IsFoggedToPlayer
IsFoggedToPlayer="IsFoggedToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsFoggedToPlayerHint="[NATIVE] native IsFoggedToPlayer takes real x, real y, player whichPlayer returns boolean"

IsMaskedToPlayer=IsMaskedToPlayer
IsMaskedToPlayer="IsMaskedToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsMaskedToPlayerHint="[NATIVE] native IsMaskedToPlayer takes real x, real y, player whichPlayer returns boolean"

GetPlayerId=GetPlayerId
GetPlayerId="GetPlayerId(",~whichPlayer,")"
GetPlayerIdHint="[NATIVE] native GetPlayerId takes player whichPlayer returns integer"

GetPlayerHandicap=GetPlayerHandicap
GetPlayerHandicap="GetPlayerHandicap(",~whichPlayer,")"
GetPlayerHandicapHint="[NATIVE] native GetPlayerHandicap takes player whichPlayer returns real"

GetPlayerHandicapXP=GetPlayerHandicapXP
GetPlayerHandicapXP="GetPlayerHandicapXP(",~whichPlayer,")"
GetPlayerHandicapXPHint="[NATIVE] native GetPlayerHandicapXP takes player whichPlayer returns real"

GetPlayerTechMaxAllowed=GetPlayerTechMaxAllowed
GetPlayerTechMaxAllowed="GetPlayerTechMaxAllowed(",~whichPlayer,", ",~techid,")"
GetPlayerTechMaxAllowedHint="[NATIVE] native GetPlayerTechMaxAllowed takes player whichPlayer, integer techid returns integer"

GetPlayerTechResearched=GetPlayerTechResearched
GetPlayerTechResearched="GetPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~specificonly,")"
GetPlayerTechResearchedHint="[NATIVE] native GetPlayerTechResearched takes player whichPlayer, integer techid, boolean specificonly returns boolean"

GetPlayerTechCount=GetPlayerTechCount
GetPlayerTechCount="GetPlayerTechCount(",~whichPlayer,", ",~techid,", ",~specificonly,")"
GetPlayerTechCountHint="[NATIVE] native GetPlayerTechCount takes player whichPlayer, integer techid, boolean specificonly returns integer"

CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRectHint="[NATIVE] native CreateFogModifierRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision, boolean afterUnits returns fogmodifier"

CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE] native CreateFogModifierRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"

CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE] native CreateFogModifierRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"

VersionGet=VersionGet
VersionGet="VersionGet(",")"
VersionGetHint="[NATIVE] native VersionGet takes nothing returns version"

VersionCompatible=VersionCompatible
VersionCompatible="VersionCompatible(",~whichVersion,")"
VersionCompatibleHint="[NATIVE] native VersionCompatible takes version whichVersion returns boolean"

VersionSupported=VersionSupported
VersionSupported="VersionSupported(",~whichVersion,")"
VersionSupportedHint="[NATIVE] native VersionSupported takes version whichVersion returns boolean"

RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(",~sourceDirName,", ",~destDirName,")"
RenameSaveDirectoryHint="[NATIVE] native RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean"

RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(",~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE] native RemoveSaveDirectory takes string sourceDirName returns boolean"

CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(",~sourceSaveName,", ",~destSaveName,")"
CopySaveGameHint="[NATIVE] native CopySaveGame takes string sourceSaveName, string destSaveName returns boolean"

GetFloatGameState=GetFloatGameState
GetFloatGameState="GetFloatGameState(",~whichFloatGameState,")"
GetFloatGameStateHint="[NATIVE] native GetFloatGameState takes fgamestate whichFloatGameState returns real"

GetDefaultDifficulty=GetDefaultDifficulty
GetDefaultDifficulty="GetDefaultDifficulty(",")"
GetDefaultDifficultyHint="[NATIVE] native GetDefaultDifficulty takes nothing returns gamedifficulty"

GetCustomCampaignButtonVisible=GetCustomCampaignButtonVisible
GetCustomCampaignButtonVisible="GetCustomCampaignButtonVisible(",~whichButton,")"
GetCustomCampaignButtonVisibleHint="[NATIVE] native GetCustomCampaignButtonVisible takes integer whichButton returns boolean"

DialogAddQuitButton=DialogAddQuitButton
DialogAddQuitButton="DialogAddQuitButton(",~whichDialog,", ",~doScoreScreen,", ",~buttonText,", ",~hotkey,")"
DialogAddQuitButtonHint="[NATIVE] native DialogAddQuitButton takes dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey returns button"

ReloadGameCachesFromDisk=ReloadGameCachesFromDisk
ReloadGameCachesFromDisk="ReloadGameCachesFromDisk(",")"
ReloadGameCachesFromDiskHint="[NATIVE] native ReloadGameCachesFromDisk takes nothing returns boolean"

SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(",~whichCache,")"
SaveGameCacheHint="[NATIVE] native SaveGameCache takes gamecache whichCache returns boolean"

StoreUnit=StoreUnit
StoreUnit="StoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichUnit,")"
StoreUnitHint="[NATIVE] native StoreUnit takes gamecache whichGamecache, string missionKey, string key, unit whichUnit returns boolean"

StoreString=StoreString
StoreString="StoreString(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreStringHint="[NATIVE] native StoreString takes gamecache whichGamecache, string missionKey, string key, string value returns boolean"

SyncStoredString=SyncStoredString
SyncStoredString="SyncStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredStringHint="[NATIVE] native SyncStoredString takes gamecache whichGamecache, string missionKey, string key returns nothing"

FlushStoredString=FlushStoredString
FlushStoredString="FlushStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
FlushStoredStringHint="[NATIVE] native FlushStoredString takes gamecache whichGamecache, string missionKey, string key returns nothing"

GetStoredInteger=GetStoredInteger
GetStoredInteger="GetStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredIntegerHint="[NATIVE] native GetStoredInteger takes gamecache whichGamecache, string missionKey, string key returns integer"

GetStoredReal=GetStoredReal
GetStoredReal="GetStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredRealHint="[NATIVE] native GetStoredReal takes gamecache whichGamecache, string missionKey, string key returns real"

GetStoredBoolean=GetStoredBoolean
GetStoredBoolean="GetStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredBooleanHint="[NATIVE] native GetStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns boolean"

GetStoredString=GetStoredString
GetStoredString="GetStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredStringHint="[NATIVE] native GetStoredString takes gamecache whichGamecache, string missionKey, string key returns string"

RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
RestoreUnitHint="[NATIVE] native RestoreUnit takes gamecache whichGamecache, string missionKey, string key, player whichPlayer, real x, real y, real facing returns unit"

InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE] native InitHashtable takes nothing returns hashtable"

SaveStr=SaveStr
SaveStr="SaveStr(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveStrHint="[NATIVE] native SaveStr takes hashtable whichHashtable, integer parentKey, integer childKey, string value returns boolean"

SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichPlayer,")"
SavePlayerHandleHint="[NATIVE] native SavePlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, player whichPlayer returns boolean"

SaveWidgetHandleUnit=SaveWidgetHandle (Unit)
SaveWidgetHandleUnit="SaveWidgetHandleUnit(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleUnitHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichWidget returns boolean"

SaveWidgetHandleItem=SaveWidgetHandle (Item)
SaveWidgetHandleItem="SaveWidgetHandleItem(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleItemHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichWidget returns boolean"

SaveWidgetHandleDestructable=SaveWidgetHandle (Destructable)
SaveWidgetHandleDestructable="SaveWidgetHandleDestructable(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleDestructableHint="[NATIVE] native SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichWidget returns boolean"

SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE] native SaveDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichDestructable returns boolean"

SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItem,")"
SaveItemHandleHint="[NATIVE] native SaveItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichItem returns boolean"

SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnit,")"
SaveUnitHandleHint="[NATIVE] native SaveUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichUnit returns boolean"

SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAbility,")"
SaveAbilityHandleHint="[NATIVE] native SaveAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ability whichAbility returns boolean"

SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimer,")"
SaveTimerHandleHint="[NATIVE] native SaveTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timer whichTimer returns boolean"

SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE] native SaveTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trigger whichTrigger returns boolean"

SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE] native SaveTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean"

SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE] native SaveTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean"

SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE] native SaveTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey, event whichEvent returns boolean"

SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichForce,")"
SaveForceHandleHint="[NATIVE] native SaveForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey, force whichForce returns boolean"

SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichGroup,")"
SaveGroupHandleHint="[NATIVE] native SaveGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey, group whichGroup returns boolean"

SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLocation,")"
SaveLocationHandleHint="[NATIVE] native SaveLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey, location whichLocation returns boolean"

SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRect,")"
SaveRectHandleHint="[NATIVE] native SaveRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, rect whichRect returns boolean"

SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE] native SaveBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean"

SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichSound,")"
SaveSoundHandleHint="[NATIVE] native SaveSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sound whichSound returns boolean"

SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEffect,")"
SaveEffectHandleHint="[NATIVE] native SaveEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, effect whichEffect returns boolean"

SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE] native SaveUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean"

SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE] native SaveItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, itempool whichItempool returns boolean"

SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuest,")"
SaveQuestHandleHint="[NATIVE] native SaveQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey, quest whichQuest returns boolean"

SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE] native SaveQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, questitem whichQuestitem returns boolean"

SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE] native SaveDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean"

SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE] native SaveTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean"

SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE] native SaveLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean"

SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE] native SaveMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean"

SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE] native SaveMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean"

SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE] native SaveTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trackable whichTrackable returns boolean"

SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDialog,")"
SaveDialogHandleHint="[NATIVE] native SaveDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, dialog whichDialog returns boolean"

SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichButton,")"
SaveButtonHandleHint="[NATIVE] native SaveButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey, button whichButton returns boolean"

SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE] native SaveTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey, texttag whichTexttag returns boolean"

SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLightning,")"
SaveLightningHandleHint="[NATIVE] native SaveLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey, lightning whichLightning returns boolean"

SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichImage,")"
SaveImageHandleHint="[NATIVE] native SaveImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, image whichImage returns boolean"

SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE] native SaveUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean"

SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRegion,")"
SaveRegionHandleHint="[NATIVE] native SaveRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, region whichRegion returns boolean"

SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogState,")"
SaveFogStateHandleHint="[NATIVE] native SaveFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogstate whichFogState returns boolean"

SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE] native SaveFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean"

SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAgent,")"
SaveAgentHandleHint="[NATIVE] native SaveAgentHandle takes hashtable whichHashtable, integer parentKey, integer childKey, agent whichAgent returns boolean"

SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE] native SaveHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, hashtable whichHashtable returns boolean"

LoadInteger=LoadInteger
LoadInteger="LoadInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadIntegerHint="[NATIVE] native LoadInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns integer"

LoadReal=LoadReal
LoadReal="LoadReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRealHint="[NATIVE] native LoadReal takes hashtable whichHashtable, integer parentKey, integer childKey returns real"

LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanHint="[NATIVE] native LoadBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

LoadStr=LoadStr
LoadStr="LoadStr(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadStrHint="[NATIVE] native LoadStr takes hashtable whichHashtable, integer parentKey, integer childKey returns string"

LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadPlayerHandleHint="[NATIVE] native LoadPlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns player"

LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWidgetHandleHint="[NATIVE] native LoadWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns widget"

LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDestructableHandleHint="[NATIVE] native LoadDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns destructable"

LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemHandleHint="[NATIVE] native LoadItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns item"

LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitHandleHint="[NATIVE] native LoadUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unit"

LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAbilityHandleHint="[NATIVE] native LoadAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ability"

LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerHandleHint="[NATIVE] native LoadTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timer"

LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerHandleHint="[NATIVE] native LoadTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trigger"

LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE] native LoadTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggercondition"

LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerActionHandleHint="[NATIVE] native LoadTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggeraction"

LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerEventHandleHint="[NATIVE] native LoadTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns event"

LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadForceHandleHint="[NATIVE] native LoadForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns force"

LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadGroupHandleHint="[NATIVE] native LoadGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns group"

LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLocationHandleHint="[NATIVE] native LoadLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns location"

LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRectHandleHint="[NATIVE] native LoadRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns rect"

LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanExprHandleHint="[NATIVE] native LoadBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolexpr"

LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSoundHandleHint="[NATIVE] native LoadSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sound"

LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadEffectHandleHint="[NATIVE] native LoadEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns effect"

LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitPoolHandleHint="[NATIVE] native LoadUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unitpool"

LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemPoolHandleHint="[NATIVE] native LoadItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns itempool"

LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestHandleHint="[NATIVE] native LoadQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns quest"

LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestItemHandleHint="[NATIVE] native LoadQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns questitem"

LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE] native LoadDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns defeatcondition"

LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerDialogHandleHint="[NATIVE] native LoadTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timerdialog"

LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLeaderboardHandleHint="[NATIVE] native LoadLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns leaderboard"

LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardHandleHint="[NATIVE] native LoadMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboard"

LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE] native LoadMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboarditem"

LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTrackableHandleHint="[NATIVE] native LoadTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trackable"

LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDialogHandleHint="[NATIVE] native LoadDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns dialog"

LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadButtonHandleHint="[NATIVE] native LoadButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns button"

LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextTagHandleHint="[NATIVE] native LoadTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns texttag"

LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLightningHandleHint="[NATIVE] native LoadLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns lightning"

LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadImageHandleHint="[NATIVE] native LoadImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns image"

LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUbersplatHandleHint="[NATIVE] native LoadUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ubersplat"

LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRegionHandleHint="[NATIVE] native LoadRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns region"

LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogStateHandleHint="[NATIVE] native LoadFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogstate"

LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogModifierHandleHint="[NATIVE] native LoadFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogmodifier"

LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHashtableHandleHint="[NATIVE] native LoadHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns hashtable"

HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedIntegerHint="[NATIVE] native HaveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedRealHint="[NATIVE] native HaveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedBooleanHint="[NATIVE] native HaveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedString=HaveSavedString
HaveSavedString="HaveSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedStringHint="[NATIVE] native HaveSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedHandleHint="[NATIVE] native HaveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"

RemoveSavedString=RemoveSavedString
RemoveSavedString="RemoveSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedStringHint="[NATIVE] native RemoveSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE] native CreateUnitPool takes nothing returns unitpool"

PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(",~whichPool,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
PlaceRandomUnitHint="[NATIVE] native PlaceRandomUnit takes unitpool whichPool, player whichPlayer, real x, real y, real facing returns unit"

CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE] native CreateItemPool takes nothing returns itempool"

PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(",~whichItemPool,", ",~x,", ",~y,")"
PlaceRandomItemHint="[NATIVE] native PlaceRandomItem takes itempool whichItemPool, real x, real y returns item"

ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(",~level,")"
ChooseRandomCreepHint="[NATIVE] native ChooseRandomCreep takes integer level returns integer"

ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE] native ChooseRandomNPBuilding takes nothing returns integer"

ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(",~level,")"
ChooseRandomItemHint="[NATIVE] native ChooseRandomItem takes integer level returns integer"

ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(",~whichType,", ",~level,")"
ChooseRandomItemExHint="[NATIVE] native ChooseRandomItemEx takes itemtype whichType, integer level returns integer"

DisplayTextToPlayer=DisplayTextToPlayer
DisplayTextToPlayer="DisplayTextToPlayer(",~toPlayer,", ",~x,", ",~y,", ",~message,")"
DisplayTextToPlayerHint="[NATIVE] native DisplayTextToPlayer takes player toPlayer, real x, real y, string message returns nothing"

DisplayTimedTextToPlayer=DisplayTimedTextToPlayer
DisplayTimedTextToPlayer="DisplayTimedTextToPlayer(",~toPlayer,", ",~x,", ",~y,", ",~duration,", ",~message,")"
DisplayTimedTextToPlayerHint="[NATIVE] native DisplayTimedTextToPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing"

GetTimeOfDayScale=GetTimeOfDayScale
GetTimeOfDayScale="GetTimeOfDayScale(",")"
GetTimeOfDayScaleHint="[NATIVE] native GetTimeOfDayScale takes nothing returns real"

CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE] native CreateTextTag takes nothing returns texttag"

CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE] native CreateQuest takes nothing returns quest"

QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(",~whichQuest,")"
QuestCreateItemHint="[NATIVE] native QuestCreateItem takes quest whichQuest returns questitem"

CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE] native CreateDefeatCondition takes nothing returns defeatcondition"

CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(",~whichTimer,")"
CreateTimerDialogHint="[NATIVE] native CreateTimerDialog takes timer whichTimer returns timerdialog"

CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE] native CreateLeaderboard takes nothing returns leaderboard"

LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardHasPlayerItemHint="[NATIVE] native LeaderboardHasPlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns boolean"

LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardGetPlayerIndexHint="[NATIVE] native LeaderboardGetPlayerIndex takes leaderboard whichLeaderboard, player whichPlayer returns integer"

PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(",~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE] native PlayerGetLeaderboard takes player toPlayer returns leaderboard"

ResetToGameCamera=ResetToGameCamera
ResetToGameCamera="ResetToGameCamera(",~duration,")"
ResetToGameCameraHint="[NATIVE] native ResetToGameCamera takes real duration returns nothing"

PanCameraTo=PanCameraTo
PanCameraTo="PanCameraTo(",~x,", ",~y,")"
PanCameraToHint="[NATIVE] native PanCameraTo takes real x, real y returns nothing"

PanCameraToTimed=PanCameraToTimed
PanCameraToTimed="PanCameraToTimed(",~x,", ",~y,", ",~duration,")"
PanCameraToTimedHint="[NATIVE] native PanCameraToTimed takes real x, real y, real duration returns nothing"

PanCameraToWithZ=PanCameraToWithZ
PanCameraToWithZ="PanCameraToWithZ(",~x,", ",~y,", ",~zOffsetDest,")"
PanCameraToWithZHint="[NATIVE] native PanCameraToWithZ takes real x, real y, real zOffsetDest returns nothing"

PanCameraToTimedWithZ=PanCameraToTimedWithZ
PanCameraToTimedWithZ="PanCameraToTimedWithZ(",~x,", ",~y,", ",~zOffsetDest,", ",~duration,")"
PanCameraToTimedWithZHint="[NATIVE] native PanCameraToTimedWithZ takes real x, real y, real zOffsetDest, real duration returns nothing"

CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE] native CreateCameraSetup takes nothing returns camerasetup"

CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(",~whichCameraSetup,", ",~whichField,")"
CameraSetupGetFieldHint="[NATIVE] native CameraSetupGetField takes camerasetup whichCameraSetup, camerafield whichField returns real"

CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(",~whichCameraSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE] native CameraSetupGetDestPositionX takes camerasetup whichCameraSetup returns real"

CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(",~whichCameraSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE] native CameraSetupGetDestPositionY takes camerasetup whichCameraSetup returns real"

IsCineFilterDisplayed=IsCineFilterDisplayed
IsCineFilterDisplayed="IsCineFilterDisplayed(",")"
IsCineFilterDisplayedHint="[NATIVE] native IsCineFilterDisplayed takes nothing returns boolean"

GetCameraMargin=GetCameraMargin
GetCameraMargin="GetCameraMargin(",~whichMargin,")"
GetCameraMarginHint="[NATIVE] native GetCameraMargin takes integer whichMargin returns real"

GetCameraBoundMinX=GetCameraBoundMinX
GetCameraBoundMinX="GetCameraBoundMinX(",")"
GetCameraBoundMinXHint="[NATIVE] native GetCameraBoundMinX takes nothing returns real"

GetCameraBoundMinY=GetCameraBoundMinY
GetCameraBoundMinY="GetCameraBoundMinY(",")"
GetCameraBoundMinYHint="[NATIVE] native GetCameraBoundMinY takes nothing returns real"

GetCameraBoundMaxX=GetCameraBoundMaxX
GetCameraBoundMaxX="GetCameraBoundMaxX(",")"
GetCameraBoundMaxXHint="[NATIVE] native GetCameraBoundMaxX takes nothing returns real"

GetCameraBoundMaxY=GetCameraBoundMaxY
GetCameraBoundMaxY="GetCameraBoundMaxY(",")"
GetCameraBoundMaxYHint="[NATIVE] native GetCameraBoundMaxY takes nothing returns real"

CreateSound=CreateSound
CreateSound="CreateSound(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
CreateSoundHint="[NATIVE] native CreateSound takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"

CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE] native CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"

CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE] native CreateSoundFromLabel takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"

CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE] native CreateMIDISound takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"

AttachSoundToUnit=AttachSoundToUnit
AttachSoundToUnit="AttachSoundToUnit(",~soundHandle,", ",~whichUnit,")"
AttachSoundToUnitHint="[NATIVE] native AttachSoundToUnit takes sound soundHandle, unit whichUnit returns nothing"

GetSoundDuration=GetSoundDuration
GetSoundDuration="GetSoundDuration(",~soundHandle,")"
GetSoundDurationHint="[NATIVE] native GetSoundDuration takes sound soundHandle returns integer"

GetSoundFileDuration=GetSoundFileDuration
GetSoundFileDuration="GetSoundFileDuration(",~musicFileName,")"
GetSoundFileDurationHint="[NATIVE] native GetSoundFileDuration takes string musicFileName returns integer"

GetSoundIsPlaying=GetSoundIsPlaying
GetSoundIsPlaying="GetSoundIsPlaying(",~soundHandle,")"
GetSoundIsPlayingHint="[NATIVE] native GetSoundIsPlaying takes sound soundHandle returns boolean"

GetSoundIsLoading=GetSoundIsLoading
GetSoundIsLoading="GetSoundIsLoading(",~soundHandle,")"
GetSoundIsLoadingHint="[NATIVE] native GetSoundIsLoading takes sound soundHandle returns boolean"

AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(",~whichRect,", ",~effectID,")"
AddWeatherEffectHint="[NATIVE] native AddWeatherEffect takes rect whichRect, integer effectID returns weathereffect"

TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~permanent,")"
TerrainDeformCraterHint="[NATIVE] native TerrainDeformCrater takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation"

TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~count,", ",~spaceWaves,", ",~timeWaves,", ",~radiusStartPct,", ",~limitNeg,")"
TerrainDeformRippleHint="[NATIVE] native TerrainDeformRipple takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation"

TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(",~x,", ",~y,", ",~dirX,", ",~dirY,", ",~distance,", ",~speed,", ",~radius,", ",~depth,", ",~trailTime,", ",~count,")"
TerrainDeformWaveHint="[NATIVE] native TerrainDeformWave takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation"

TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(",~x,", ",~y,", ",~radius,", ",~minDelta,", ",~maxDelta,", ",~duration,", ",~updateInterval,")"
TerrainDeformRandomHint="[NATIVE] native TerrainDeformRandom takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation"

AddSpecialEffectTargetUnit=AddSpecialEffectTarget (Unit)
AddSpecialEffectTargetUnit="AddSpecialEffectTargetUnit(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetUnitHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, unit targetWidget, string attachPointName returns effect"

AddSpecialEffectTargetItem=AddSpecialEffectTarget (Item)
AddSpecialEffectTargetItem="AddSpecialEffectTargetItem(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetItemHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, item targetWidget, string attachPointName returns effect"

AddSpecialEffectTargetDestructable=AddSpecialEffectTarget (Destructable)
AddSpecialEffectTargetDestructable="AddSpecialEffectTargetDestructable(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetDestructableHint="[NATIVE] native AddSpecialEffectTarget takes string modelName, destructable targetWidget, string attachPointName returns effect"

AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(",~abilityString,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectHint="[NATIVE] native AddSpellEffect takes string abilityString, effecttype whichEffectType, real x, real y returns effect"

AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(",~abilityString,", ",~whichEffectType,", ",~where,")"
AddSpellEffectLocHint="[NATIVE] native AddSpellEffectLoc takes string abilityString, effecttype whichEffectType, location where returns effect"

AddSpellEffectTargetUnit=AddSpellEffectTarget (Unit)
AddSpellEffectTargetUnit="AddSpellEffectTargetUnit(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetUnitHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, unit targetWidget, string attachPoint returns effect"

AddSpellEffectTargetItem=AddSpellEffectTarget (Item)
AddSpellEffectTargetItem="AddSpellEffectTargetItem(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetItemHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, item targetWidget, string attachPoint returns effect"

AddSpellEffectTargetDestructable=AddSpellEffectTarget (Destructable)
AddSpellEffectTargetDestructable="AddSpellEffectTargetDestructable(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetDestructableHint="[NATIVE] native AddSpellEffectTarget takes string modelName, effecttype whichEffectType, destructable targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdUnit=AddSpellEffectTargetById (Unit)
AddSpellEffectTargetByIdUnit="AddSpellEffectTargetByIdUnit(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdUnitHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, unit targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdItem=AddSpellEffectTargetById (Item)
AddSpellEffectTargetByIdItem="AddSpellEffectTargetByIdItem(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdItemHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, item targetWidget, string attachPoint returns effect"

AddSpellEffectTargetByIdDestructable=AddSpellEffectTargetById (Destructable)
AddSpellEffectTargetByIdDestructable="AddSpellEffectTargetByIdDestructable(",~abilityTypeId,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetByIdDestructableHint="[NATIVE] native AddSpellEffectTargetById takes integer abilityTypeId, effecttype whichEffectType, destructable targetWidget, string attachPoint returns effect"

AddLightning=AddLightning
AddLightning="AddLightning(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
AddLightningHint="[NATIVE] native AddLightning takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning"

AddLightningEx=AddLightningEx
AddLightningEx="AddLightningEx(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~z1,", ",~x2,", ",~y2,", ",~z2,")"
AddLightningExHint="[NATIVE] native AddLightningEx takes string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns lightning"

DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(",~whichBolt,")"
DestroyLightningHint="[NATIVE] native DestroyLightning takes lightning whichBolt returns boolean"

MoveLightning=MoveLightning
MoveLightning="MoveLightning(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
MoveLightningHint="[NATIVE] native MoveLightning takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean"

MoveLightningEx=MoveLightningEx
MoveLightningEx="MoveLightningEx(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~z1,", ",~x2,", ",~y2,", ",~z2,")"
MoveLightningExHint="[NATIVE] native MoveLightningEx takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns boolean"

GetLightningColorA=GetLightningColorA
GetLightningColorA="GetLightningColorA(",~whichBolt,")"
GetLightningColorAHint="[NATIVE] native GetLightningColorA takes lightning whichBolt returns real"

GetLightningColorR=GetLightningColorR
GetLightningColorR="GetLightningColorR(",~whichBolt,")"
GetLightningColorRHint="[NATIVE] native GetLightningColorR takes lightning whichBolt returns real"

GetLightningColorG=GetLightningColorG
GetLightningColorG="GetLightningColorG(",~whichBolt,")"
GetLightningColorGHint="[NATIVE] native GetLightningColorG takes lightning whichBolt returns real"

GetLightningColorB=GetLightningColorB
GetLightningColorB="GetLightningColorB(",~whichBolt,")"
GetLightningColorBHint="[NATIVE] native GetLightningColorB takes lightning whichBolt returns real"

SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(",~whichBolt,", ",~r,", ",~g,", ",~b,", ",~a,")"
SetLightningColorHint="[NATIVE] native SetLightningColor takes lightning whichBolt, real r, real g, real b, real a returns boolean"

GetAbilityEffect=GetAbilityEffect
GetAbilityEffect="GetAbilityEffect(",~abilityString,", ",~whichEffectType,", ",~index,")"
GetAbilityEffectHint="[NATIVE] native GetAbilityEffect takes string abilityString, effecttype whichEffectType, integer index returns string"

GetAbilitySound=GetAbilitySound
GetAbilitySound="GetAbilitySound(",~abilityString,", ",~whichSoundType,")"
GetAbilitySoundHint="[NATIVE] native GetAbilitySound takes string abilityString, soundtype whichSoundType returns string"

GetTerrainCliffLevel=GetTerrainCliffLevel
GetTerrainCliffLevel="GetTerrainCliffLevel(",~x,", ",~y,")"
GetTerrainCliffLevelHint="[NATIVE] native GetTerrainCliffLevel takes real x, real y returns integer"

GetTerrainType=GetTerrainType
GetTerrainType="GetTerrainType(",~x,", ",~y,")"
GetTerrainTypeHint="[NATIVE] native GetTerrainType takes real x, real y returns integer"

GetTerrainVariance=GetTerrainVariance
GetTerrainVariance="GetTerrainVariance(",~x,", ",~y,")"
GetTerrainVarianceHint="[NATIVE] native GetTerrainVariance takes real x, real y returns integer"

IsTerrainPathable=IsTerrainPathable
IsTerrainPathable="IsTerrainPathable(",~x,", ",~y,", ",~whichPathingType,")"
IsTerrainPathableHint="[NATIVE] native IsTerrainPathable takes real x, real y, pathingtype whichPathingType returns boolean"

CreateImage=CreateImage
CreateImage="CreateImage(",~file,", ",~sizeX,", ",~sizeY,", ",~sizeZ,", ",~posX,", ",~posY,", ",~posZ,", ",~originX,", ",~originY,", ",~originZ,", ",~imageType,")"
CreateImageHint="[NATIVE] native CreateImage takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image"

CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(",~x,", ",~y,", ",~name,", ",~red,", ",~green,", ",~blue,", ",~alpha,", ",~forcePaused,", ",~noBirthTime,")"
CreateUbersplatHint="[NATIVE] native CreateUbersplat takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat"

CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
CreateBlightedGoldmineHint="[NATIVE] native CreateBlightedGoldmine takes player whichPlayer, real x, real y, real facing returns unit"

IsPointBlighted=IsPointBlighted
IsPointBlighted="IsPointBlighted(",~x,", ",~y,")"
IsPointBlightedHint="[NATIVE] native IsPointBlighted takes real x, real y returns boolean"

IsNoVictoryCheat=IsNoVictoryCheat
IsNoVictoryCheat="IsNoVictoryCheat(",")"
IsNoVictoryCheatHint="[NATIVE] native IsNoVictoryCheat takes nothing returns boolean"

IsNoDefeatCheat=IsNoDefeatCheat
IsNoDefeatCheat="IsNoDefeatCheat(",")"
IsNoDefeatCheatHint="[NATIVE] native IsNoDefeatCheat takes nothing returns boolean"

BitwiseGetBit=BitwiseGetBit
BitwiseGetBit="BitwiseGetBit(",~i,", ",~bitIndex,")"
BitwiseGetBitHint="[UjAPI] native BitwiseGetBit takes integer i, integer bitIndex returns integer"

BitwiseSetBit=BitwiseSetBit
BitwiseSetBit="BitwiseSetBit(",~i,", ",~bitIndex,", ",~bitValue,")"
BitwiseSetBitHint="[UjAPI] native BitwiseSetBit takes integer i, integer bitIndex, integer bitValue returns integer"

BitwiseGetByte=BitwiseGetByte
BitwiseGetByte="BitwiseGetByte(",~i,", ",~byteIndex,")"
BitwiseGetByteHint="[UjAPI] native BitwiseGetByte takes integer i, integer byteIndex returns integer"

BitwiseSetByte=BitwiseSetByte
BitwiseSetByte="BitwiseSetByte(",~i,", ",~byteIndex,", ",~byteValue,")"
BitwiseSetByteHint="[UjAPI] native BitwiseSetByte takes integer i, integer byteIndex, integer byteValue returns integer"

BitwiseNOT=BitwiseNOT
BitwiseNOT="BitwiseNOT(",~i,")"
BitwiseNOTHint="[UjAPI] native BitwiseNOT takes integer i returns integer"

BitwiseAND=BitwiseAND
BitwiseAND="BitwiseAND(",~a,", ",~b,")"
BitwiseANDHint="[UjAPI] native BitwiseAND takes integer a, integer b returns integer"

BitwiseOR=BitwiseOR
BitwiseOR="BitwiseOR(",~a,", ",~b,")"
BitwiseORHint="[UjAPI] native BitwiseOR takes integer a, integer b returns integer"

BitwiseXOR=BitwiseXOR
BitwiseXOR="BitwiseXOR(",~a,", ",~b,")"
BitwiseXORHint="[UjAPI] native BitwiseXOR takes integer a, integer b returns integer"

BitwiseShiftLeft=BitwiseShiftLeft
BitwiseShiftLeft="BitwiseShiftLeft(",~i,", ",~bitsToShift,")"
BitwiseShiftLeftHint="[UjAPI] native BitwiseShiftLeft takes integer i, integer bitsToShift returns integer"

BitwiseShiftLeftLogical=BitwiseShiftLeftLogical
BitwiseShiftLeftLogical="BitwiseShiftLeftLogical(",~i,", ",~bitsToShift,")"
BitwiseShiftLeftLogicalHint="[UjAPI] native BitwiseShiftLeftLogical takes integer i, integer bitsToShift returns integer"

BitwiseShiftRight=BitwiseShiftRight
BitwiseShiftRight="BitwiseShiftRight(",~i,", ",~bitsToShift,")"
BitwiseShiftRightHint="[UjAPI] native BitwiseShiftRight takes integer i, integer bitsToShift returns integer"

BitwiseShiftRightLogical=BitwiseShiftRightLogical
BitwiseShiftRightLogical="BitwiseShiftRightLogical(",~i,", ",~bitsToShift,")"
BitwiseShiftRightLogicalHint="[UjAPI] native BitwiseShiftRightLogical takes integer i, integer bitsToShift returns integer"

BitwiseToInteger=BitwiseToInteger
BitwiseToInteger="BitwiseToInteger(",~byte1,", ",~byte2,", ",~byte3,", ",~byte4,")"
BitwiseToIntegerHint="[UjAPI] native BitwiseToInteger takes integer byte1, integer byte2, integer byte3, integer byte4 returns integer"

B2I=B2I
B2I="B2I(",~b,")"
B2IHint="[UjAPI] native B2I takes boolean b returns integer"

B2S=B2S
B2S="B2S(",~b,")"
B2SHint="[UjAPI] native B2S takes boolean b returns string"

Id2String=Id2String
Id2String="Id2String(",~i,")"
Id2StringHint="[UjAPI] native Id2String takes integer i returns string"

String2Id=String2Id
String2Id="String2Id(",~idString,")"
String2IdHint="[UjAPI] native String2Id takes string idString returns integer"

IntToHex=IntToHex
IntToHex="IntToHex(",~i,")"
IntToHexHint="[UjAPI] native IntToHex takes integer i returns string"

IntToChar=IntToChar
IntToChar="IntToChar(",~i,")"
IntToCharHint="[UjAPI] native IntToChar takes integer i returns string"

IntToRoman=IntToRoman
IntToRoman="IntToRoman(",~i,")"
IntToRomanHint="[UjAPI] native IntToRoman takes integer i returns string"

HexToInt=HexToInt
HexToInt="HexToInt(",~hex,")"
HexToIntHint="[UjAPI] native HexToInt takes string hex returns integer"

ConvertColour=ConvertColour
ConvertColour="ConvertColour(",~alpha,", ",~red,", ",~green,", ",~blue,")"
ConvertColourHint="[UjAPI] native ConvertColour takes integer alpha, integer red, integer green, integer blue returns integer"

IntegerToHandle=IntegerToHandle
IntegerToHandle="IntegerToHandle(",~i,")"
IntegerToHandleHint="[UjAPI] native IntegerToHandle takes integer i returns handle"

AddressToHandle=AddressToHandle
AddressToHandle="AddressToHandle(",~i,")"
AddressToHandleHint="[UjAPI] native AddressToHandle takes integer i returns handle"

HandleToAddress=HandleToAddress
HandleToAddress="HandleToAddress(",~whichHandle,")"
HandleToAddressHint="[UjAPI] native HandleToAddress takes handle whichHandle returns integer"

I2C=I2C
I2C="I2C(",~i,")"
I2CHint="[UjAPI] native I2C takes integer i returns code"

C2I=C2I
C2I="C2I(",~c,")"
C2IHint="[UjAPI] native C2I takes code c returns integer"

HandleToHandle=HandleToHandle
HandleToHandle="HandleToHandle(",~whichHandle,")"
HandleToHandleHint="[UjAPI] native HandleToHandle takes handle whichHandle returns handle"

HandleToAgent=HandleToAgent
HandleToAgent="HandleToAgent(",~whichHandle,")"
HandleToAgentHint="[UjAPI] native HandleToAgent takes handle whichHandle returns agent"

HandleToEvent=HandleToEvent
HandleToEvent="HandleToEvent(",~whichHandle,")"
HandleToEventHint="[UjAPI] native HandleToEvent takes handle whichHandle returns event"

HandleToDoodad=HandleToDoodad
HandleToDoodad="HandleToDoodad(",~whichHandle,")"
HandleToDoodadHint="[UjAPI] native HandleToDoodad takes handle whichHandle returns doodad"

HandleToWidget=HandleToWidget
HandleToWidget="HandleToWidget(",~whichHandle,")"
HandleToWidgetHint="[UjAPI] native HandleToWidget takes handle whichHandle returns widget"

HandleToUnit=HandleToUnit
HandleToUnit="HandleToUnit(",~whichHandle,")"
HandleToUnitHint="[UjAPI] native HandleToUnit takes handle whichHandle returns unit"

HandleToDestructable=HandleToDestructable
HandleToDestructable="HandleToDestructable(",~whichHandle,")"
HandleToDestructableHint="[UjAPI] native HandleToDestructable takes handle whichHandle returns destructable"

HandleToItem=HandleToItem
HandleToItem="HandleToItem(",~whichHandle,")"
HandleToItemHint="[UjAPI] native HandleToItem takes handle whichHandle returns item"

HandleToAbility=HandleToAbility
HandleToAbility="HandleToAbility(",~whichHandle,")"
HandleToAbilityHint="[UjAPI] native HandleToAbility takes handle whichHandle returns ability"

HandleToBuff=HandleToBuff
HandleToBuff="HandleToBuff(",~whichHandle,")"
HandleToBuffHint="[UjAPI] native HandleToBuff takes handle whichHandle returns buff"

HandleToForce=HandleToForce
HandleToForce="HandleToForce(",~whichHandle,")"
HandleToForceHint="[UjAPI] native HandleToForce takes handle whichHandle returns force"

HandleToGroup=HandleToGroup
HandleToGroup="HandleToGroup(",~whichHandle,")"
HandleToGroupHint="[UjAPI] native HandleToGroup takes handle whichHandle returns group"

HandleToTrigger=HandleToTrigger
HandleToTrigger="HandleToTrigger(",~whichHandle,")"
HandleToTriggerHint="[UjAPI] native HandleToTrigger takes handle whichHandle returns trigger"

HandleToTriggercondition=HandleToTriggercondition
HandleToTriggercondition="HandleToTriggercondition(",~whichHandle,")"
HandleToTriggerconditionHint="[UjAPI] native HandleToTriggercondition takes handle whichHandle returns triggercondition"

HandleToTriggeraction=HandleToTriggeraction
HandleToTriggeraction="HandleToTriggeraction(",~whichHandle,")"
HandleToTriggeractionHint="[UjAPI] native HandleToTriggeraction takes handle whichHandle returns triggeraction"

HandleToTimer=HandleToTimer
HandleToTimer="HandleToTimer(",~whichHandle,")"
HandleToTimerHint="[UjAPI] native HandleToTimer takes handle whichHandle returns timer"

HandleToLocation=HandleToLocation
HandleToLocation="HandleToLocation(",~whichHandle,")"
HandleToLocationHint="[UjAPI] native HandleToLocation takes handle whichHandle returns location"

HandleToRegion=HandleToRegion
HandleToRegion="HandleToRegion(",~whichHandle,")"
HandleToRegionHint="[UjAPI] native HandleToRegion takes handle whichHandle returns region"

HandleToRect=HandleToRect
HandleToRect="HandleToRect(",~whichHandle,")"
HandleToRectHint="[UjAPI] native HandleToRect takes handle whichHandle returns rect"

HandleToBoolexpr=HandleToBoolexpr
HandleToBoolexpr="HandleToBoolexpr(",~whichHandle,")"
HandleToBoolexprHint="[UjAPI] native HandleToBoolexpr takes handle whichHandle returns boolexpr"

HandleToSound=HandleToSound
HandleToSound="HandleToSound(",~whichHandle,")"
HandleToSoundHint="[UjAPI] native HandleToSound takes handle whichHandle returns sound"

HandleToConditionfunc=HandleToConditionfunc
HandleToConditionfunc="HandleToConditionfunc(",~whichHandle,")"
HandleToConditionfuncHint="[UjAPI] native HandleToConditionfunc takes handle whichHandle returns conditionfunc"

HandleToFilterfunc=HandleToFilterfunc
HandleToFilterfunc="HandleToFilterfunc(",~whichHandle,")"
HandleToFilterfuncHint="[UjAPI] native HandleToFilterfunc takes handle whichHandle returns filterfunc"

HandleToUnitpool=HandleToUnitpool
HandleToUnitpool="HandleToUnitpool(",~whichHandle,")"
HandleToUnitpoolHint="[UjAPI] native HandleToUnitpool takes handle whichHandle returns unitpool"

HandleToItempool=HandleToItempool
HandleToItempool="HandleToItempool(",~whichHandle,")"
HandleToItempoolHint="[UjAPI] native HandleToItempool takes handle whichHandle returns itempool"

HandleToRace=HandleToRace
HandleToRace="HandleToRace(",~whichHandle,")"
HandleToRaceHint="[UjAPI] native HandleToRace takes handle whichHandle returns race"

HandleToAlliancetype=HandleToAlliancetype
HandleToAlliancetype="HandleToAlliancetype(",~whichHandle,")"
HandleToAlliancetypeHint="[UjAPI] native HandleToAlliancetype takes handle whichHandle returns alliancetype"

HandleToRacepreference=HandleToRacepreference
HandleToRacepreference="HandleToRacepreference(",~whichHandle,")"
HandleToRacepreferenceHint="[UjAPI] native HandleToRacepreference takes handle whichHandle returns racepreference"

HandleToGamestate=HandleToGamestate
HandleToGamestate="HandleToGamestate(",~whichHandle,")"
HandleToGamestateHint="[UjAPI] native HandleToGamestate takes handle whichHandle returns gamestate"

HandleToIGamestate=HandleToIGamestate
HandleToIGamestate="HandleToIGamestate(",~whichHandle,")"
HandleToIGamestateHint="[UjAPI] native HandleToIGamestate takes handle whichHandle returns igamestate"

HandleToFGamestate=HandleToFGamestate
HandleToFGamestate="HandleToFGamestate(",~whichHandle,")"
HandleToFGamestateHint="[UjAPI] native HandleToFGamestate takes handle whichHandle returns fgamestate"

HandleToPlayerstate=HandleToPlayerstate
HandleToPlayerstate="HandleToPlayerstate(",~whichHandle,")"
HandleToPlayerstateHint="[UjAPI] native HandleToPlayerstate takes handle whichHandle returns playerstate"

HandleToPlayerscore=HandleToPlayerscore
HandleToPlayerscore="HandleToPlayerscore(",~whichHandle,")"
HandleToPlayerscoreHint="[UjAPI] native HandleToPlayerscore takes handle whichHandle returns playerscore"

HandleToPlayergameresult=HandleToPlayergameresult
HandleToPlayergameresult="HandleToPlayergameresult(",~whichHandle,")"
HandleToPlayergameresultHint="[UjAPI] native HandleToPlayergameresult takes handle whichHandle returns playergameresult"

HandleToUnitstate=HandleToUnitstate
HandleToUnitstate="HandleToUnitstate(",~whichHandle,")"
HandleToUnitstateHint="[UjAPI] native HandleToUnitstate takes handle whichHandle returns unitstate"

HandleToAIDifficulty=HandleToAIDifficulty
HandleToAIDifficulty="HandleToAIDifficulty(",~whichHandle,")"
HandleToAIDifficultyHint="[UjAPI] native HandleToAIDifficulty takes handle whichHandle returns aidifficulty"

HandleToEventid=HandleToEventid
HandleToEventid="HandleToEventid(",~whichHandle,")"
HandleToEventidHint="[UjAPI] native HandleToEventid takes handle whichHandle returns eventid"

HandleToGameevent=HandleToGameevent
HandleToGameevent="HandleToGameevent(",~whichHandle,")"
HandleToGameeventHint="[UjAPI] native HandleToGameevent takes handle whichHandle returns gameevent"

HandleToPlayerevent=HandleToPlayerevent
HandleToPlayerevent="HandleToPlayerevent(",~whichHandle,")"
HandleToPlayereventHint="[UjAPI] native HandleToPlayerevent takes handle whichHandle returns playerevent"

HandleToPlayerunitevent=HandleToPlayerunitevent
HandleToPlayerunitevent="HandleToPlayerunitevent(",~whichHandle,")"
HandleToPlayeruniteventHint="[UjAPI] native HandleToPlayerunitevent takes handle whichHandle returns playerunitevent"

HandleToUnitevent=HandleToUnitevent
HandleToUnitevent="HandleToUnitevent(",~whichHandle,")"
HandleToUniteventHint="[UjAPI] native HandleToUnitevent takes handle whichHandle returns unitevent"

HandleToLimitop=HandleToLimitop
HandleToLimitop="HandleToLimitop(",~whichHandle,")"
HandleToLimitopHint="[UjAPI] native HandleToLimitop takes handle whichHandle returns limitop"

HandleToWidgetevent=HandleToWidgetevent
HandleToWidgetevent="HandleToWidgetevent(",~whichHandle,")"
HandleToWidgeteventHint="[UjAPI] native HandleToWidgetevent takes handle whichHandle returns widgetevent"

HandleToDialogevent=HandleToDialogevent
HandleToDialogevent="HandleToDialogevent(",~whichHandle,")"
HandleToDialogeventHint="[UjAPI] native HandleToDialogevent takes handle whichHandle returns dialogevent"

HandleToUnittype=HandleToUnittype
HandleToUnittype="HandleToUnittype(",~whichHandle,")"
HandleToUnittypeHint="[UjAPI] native HandleToUnittype takes handle whichHandle returns unittype"

HandleToGamespeed=HandleToGamespeed
HandleToGamespeed="HandleToGamespeed(",~whichHandle,")"
HandleToGamespeedHint="[UjAPI] native HandleToGamespeed takes handle whichHandle returns gamespeed"

HandleToGamedifficulty=HandleToGamedifficulty
HandleToGamedifficulty="HandleToGamedifficulty(",~whichHandle,")"
HandleToGamedifficultyHint="[UjAPI] native HandleToGamedifficulty takes handle whichHandle returns gamedifficulty"

HandleToGametype=HandleToGametype
HandleToGametype="HandleToGametype(",~whichHandle,")"
HandleToGametypeHint="[UjAPI] native HandleToGametype takes handle whichHandle returns gametype"

HandleToMapflag=HandleToMapflag
HandleToMapflag="HandleToMapflag(",~whichHandle,")"
HandleToMapflagHint="[UjAPI] native HandleToMapflag takes handle whichHandle returns mapflag"

HandleToMapvisibility=HandleToMapvisibility
HandleToMapvisibility="HandleToMapvisibility(",~whichHandle,")"
HandleToMapvisibilityHint="[UjAPI] native HandleToMapvisibility takes handle whichHandle returns mapvisibility"

HandleToMapsetting=HandleToMapsetting
HandleToMapsetting="HandleToMapsetting(",~whichHandle,")"
HandleToMapsettingHint="[UjAPI] native HandleToMapsetting takes handle whichHandle returns mapsetting"

HandleToMapdensity=HandleToMapdensity
HandleToMapdensity="HandleToMapdensity(",~whichHandle,")"
HandleToMapdensityHint="[UjAPI] native HandleToMapdensity takes handle whichHandle returns mapdensity"

HandleToMapcontrol=HandleToMapcontrol
HandleToMapcontrol="HandleToMapcontrol(",~whichHandle,")"
HandleToMapcontrolHint="[UjAPI] native HandleToMapcontrol takes handle whichHandle returns mapcontrol"

HandleToPlayerslotstate=HandleToPlayerslotstate
HandleToPlayerslotstate="HandleToPlayerslotstate(",~whichHandle,")"
HandleToPlayerslotstateHint="[UjAPI] native HandleToPlayerslotstate takes handle whichHandle returns playerslotstate"

HandleToVolumegroup=HandleToVolumegroup
HandleToVolumegroup="HandleToVolumegroup(",~whichHandle,")"
HandleToVolumegroupHint="[UjAPI] native HandleToVolumegroup takes handle whichHandle returns volumegroup"

HandleToCamerafield=HandleToCamerafield
HandleToCamerafield="HandleToCamerafield(",~whichHandle,")"
HandleToCamerafieldHint="[UjAPI] native HandleToCamerafield takes handle whichHandle returns camerafield"

HandleToCamerasetup=HandleToCamerasetup
HandleToCamerasetup="HandleToCamerasetup(",~whichHandle,")"
HandleToCamerasetupHint="[UjAPI] native HandleToCamerasetup takes handle whichHandle returns camerasetup"

HandleToPlayercolor=HandleToPlayercolor
HandleToPlayercolor="HandleToPlayercolor(",~whichHandle,")"
HandleToPlayercolorHint="[UjAPI] native HandleToPlayercolor takes handle whichHandle returns playercolor"

HandleToPlacement=HandleToPlacement
HandleToPlacement="HandleToPlacement(",~whichHandle,")"
HandleToPlacementHint="[UjAPI] native HandleToPlacement takes handle whichHandle returns placement"

HandleToStartlocprio=HandleToStartlocprio
HandleToStartlocprio="HandleToStartlocprio(",~whichHandle,")"
HandleToStartlocprioHint="[UjAPI] native HandleToStartlocprio takes handle whichHandle returns startlocprio"

HandleToRaritycontrol=HandleToRaritycontrol
HandleToRaritycontrol="HandleToRaritycontrol(",~whichHandle,")"
HandleToRaritycontrolHint="[UjAPI] native HandleToRaritycontrol takes handle whichHandle returns raritycontrol"

HandleToBlendmode=HandleToBlendmode
HandleToBlendmode="HandleToBlendmode(",~whichHandle,")"
HandleToBlendmodeHint="[UjAPI] native HandleToBlendmode takes handle whichHandle returns blendmode"

HandleToTexmapflags=HandleToTexmapflags
HandleToTexmapflags="HandleToTexmapflags(",~whichHandle,")"
HandleToTexmapflagsHint="[UjAPI] native HandleToTexmapflags takes handle whichHandle returns texmapflags"

HandleToEffect=HandleToEffect
HandleToEffect="HandleToEffect(",~whichHandle,")"
HandleToEffectHint="[UjAPI] native HandleToEffect takes handle whichHandle returns effect"

HandleToEffecttype=HandleToEffecttype
HandleToEffecttype="HandleToEffecttype(",~whichHandle,")"
HandleToEffecttypeHint="[UjAPI] native HandleToEffecttype takes handle whichHandle returns effecttype"

HandleToWeathereffect=HandleToWeathereffect
HandleToWeathereffect="HandleToWeathereffect(",~whichHandle,")"
HandleToWeathereffectHint="[UjAPI] native HandleToWeathereffect takes handle whichHandle returns weathereffect"

HandleToTerraindeformation=HandleToTerraindeformation
HandleToTerraindeformation="HandleToTerraindeformation(",~whichHandle,")"
HandleToTerraindeformationHint="[UjAPI] native HandleToTerraindeformation takes handle whichHandle returns terraindeformation"

HandleToFogstate=HandleToFogstate
HandleToFogstate="HandleToFogstate(",~whichHandle,")"
HandleToFogstateHint="[UjAPI] native HandleToFogstate takes handle whichHandle returns fogstate"

HandleToFogmodifier=HandleToFogmodifier
HandleToFogmodifier="HandleToFogmodifier(",~whichHandle,")"
HandleToFogmodifierHint="[UjAPI] native HandleToFogmodifier takes handle whichHandle returns fogmodifier"

HandleToDialog=HandleToDialog
HandleToDialog="HandleToDialog(",~whichHandle,")"
HandleToDialogHint="[UjAPI] native HandleToDialog takes handle whichHandle returns dialog"

HandleToButton=HandleToButton
HandleToButton="HandleToButton(",~whichHandle,")"
HandleToButtonHint="[UjAPI] native HandleToButton takes handle whichHandle returns button"

HandleToQuest=HandleToQuest
HandleToQuest="HandleToQuest(",~whichHandle,")"
HandleToQuestHint="[UjAPI] native HandleToQuest takes handle whichHandle returns quest"

HandleToQuestitem=HandleToQuestitem
HandleToQuestitem="HandleToQuestitem(",~whichHandle,")"
HandleToQuestitemHint="[UjAPI] native HandleToQuestitem takes handle whichHandle returns questitem"

HandleToDefeatcondition=HandleToDefeatcondition
HandleToDefeatcondition="HandleToDefeatcondition(",~whichHandle,")"
HandleToDefeatconditionHint="[UjAPI] native HandleToDefeatcondition takes handle whichHandle returns defeatcondition"

HandleToTimerdialog=HandleToTimerdialog
HandleToTimerdialog="HandleToTimerdialog(",~whichHandle,")"
HandleToTimerdialogHint="[UjAPI] native HandleToTimerdialog takes handle whichHandle returns timerdialog"

HandleToLeaderboard=HandleToLeaderboard
HandleToLeaderboard="HandleToLeaderboard(",~whichHandle,")"
HandleToLeaderboardHint="[UjAPI] native HandleToLeaderboard takes handle whichHandle returns leaderboard"

HandleToMultiboard=HandleToMultiboard
HandleToMultiboard="HandleToMultiboard(",~whichHandle,")"
HandleToMultiboardHint="[UjAPI] native HandleToMultiboard takes handle whichHandle returns multiboard"

HandleToMultiboarditem=HandleToMultiboarditem
HandleToMultiboarditem="HandleToMultiboarditem(",~whichHandle,")"
HandleToMultiboarditemHint="[UjAPI] native HandleToMultiboarditem takes handle whichHandle returns multiboarditem"

HandleToTrackable=HandleToTrackable
HandleToTrackable="HandleToTrackable(",~whichHandle,")"
HandleToTrackableHint="[UjAPI] native HandleToTrackable takes handle whichHandle returns trackable"

HandleToGamecache=HandleToGamecache
HandleToGamecache="HandleToGamecache(",~whichHandle,")"
HandleToGamecacheHint="[UjAPI] native HandleToGamecache takes handle whichHandle returns gamecache"

HandleToVersion=HandleToVersion
HandleToVersion="HandleToVersion(",~whichHandle,")"
HandleToVersionHint="[UjAPI] native HandleToVersion takes handle whichHandle returns version"

HandleToItemtype=HandleToItemtype
HandleToItemtype="HandleToItemtype(",~whichHandle,")"
HandleToItemtypeHint="[UjAPI] native HandleToItemtype takes handle whichHandle returns itemtype"

HandleToTexttag=HandleToTexttag
HandleToTexttag="HandleToTexttag(",~whichHandle,")"
HandleToTexttagHint="[UjAPI] native HandleToTexttag takes handle whichHandle returns texttag"

HandleToAttacktype=HandleToAttacktype
HandleToAttacktype="HandleToAttacktype(",~whichHandle,")"
HandleToAttacktypeHint="[UjAPI] native HandleToAttacktype takes handle whichHandle returns attacktype"

HandleToDamagetype=HandleToDamagetype
HandleToDamagetype="HandleToDamagetype(",~whichHandle,")"
HandleToDamagetypeHint="[UjAPI] native HandleToDamagetype takes handle whichHandle returns damagetype"

HandleToWeapontype=HandleToWeapontype
HandleToWeapontype="HandleToWeapontype(",~whichHandle,")"
HandleToWeapontypeHint="[UjAPI] native HandleToWeapontype takes handle whichHandle returns weapontype"

HandleToSoundtype=HandleToSoundtype
HandleToSoundtype="HandleToSoundtype(",~whichHandle,")"
HandleToSoundtypeHint="[UjAPI] native HandleToSoundtype takes handle whichHandle returns soundtype"

HandleToLightning=HandleToLightning
HandleToLightning="HandleToLightning(",~whichHandle,")"
HandleToLightningHint="[UjAPI] native HandleToLightning takes handle whichHandle returns lightning"

HandleToPathingtype=HandleToPathingtype
HandleToPathingtype="HandleToPathingtype(",~whichHandle,")"
HandleToPathingtypeHint="[UjAPI] native HandleToPathingtype takes handle whichHandle returns pathingtype"

HandleToImage=HandleToImage
HandleToImage="HandleToImage(",~whichHandle,")"
HandleToImageHint="[UjAPI] native HandleToImage takes handle whichHandle returns image"

HandleToUbersplat=HandleToUbersplat
HandleToUbersplat="HandleToUbersplat(",~whichHandle,")"
HandleToUbersplatHint="[UjAPI] native HandleToUbersplat takes handle whichHandle returns ubersplat"

HandleToHashtable=HandleToHashtable
HandleToHashtable="HandleToHashtable(",~whichHandle,")"
HandleToHashtableHint="[UjAPI] native HandleToHashtable takes handle whichHandle returns hashtable"

HandleToAnimType=HandleToAnimType
HandleToAnimType="HandleToAnimType(",~whichHandle,")"
HandleToAnimTypeHint="[UjAPI] native HandleToAnimType takes handle whichHandle returns animtype"

HandleToSubAnimType=HandleToSubAnimType
HandleToSubAnimType="HandleToSubAnimType(",~whichHandle,")"
HandleToSubAnimTypeHint="[UjAPI] native HandleToSubAnimType takes handle whichHandle returns subanimtype"

GetHandleCount=GetHandleCount
GetHandleCount="GetHandleCount(",")"
GetHandleCountHint="[UjAPI] native GetHandleCount takes nothing returns integer"

GetNextHandleIndex=GetNextHandleIndex
GetNextHandleIndex="GetNextHandleIndex(",")"
GetNextHandleIndexHint="[UjAPI] native GetNextHandleIndex takes nothing returns integer"

GetStringCount=GetStringCount
GetStringCount="GetStringCount(",")"
GetStringCountHint="[UjAPI] native GetStringCount takes nothing returns integer"

GetJassMainThread=GetJassMainThread
GetJassMainThread="GetJassMainThread(",")"
GetJassMainThreadHint="[UjAPI] native GetJassMainThread takes nothing returns jassthread"

GetJassCurrentThread=GetJassCurrentThread
GetJassCurrentThread="GetJassCurrentThread(",")"
GetJassCurrentThreadHint="[UjAPI] native GetJassCurrentThread takes nothing returns jassthread"

RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(",~parentScriptFile,", ",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptExHint="[UjAPI] native RunJassScriptEx takes string parentScriptFile, string helperScriptFile, string jassScriptFile returns jassthread"

RunJassScript=RunJassScript
RunJassScript="RunJassScript(",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptHint="[UjAPI] native RunJassScript takes string helperScriptFile, string jassScriptFile returns jassthread"

RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(",~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI] native RunJassScriptSimple takes string jassScriptFile returns jassthread"

StopJassThread=StopJassThread
StopJassThread="StopJassThread(",~thread,")"
StopJassThreadHint="[UjAPI] native StopJassThread takes jassthread thread returns boolean"

GetJassGlobalInteger=GetJassGlobalInteger
GetJassGlobalInteger="GetJassGlobalInteger(",~thread,", ",~variableName,")"
GetJassGlobalIntegerHint="[UjAPI] native GetJassGlobalInteger takes jassthread thread, string variableName returns integer"

GetJassGlobalReal=GetJassGlobalReal
GetJassGlobalReal="GetJassGlobalReal(",~thread,", ",~variableName,")"
GetJassGlobalRealHint="[UjAPI] native GetJassGlobalReal takes jassthread thread, string variableName returns real"

GetJassGlobalString=GetJassGlobalString
GetJassGlobalString="GetJassGlobalString(",~thread,", ",~variableName,")"
GetJassGlobalStringHint="[UjAPI] native GetJassGlobalString takes jassthread thread, string variableName returns string"

GetJassGlobalHandle=GetJassGlobalHandle
GetJassGlobalHandle="GetJassGlobalHandle(",~thread,", ",~variableName,")"
GetJassGlobalHandleHint="[UjAPI] native GetJassGlobalHandle takes jassthread thread, string variableName returns handle"

GetJassGlobalBoolean=GetJassGlobalBoolean
GetJassGlobalBoolean="GetJassGlobalBoolean(",~thread,", ",~variableName,")"
GetJassGlobalBooleanHint="[UjAPI] native GetJassGlobalBoolean takes jassthread thread, string variableName returns boolean"

SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalIntegerHint="[UjAPI] native SetJassGlobalInteger takes jassthread thread, string variableName, integer value returns boolean"

SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalRealHint="[UjAPI] native SetJassGlobalReal takes jassthread thread, string variableName, real value returns boolean"

SetJassGlobalString=SetJassGlobalString
SetJassGlobalString="SetJassGlobalString(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalStringHint="[UjAPI] native SetJassGlobalString takes jassthread thread, string variableName, string value returns boolean"

SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalHandleHint="[UjAPI] native SetJassGlobalHandle takes jassthread thread, string variableName, handle value returns boolean"

SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalBooleanHint="[UjAPI] native SetJassGlobalBoolean takes jassthread thread, string variableName, boolean value returns boolean"

GetJassLocalInteger=GetJassLocalInteger
GetJassLocalInteger="GetJassLocalInteger(",~variableName,")"
GetJassLocalIntegerHint="[UjAPI] native GetJassLocalInteger takes string variableName returns integer"

GetJassLocalReal=GetJassLocalReal
GetJassLocalReal="GetJassLocalReal(",~variableName,")"
GetJassLocalRealHint="[UjAPI] native GetJassLocalReal takes string variableName returns real"

GetJassLocalString=GetJassLocalString
GetJassLocalString="GetJassLocalString(",~variableName,")"
GetJassLocalStringHint="[UjAPI] native GetJassLocalString takes string variableName returns string"

GetJassLocalHandle=GetJassLocalHandle
GetJassLocalHandle="GetJassLocalHandle(",~variableName,")"
GetJassLocalHandleHint="[UjAPI] native GetJassLocalHandle takes string variableName returns handle"

GetJassLocalBoolean=GetJassLocalBoolean
GetJassLocalBoolean="GetJassLocalBoolean(",~variableName,")"
GetJassLocalBooleanHint="[UjAPI] native GetJassLocalBoolean takes string variableName returns boolean"

SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(",~variableName,", ",~value,")"
SetJassLocalIntegerHint="[UjAPI] native SetJassLocalInteger takes string variableName, integer value returns boolean"

SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(",~variableName,", ",~value,")"
SetJassLocalRealHint="[UjAPI] native SetJassLocalReal takes string variableName, real value returns boolean"

SetJassLocalString=SetJassLocalString
SetJassLocalString="SetJassLocalString(",~variableName,", ",~value,")"
SetJassLocalStringHint="[UjAPI] native SetJassLocalString takes string variableName, string value returns boolean"

SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(",~variableName,", ",~value,")"
SetJassLocalHandleHint="[UjAPI] native SetJassLocalHandle takes string variableName, handle value returns boolean"

SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(",~variableName,", ",~value,")"
SetJassLocalBooleanHint="[UjAPI] native SetJassLocalBoolean takes string variableName, boolean value returns boolean"

IsOperationLimitEnabled=IsOperationLimitEnabled
IsOperationLimitEnabled="IsOperationLimitEnabled(",")"
IsOperationLimitEnabledHint="[UjAPI] native IsOperationLimitEnabled takes nothing returns boolean"

GetOperationLimit=GetOperationLimit
GetOperationLimit="GetOperationLimit(",")"
GetOperationLimitHint="[UjAPI] native GetOperationLimit takes nothing returns integer"

GetCodeByName=GetCodeByName
GetCodeByName="GetCodeByName(",~funcName,")"
GetCodeByNameHint="[UjAPI] native GetCodeByName takes string funcName returns code"

CallNative=CallNative
CallNative="CallNative(",~funcName,", ",~params,")"
CallNativeHint="[UjAPI] native CallNative takes string funcName, string params returns integer"

CallFunction=CallFunction
CallFunction="CallFunction(",~funcName,", ",~signature,", ",~params,")"
CallFunctionHint="[UjAPI] native CallFunction takes string funcName, string signature, string params returns integer"

MathRound=MathRound
MathRound="MathRound(",~r,")"
MathRoundHint="[UjAPI] native MathRound takes real r returns integer"

MathRealRound=MathRealRound
MathRealRound="MathRealRound(",~r,")"
MathRealRoundHint="[UjAPI] native MathRealRound takes real r returns real"

MathRealFloor=MathRealFloor
MathRealFloor="MathRealFloor(",~r,")"
MathRealFloorHint="[UjAPI] native MathRealFloor takes real r returns real"

MathRealCeil=MathRealCeil
MathRealCeil="MathRealCeil(",~r,")"
MathRealCeilHint="[UjAPI] native MathRealCeil takes real r returns real"

MathRealAbs=MathRealAbs
MathRealAbs="MathRealAbs(",~r,")"
MathRealAbsHint="[UjAPI] native MathRealAbs takes real r returns real"

MathRealLog=MathRealLog
MathRealLog="MathRealLog(",~r,", ",~base,")"
MathRealLogHint="[UjAPI] native MathRealLog takes real r, integer base returns real"

MathRealLn=MathRealLn
MathRealLn="MathRealLn(",~r,")"
MathRealLnHint="[UjAPI] native MathRealLn takes real r returns real"

MathRealModulo=MathRealModulo
MathRealModulo="MathRealModulo(",~dividend,", ",~divisor,")"
MathRealModuloHint="[UjAPI] native MathRealModulo takes real dividend, real divisor returns real"

MathRealMin=MathRealMin
MathRealMin="MathRealMin(",~a,", ",~b,")"
MathRealMinHint="[UjAPI] native MathRealMin takes real a, real b returns real"

MathRealMax=MathRealMax
MathRealMax="MathRealMax(",~a,", ",~b,")"
MathRealMaxHint="[UjAPI] native MathRealMax takes real a, real b returns real"

MathRealSign=MathRealSign
MathRealSign="MathRealSign(",~r,")"
MathRealSignHint="[UjAPI] native MathRealSign takes real r returns integer"

MathRealClamp=MathRealClamp
MathRealClamp="MathRealClamp(",~value,", ",~min,", ",~max,")"
MathRealClampHint="[UjAPI] native MathRealClamp takes real value, real min, real max returns real"

MathRealLerp=MathRealLerp
MathRealLerp="MathRealLerp(",~a,", ",~b,", ",~t,")"
MathRealLerpHint="[UjAPI] native MathRealLerp takes real a, real b, real t returns real"

MathIntegerAbs=MathIntegerAbs
MathIntegerAbs="MathIntegerAbs(",~i,")"
MathIntegerAbsHint="[UjAPI] native MathIntegerAbs takes integer i returns integer"

MathIntegerLog=MathIntegerLog
MathIntegerLog="MathIntegerLog(",~i,", ",~base,")"
MathIntegerLogHint="[UjAPI] native MathIntegerLog takes integer i, integer base returns real"

MathIntegerLn=MathIntegerLn
MathIntegerLn="MathIntegerLn(",~i,")"
MathIntegerLnHint="[UjAPI] native MathIntegerLn takes integer i returns real"

MathIntegerModulo=MathIntegerModulo
MathIntegerModulo="MathIntegerModulo(",~dividend,", ",~divisor,")"
MathIntegerModuloHint="[UjAPI] native MathIntegerModulo takes integer dividend, integer divisor returns integer"

MathIntegerMin=MathIntegerMin
MathIntegerMin="MathIntegerMin(",~a,", ",~b,")"
MathIntegerMinHint="[UjAPI] native MathIntegerMin takes integer a, integer b returns integer"

MathIntegerMax=MathIntegerMax
MathIntegerMax="MathIntegerMax(",~a,", ",~b,")"
MathIntegerMaxHint="[UjAPI] native MathIntegerMax takes integer a, integer b returns integer"

MathIntegerSign=MathIntegerSign
MathIntegerSign="MathIntegerSign(",~i,")"
MathIntegerSignHint="[UjAPI] native MathIntegerSign takes integer i returns integer"

MathIntegerClamp=MathIntegerClamp
MathIntegerClamp="MathIntegerClamp(",~value,", ",~min,", ",~max,")"
MathIntegerClampHint="[UjAPI] native MathIntegerClamp takes integer value, integer min, integer max returns integer"

MathSinDeg=MathSinDeg
MathSinDeg="MathSinDeg(",~r,")"
MathSinDegHint="[UjAPI] native MathSinDeg takes real r returns real"

MathCosDeg=MathCosDeg
MathCosDeg="MathCosDeg(",~r,")"
MathCosDegHint="[UjAPI] native MathCosDeg takes real r returns real"

MathTanDeg=MathTanDeg
MathTanDeg="MathTanDeg(",~r,")"
MathTanDegHint="[UjAPI] native MathTanDeg takes real r returns real"

MathPointProjectionX=MathPointProjectionX
MathPointProjectionX="MathPointProjectionX(",~x,", ",~angle,", ",~distance,")"
MathPointProjectionXHint="[UjAPI] native MathPointProjectionX takes real x, real angle, real distance returns real"

MathPointProjectionY=MathPointProjectionY
MathPointProjectionY="MathPointProjectionY(",~y,", ",~angle,", ",~distance,")"
MathPointProjectionYHint="[UjAPI] native MathPointProjectionY takes real y, real angle, real distance returns real"

MathAngleBetweenPoints=MathAngleBetweenPoints
MathAngleBetweenPoints="MathAngleBetweenPoints(",~fromX,", ",~fromY,", ",~toX,", ",~toY,")"
MathAngleBetweenPointsHint="[UjAPI] native MathAngleBetweenPoints takes real fromX, real fromY, real toX, real toY returns real"

MathDistanceBetweenPoints=MathDistanceBetweenPoints
MathDistanceBetweenPoints="MathDistanceBetweenPoints(",~fromX,", ",~fromY,", ",~toX,", ",~toY,")"
MathDistanceBetweenPointsHint="[UjAPI] native MathDistanceBetweenPoints takes real fromX, real fromY, real toX, real toY returns real"

MathAngleBetweenLocations=MathAngleBetweenLocations
MathAngleBetweenLocations="MathAngleBetweenLocations(",~fromLoc,", ",~toLoc,")"
MathAngleBetweenLocationsHint="[UjAPI] native MathAngleBetweenLocations takes location fromLoc, location toLoc returns real"

MathDistanceBetweenLocations=MathDistanceBetweenLocations
MathDistanceBetweenLocations="MathDistanceBetweenLocations(",~fromLoc,", ",~toLoc,")"
MathDistanceBetweenLocationsHint="[UjAPI] native MathDistanceBetweenLocations takes location fromLoc, location toLoc returns real"

StringContains=StringContains
StringContains="StringContains(",~s,", ",~whichString,", ",~caseSensitive,")"
StringContainsHint="[UjAPI] native StringContains takes string s, string whichString, boolean caseSensitive returns boolean"

StringFind=StringFind
StringFind="StringFind(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindHint="[UjAPI] native StringFind takes string s, string whichString, boolean caseSensitive returns integer"

StringFindFirstOf=StringFindFirstOf
StringFindFirstOf="StringFindFirstOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindFirstOfHint="[UjAPI] native StringFindFirstOf takes string s, string whichString, boolean caseSensitive returns integer"

StringFindFirstNotOf=StringFindFirstNotOf
StringFindFirstNotOf="StringFindFirstNotOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindFirstNotOfHint="[UjAPI] native StringFindFirstNotOf takes string s, string whichString, boolean caseSensitive returns integer"

StringFindLastOf=StringFindLastOf
StringFindLastOf="StringFindLastOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindLastOfHint="[UjAPI] native StringFindLastOf takes string s, string whichString, boolean caseSensitive returns integer"

StringFindLastNotOf=StringFindLastNotOf
StringFindLastNotOf="StringFindLastNotOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindLastNotOfHint="[UjAPI] native StringFindLastNotOf takes string s, string whichString, boolean caseSensitive returns integer"

StringCount=StringCount
StringCount="StringCount(",~s,", ",~whichString,", ",~caseSensitive,")"
StringCountHint="[UjAPI] native StringCount takes string s, string whichString, boolean caseSensitive returns integer"

StringTrimLeft=StringTrimLeft
StringTrimLeft="StringTrimLeft(",~s,", ",~caseSensitive,")"
StringTrimLeftHint="[UjAPI] native StringTrimLeft takes string s, boolean caseSensitive returns string"

StringTrimRight=StringTrimRight
StringTrimRight="StringTrimRight(",~s,", ",~caseSensitive,")"
StringTrimRightHint="[UjAPI] native StringTrimRight takes string s, boolean caseSensitive returns string"

StringTrim=StringTrim
StringTrim="StringTrim(",~s,", ",~caseSensitive,")"
StringTrimHint="[UjAPI] native StringTrim takes string s, boolean caseSensitive returns string"

StringReverse=StringReverse
StringReverse="StringReverse(",~s,", ",~caseSensitive,")"
StringReverseHint="[UjAPI] native StringReverse takes string s, boolean caseSensitive returns string"

StringReplace=StringReplace
StringReplace="StringReplace(",~s,", ",~whichString,", ",~replaceWith,", ",~caseSensitive,")"
StringReplaceHint="[UjAPI] native StringReplace takes string s, string whichString, string replaceWith, boolean caseSensitive returns string"

StringInsert=StringInsert
StringInsert="StringInsert(",~s,", ",~whichString,", ",~whichPosition,", ",~caseSensitive,")"
StringInsertHint="[UjAPI] native StringInsert takes string s, string whichString, integer whichPosition, boolean caseSensitive returns string"

TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(",~filePath,")"
TextFileOpenHint="[UjAPI] native TextFileOpen takes string filePath returns textfilehandle"

TextFileExists=TextFileExists
TextFileExists="TextFileExists(",~filePath,")"
TextFileExistsHint="[UjAPI] native TextFileExists takes string filePath returns boolean"

TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(",~filePath,")"
TextFileGetSizeByPathHint="[UjAPI] native TextFileGetSizeByPath takes string filePath returns integer"

TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(",~whichTextFile,")"
TextFileGetSizeHint="[UjAPI] native TextFileGetSize takes textfilehandle whichTextFile returns integer"

TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(",~whichTextFile,")"
TextFileGetPathHint="[UjAPI] native TextFileGetPath takes textfilehandle whichTextFile returns string"

TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(",~whichTextFile,")"
TextFileCountLinesHint="[UjAPI] native TextFileCountLines takes textfilehandle whichTextFile returns integer"

TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(",~whichTextFile,", ",~lineNumber,")"
TextFileReadLineHint="[UjAPI] native TextFileReadLine takes textfilehandle whichTextFile, integer lineNumber returns string"

TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(",~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI] native TextFileReadAllLines takes textfilehandle whichTextFile returns string"

TextFileRead=TextFileRead
TextFileRead="TextFileRead(",~whichTextFile,")"
TextFileReadHint="[UjAPI] native TextFileRead takes textfilehandle whichTextFile returns string"

GetUjAPIVersion=GetUjAPIVersion
GetUjAPIVersion="GetUjAPIVersion(",")"
GetUjAPIVersionHint="[UjAPI] native GetUjAPIVersion takes nothing returns string"

GetGameVersion=GetGameVersion
GetGameVersion="GetGameVersion(",")"
GetGameVersionHint="[UjAPI] native GetGameVersion takes nothing returns string"

GetLocale=GetLocale
GetLocale="GetLocale(",")"
GetLocaleHint="[UjAPI] native GetLocale takes nothing returns string"

GetMiscDataString=GetMiscDataString
GetMiscDataString="GetMiscDataString(",~sectionName,", ",~optionName,", ",~index,")"
GetMiscDataStringHint="[UjAPI] native GetMiscDataString takes string sectionName, string optionName, integer index returns string"

SetMiscDataString=SetMiscDataString
SetMiscDataString="SetMiscDataString(",~sectionName,", ",~optionName,", ",~index,", ",~value,")"
SetMiscDataStringHint="[UjAPI] native SetMiscDataString takes string sectionName, string optionName, integer index, string value returns nothing"

GetSkinDataString=GetSkinDataString
GetSkinDataString="GetSkinDataString(",~raceName,", ",~sectionName,", ",~optionName,", ",~index,")"
GetSkinDataStringHint="[UjAPI] native GetSkinDataString takes string raceName, string sectionName, string optionName, integer index returns string"

SetSkinDataString=SetSkinDataString
SetSkinDataString="SetSkinDataString(",~raceName,", ",~sectionName,", ",~optionName,", ",~index,", ",~value,")"
SetSkinDataStringHint="[UjAPI] native SetSkinDataString takes string raceName, string sectionName, string optionName, integer index, string value returns nothing"

GetFDFDataString=GetFDFDataString
GetFDFDataString="GetFDFDataString(",~sectionName,")"
GetFDFDataStringHint="[UjAPI] native GetFDFDataString takes string sectionName returns string"

SetFDFDataString=SetFDFDataString
SetFDFDataString="SetFDFDataString(",~sectionName,", ",~value,")"
SetFDFDataStringHint="[UjAPI] native SetFDFDataString takes string sectionName, string value returns nothing"

ParseTooltip=ParseTooltip
ParseTooltip="ParseTooltip(",~text,")"
ParseTooltipHint="[UjAPI] native ParseTooltip takes string text returns string"

ParseAbilityTooltipByField=ParseAbilityTooltipByField
ParseAbilityTooltipByField="ParseAbilityTooltipByField(",~whichAbility,", ",~whichField,", ",~level,")"
ParseAbilityTooltipByFieldHint="[UjAPI] native ParseAbilityTooltipByField takes ability whichAbility, abilitystringfield whichField, integer level returns string"

ParseAbilityTooltip=ParseAbilityTooltip
ParseAbilityTooltip="ParseAbilityTooltip(",~whichAbility,", ",~text,", ",~level,")"
ParseAbilityTooltipHint="[UjAPI] native ParseAbilityTooltip takes ability whichAbility, string text, integer level returns string"

GetWheelDelta=GetWheelDelta
GetWheelDelta="GetWheelDelta(",")"
GetWheelDeltaHint="[UjAPI] native GetWheelDelta takes nothing returns integer"

GetFPS=GetFPS
GetFPS="GetFPS(",")"
GetFPSHint="[UjAPI] native GetFPS takes nothing returns real"

GetVisionMax=GetVisionMax
GetVisionMax="GetVisionMax(",")"
GetVisionMaxHint="[UjAPI] native GetVisionMax takes nothing returns real"

GetAttackSpeedMinBonus=GetAttackSpeedMinBonus
GetAttackSpeedMinBonus="GetAttackSpeedMinBonus(",")"
GetAttackSpeedMinBonusHint="[UjAPI] native GetAttackSpeedMinBonus takes nothing returns real"

GetAttackSpeedMaxBonus=GetAttackSpeedMaxBonus
GetAttackSpeedMaxBonus="GetAttackSpeedMaxBonus(",")"
GetAttackSpeedMaxBonusHint="[UjAPI] native GetAttackSpeedMaxBonus takes nothing returns real"

GetMoveSpeedMinAllowed=GetMoveSpeedMinAllowed
GetMoveSpeedMinAllowed="GetMoveSpeedMinAllowed(",")"
GetMoveSpeedMinAllowedHint="[UjAPI] native GetMoveSpeedMinAllowed takes nothing returns real"

GetMoveSpeedMaxAllowed=GetMoveSpeedMaxAllowed
GetMoveSpeedMaxAllowed="GetMoveSpeedMaxAllowed(",")"
GetMoveSpeedMaxAllowedHint="[UjAPI] native GetMoveSpeedMaxAllowed takes nothing returns real"

GetMappedTypeName=GetMappedTypeName
GetMappedTypeName="GetMappedTypeName(",~whichField,", ",~whichMapType,")"
GetMappedTypeNameHint="[UjAPI] native GetMappedTypeName takes mappedfield whichField, mappedtype whichMapType returns string"

IsSelectionEnabled=IsSelectionEnabled
IsSelectionEnabled="IsSelectionEnabled(",")"
IsSelectionEnabledHint="[UjAPI] native IsSelectionEnabled takes nothing returns boolean"

IsSelectionCircleEnabled=IsSelectionCircleEnabled
IsSelectionCircleEnabled="IsSelectionCircleEnabled(",")"
IsSelectionCircleEnabledHint="[UjAPI] native IsSelectionCircleEnabled takes nothing returns boolean"

IsTargetIndicatorEnabled=IsTargetIndicatorEnabled
IsTargetIndicatorEnabled="IsTargetIndicatorEnabled(",")"
IsTargetIndicatorEnabledHint="[UjAPI] native IsTargetIndicatorEnabled takes nothing returns boolean"

IsRenderStage=IsRenderStage
IsRenderStage="IsRenderStage(",~renderStage,")"
IsRenderStageHint="[UjAPI] native IsRenderStage takes renderstage renderStage returns boolean"

IsStatbarEnabled=IsStatbarEnabled
IsStatbarEnabled="IsStatbarEnabled(",")"
IsStatbarEnabledHint="[UjAPI] native IsStatbarEnabled takes nothing returns boolean"

IsCursorInTargetMode=IsCursorInTargetMode
IsCursorInTargetMode="IsCursorInTargetMode(",")"
IsCursorInTargetModeHint="[UjAPI] native IsCursorInTargetMode takes nothing returns boolean"

IsSubmenuOpen=IsSubmenuOpen
IsSubmenuOpen="IsSubmenuOpen(",")"
IsSubmenuOpenHint="[UjAPI] native IsSubmenuOpen takes nothing returns boolean"

GetAxisZ=GetAxisZ
GetAxisZ="GetAxisZ(",~x,", ",~y,")"
GetAxisZHint="[UjAPI] native GetAxisZ takes real x, real y returns real"

GetAxisZEx=GetAxisZEx
GetAxisZEx="GetAxisZEx(",~x,", ",~y,", ",~estimateLevel,", ",~checkSurface,", ",~forceWalkableCheck,")"
GetAxisZExHint="[UjAPI] native GetAxisZEx takes real x, real y, integer estimateLevel, boolean checkSurface, boolean forceWalkableCheck returns real"

GetTerrainFlagsAt=GetTerrainFlagsAt
GetTerrainFlagsAt="GetTerrainFlagsAt(",~x,", ",~y,")"
GetTerrainFlagsAtHint="[UjAPI] native GetTerrainFlagsAt takes real x, real y returns integer"

GetTerrainHeightAt=GetTerrainHeightAt
GetTerrainHeightAt="GetTerrainHeightAt(",~x,", ",~y,")"
GetTerrainHeightAtHint="[UjAPI] native GetTerrainHeightAt takes real x, real y returns real"

IsTerrainBordersWaterAt=IsTerrainBordersWaterAt
IsTerrainBordersWaterAt="IsTerrainBordersWaterAt(",~x,", ",~y,")"
IsTerrainBordersWaterAtHint="[UjAPI] native IsTerrainBordersWaterAt takes real x, real y returns boolean"

IsWaterAt=IsWaterAt
IsWaterAt="IsWaterAt(",~x,", ",~y,")"
IsWaterAtHint="[UjAPI] native IsWaterAt takes real x, real y returns boolean"

IsWaterDeepAt=IsWaterDeepAt
IsWaterDeepAt="IsWaterDeepAt(",~x,", ",~y,")"
IsWaterDeepAtHint="[UjAPI] native IsWaterDeepAt takes real x, real y returns boolean"

GetWaterLevelAt=GetWaterLevelAt
GetWaterLevelAt="GetWaterLevelAt(",~x,", ",~y,")"
GetWaterLevelAtHint="[UjAPI] native GetWaterLevelAt takes real x, real y returns integer"

GetWaterDepthAt=GetWaterDepthAt
GetWaterDepthAt="GetWaterDepthAt(",~x,", ",~y,")"
GetWaterDepthAtHint="[UjAPI] native GetWaterDepthAt takes real x, real y returns real"

GetMapFogZ=GetMapFogZ
GetMapFogZ="GetMapFogZ(",")"
GetMapFogZHint="[UjAPI] native GetMapFogZ takes nothing returns real"

GetMapFogColour=GetMapFogColour
GetMapFogColour="GetMapFogColour(",")"
GetMapFogColourHint="[UjAPI] native GetMapFogColour takes nothing returns integer"

GetTriggerEvent=GetTriggerEvent
GetTriggerEvent="GetTriggerEvent(",")"
GetTriggerEventHint="[UjAPI] native GetTriggerEvent takes nothing returns event"

TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(",~whichTrigger,")"
TriggerCountEventsHint="[UjAPI] native TriggerCountEvents takes trigger whichTrigger returns integer"

TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(",~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI] native TriggerCountConditions takes trigger whichTrigger returns integer"

TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(",~whichTrigger,")"
TriggerCountActionsHint="[UjAPI] native TriggerCountActions takes trigger whichTrigger returns integer"

ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
ReplaceSoundHint="[UjAPI] native ReplaceSound takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"

ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI] native ReplaceSoundWithLabel takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"

ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(",~whichSound,", ",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI] native ReplaceSoundFromLabel takes sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"

ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(",~whichSound,", ",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI] native ReplaceMIDISound takes sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"

GetSystemTime=GetSystemTime
GetSystemTime="GetSystemTime(",~whichTimeType,")"
GetSystemTimeHint="[UjAPI] native GetSystemTime takes timetype whichTimeType returns integer"

GetLocalTime=GetLocalTime
GetLocalTime="GetLocalTime(",~whichTimeType,")"
GetLocalTimeHint="[UjAPI] native GetLocalTime takes timetype whichTimeType returns integer"

GetTimeStamp=GetTimeStamp
GetTimeStamp="GetTimeStamp(",~isLocalTime,", ",~isMiliseconds,")"
GetTimeStampHint="[UjAPI] native GetTimeStamp takes boolean isLocalTime, integer isMiliseconds returns string"

GetTickCount=GetTickCount
GetTickCount="GetTickCount(",")"
GetTickCountHint="[UjAPI] native GetTickCount takes nothing returns integer"

BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(",~benchType,")"
BenchmarkGetElapsedHint="[UjAPI] native BenchmarkGetElapsed takes integer benchType returns string"

GetAspectRatioRelativeX=GetAspectRatioRelativeX
GetAspectRatioRelativeX="GetAspectRatioRelativeX(",~x,")"
GetAspectRatioRelativeXHint="[UjAPI] native GetAspectRatioRelativeX takes real x returns real"

GetAspectRatioRelativeY=GetAspectRatioRelativeY
GetAspectRatioRelativeY="GetAspectRatioRelativeY(",~y,")"
GetAspectRatioRelativeYHint="[UjAPI] native GetAspectRatioRelativeY takes real y returns real"

IsWindowActive=IsWindowActive
IsWindowActive="IsWindowActive(",")"
IsWindowActiveHint="[UjAPI] native IsWindowActive takes nothing returns boolean"

IsWindowMode=IsWindowMode
IsWindowMode="IsWindowMode(",")"
IsWindowModeHint="[UjAPI] native IsWindowMode takes nothing returns boolean"

GetWindowWidth=GetWindowWidth
GetWindowWidth="GetWindowWidth(",")"
GetWindowWidthHint="[UjAPI] native GetWindowWidth takes nothing returns integer"

GetWindowHeight=GetWindowHeight
GetWindowHeight="GetWindowHeight(",")"
GetWindowHeightHint="[UjAPI] native GetWindowHeight takes nothing returns integer"

GetClientWidth=GetClientWidth
GetClientWidth="GetClientWidth(",")"
GetClientWidthHint="[UjAPI] native GetClientWidth takes nothing returns integer"

GetClientHeight=GetClientHeight
GetClientHeight="GetClientHeight(",")"
GetClientHeightHint="[UjAPI] native GetClientHeight takes nothing returns integer"

GetWindowX=GetWindowX
GetWindowX="GetWindowX(",")"
GetWindowXHint="[UjAPI] native GetWindowX takes nothing returns integer"

GetWindowY=GetWindowY
GetWindowY="GetWindowY(",")"
GetWindowYHint="[UjAPI] native GetWindowY takes nothing returns integer"

GetWindowCenterX=GetWindowCenterX
GetWindowCenterX="GetWindowCenterX(",")"
GetWindowCenterXHint="[UjAPI] native GetWindowCenterX takes nothing returns integer"

GetWindowCenterY=GetWindowCenterY
GetWindowCenterY="GetWindowCenterY(",")"
GetWindowCenterYHint="[UjAPI] native GetWindowCenterY takes nothing returns integer"

IsCursorEnabled=IsCursorEnabled
IsCursorEnabled="IsCursorEnabled(",")"
IsCursorEnabledHint="[UjAPI] native IsCursorEnabled takes nothing returns boolean"

IsCursorAnimationLocked=IsCursorAnimationLocked
IsCursorAnimationLocked="IsCursorAnimationLocked(",")"
IsCursorAnimationLockedHint="[UjAPI] native IsCursorAnimationLocked takes nothing returns boolean"

GetMouseScreenRelativeX=GetMouseScreenRelativeX
GetMouseScreenRelativeX="GetMouseScreenRelativeX(",")"
GetMouseScreenRelativeXHint="[UjAPI] native GetMouseScreenRelativeX takes nothing returns real"

GetMouseScreenRelativeY=GetMouseScreenRelativeY
GetMouseScreenRelativeY="GetMouseScreenRelativeY(",")"
GetMouseScreenRelativeYHint="[UjAPI] native GetMouseScreenRelativeY takes nothing returns real"

GetMouseScreenAbsoluteX=GetMouseScreenAbsoluteX
GetMouseScreenAbsoluteX="GetMouseScreenAbsoluteX(",")"
GetMouseScreenAbsoluteXHint="[UjAPI] native GetMouseScreenAbsoluteX takes nothing returns real"

GetMouseScreenAbsoluteY=GetMouseScreenAbsoluteY
GetMouseScreenAbsoluteY="GetMouseScreenAbsoluteY(",")"
GetMouseScreenAbsoluteYHint="[UjAPI] native GetMouseScreenAbsoluteY takes nothing returns real"

GetMouseScreenPixelX=GetMouseScreenPixelX
GetMouseScreenPixelX="GetMouseScreenPixelX(",")"
GetMouseScreenPixelXHint="[UjAPI] native GetMouseScreenPixelX takes nothing returns integer"

GetMouseScreenPixelY=GetMouseScreenPixelY
GetMouseScreenPixelY="GetMouseScreenPixelY(",")"
GetMouseScreenPixelYHint="[UjAPI] native GetMouseScreenPixelY takes nothing returns integer"

GetMouseWorldX=GetMouseWorldX
GetMouseWorldX="GetMouseWorldX(",")"
GetMouseWorldXHint="[UjAPI] native GetMouseWorldX takes nothing returns real"

GetMouseWorldY=GetMouseWorldY
GetMouseWorldY="GetMouseWorldY(",")"
GetMouseWorldYHint="[UjAPI] native GetMouseWorldY takes nothing returns real"

GetMouseWorldZ=GetMouseWorldZ
GetMouseWorldZ="GetMouseWorldZ(",")"
GetMouseWorldZHint="[UjAPI] native GetMouseWorldZ takes nothing returns real"

DisplayTopMessage=DisplayTopMessage
DisplayTopMessage="DisplayTopMessage(",~toPlayer,", ",~message,")"
DisplayTopMessageHint="[UjAPI] native DisplayTopMessage takes player toPlayer, string message returns nothing"

DisplayTimedTopMessage=DisplayTimedTopMessage
DisplayTimedTopMessage="DisplayTimedTopMessage(",~toPlayer,", ",~duration,", ",~message,")"
DisplayTimedTopMessageHint="[UjAPI] native DisplayTimedTopMessage takes player toPlayer, real duration, string message returns nothing"

IsHandleDestroyed=IsHandleDestroyed
IsHandleDestroyed="IsHandleDestroyed(",~whichHandle,")"
IsHandleDestroyedHint="[UjAPI] native IsHandleDestroyed takes handle whichHandle returns boolean"

GetHandleReferenceCount=GetHandleReferenceCount
GetHandleReferenceCount="GetHandleReferenceCount(",~whichHandle,")"
GetHandleReferenceCountHint="[UjAPI] native GetHandleReferenceCount takes handle whichHandle returns integer"

GetHandleBaseTypeId=GetHandleBaseTypeId
GetHandleBaseTypeId="GetHandleBaseTypeId(",~whichHandle,")"
GetHandleBaseTypeIdHint="[UjAPI] native GetHandleBaseTypeId takes handle whichHandle returns integer"

GetHandleBaseTypeName=GetHandleBaseTypeName
GetHandleBaseTypeName="GetHandleBaseTypeName(",~whichHandle,")"
GetHandleBaseTypeNameHint="[UjAPI] native GetHandleBaseTypeName takes handle whichHandle returns string"

GetFilterHandle=GetFilterHandle
GetFilterHandle="GetFilterHandle(",")"
GetFilterHandleHint="[UjAPI] native GetFilterHandle takes nothing returns handle"

GetEnumHandle=GetEnumHandle
GetEnumHandle="GetEnumHandle(",")"
GetEnumHandleHint="[UjAPI] native GetEnumHandle takes nothing returns handle"

GetTriggerHackId=GetTriggerHackId
GetTriggerHackId="GetTriggerHackId(",")"
GetTriggerHackIdHint="[UjAPI] native GetTriggerHackId takes nothing returns integer"

GetTriggerHackType=GetTriggerHackType
GetTriggerHackType="GetTriggerHackType(",")"
GetTriggerHackTypeHint="[UjAPI] native GetTriggerHackType takes nothing returns integer"

GetTriggerHackLine=GetTriggerHackLine
GetTriggerHackLine="GetTriggerHackLine(",")"
GetTriggerHackLineHint="[UjAPI] native GetTriggerHackLine takes nothing returns integer"

SaveHandle=SaveHandle
SaveHandle="SaveHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandle,")"
SaveHandleHint="[UjAPI] native SaveHandle takes hashtable whichHashtable, integer parentKey, integer childKey, handle whichHandle returns boolean"

SaveCode=SaveCode
SaveCode="SaveCode(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichCode,")"
SaveCodeHint="[UjAPI] native SaveCode takes hashtable whichHashtable, integer parentKey, integer childKey, code whichCode returns boolean"

SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI] native SaveAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, attacktype whichAttackType returns boolean"

SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI] native SaveDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, damagetype whichDamageType returns boolean"

SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI] native SaveWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, weapontype whichWeaponType returns boolean"

SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBuff,")"
SaveBuffHandleHint="[UjAPI] native SaveBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey, buff whichBuff returns boolean"

SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichsprite,")"
SaveSpriteHandleHint="[UjAPI] native SaveSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sprite whichsprite returns boolean"

SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI] native SaveWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, war3image whichWar3Image returns boolean"

SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI] native SaveDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey, doodad whichDoodad returns boolean"

SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFile,")"
SaveTextFileHandleHint="[UjAPI] native SaveTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, textfilehandle whichFile returns boolean"

SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI] native SaveProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, projectile whichProjectile returns boolean"

SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFrame,")"
SaveFrameHandleHint="[UjAPI] native SaveFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey, framehandle whichFrame returns boolean"

SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandleList,")"
SaveHandleListHint="[UjAPI] native SaveHandleList takes hashtable whichHashtable, integer parentKey, integer childKey, handlelist whichHandleList returns boolean"

LoadHandle=LoadHandle
LoadHandle="LoadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleHint="[UjAPI] native LoadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns handle"

LoadCode=LoadCode
LoadCode="LoadCode(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadCodeHint="[UjAPI] native LoadCode takes hashtable whichHashtable, integer parentKey, integer childKey returns code"

LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAttackTypeHandleHint="[UjAPI] native LoadAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns attacktype"

LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDamageTypeHandleHint="[UjAPI] native LoadDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns damagetype"

LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI] native LoadWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns weapontype"

LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBuffHandleHint="[UjAPI] native LoadBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns buff"

LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSpriteHandleHint="[UjAPI] native LoadSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sprite"

LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWar3ImageHandleHint="[UjAPI] native LoadWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns war3image"

LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDoodadHandleHint="[UjAPI] native LoadDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns doodad"

LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextFileHandleHint="[UjAPI] native LoadTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns textfilehandle"

LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadProjectileHandleHint="[UjAPI] native LoadProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns projectile"

LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFrameHandleHint="[UjAPI] native LoadFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns framehandle"

LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleListHint="[UjAPI] native LoadHandleList takes hashtable whichHashtable, integer parentKey, integer childKey returns handlelist"

GetHostPlayer=GetHostPlayer
GetHostPlayer="GetHostPlayer(",")"
GetHostPlayerHint="[UjAPI] native GetHostPlayer takes nothing returns player"

IsPlayerMuted=IsPlayerMuted
IsPlayerMuted="IsPlayerMuted(",~whichPlayer,")"
IsPlayerMutedHint="[UjAPI] native IsPlayerMuted takes player whichPlayer returns boolean"

IsPlayerMutedForPlayer=IsPlayerMutedForPlayer
IsPlayerMutedForPlayer="IsPlayerMutedForPlayer(",~whichPlayer,", ",~toPlayer,")"
IsPlayerMutedForPlayerHint="[UjAPI] native IsPlayerMutedForPlayer takes player whichPlayer, player toPlayer returns boolean"

ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(",~whichForce,", ",~whichPlayer,")"
ForceHasPlayerHint="[UjAPI] native ForceHasPlayer takes force whichForce, player whichPlayer returns boolean"

ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(",~whichForce,")"
ForceCountPlayersHint="[UjAPI] native ForceCountPlayers takes force whichForce returns integer"

GetConnectionType=GetConnectionType
GetConnectionType="GetConnectionType(",")"
GetConnectionTypeHint="[UjAPI] native GetConnectionType takes nothing returns connectiontype"

IsReplay=IsReplay
IsReplay="IsReplay(",")"
IsReplayHint="[UjAPI] native IsReplay takes nothing returns boolean"

GetFogModifierForPlayer=GetFogModifierForPlayer
GetFogModifierForPlayer="GetFogModifierForPlayer(",~whichFogModifier,")"
GetFogModifierForPlayerHint="[UjAPI] native GetFogModifierForPlayer takes fogmodifier whichFogModifier returns player"

IsFogModifierFogState=IsFogModifierFogState
IsFogModifierFogState="IsFogModifierFogState(",~whichFogModifier,", ",~whichState,")"
IsFogModifierFogStateHint="[UjAPI] native IsFogModifierFogState takes fogmodifier whichFogModifier, fogstate whichState returns boolean"

GetFogModifierX=GetFogModifierX
GetFogModifierX="GetFogModifierX(",~whichFogModifier,")"
GetFogModifierXHint="[UjAPI] native GetFogModifierX takes fogmodifier whichFogModifier returns real"

GetFogModifierY=GetFogModifierY
GetFogModifierY="GetFogModifierY(",~whichFogModifier,")"
GetFogModifierYHint="[UjAPI] native GetFogModifierY takes fogmodifier whichFogModifier returns real"

GetFogModifierZ=GetFogModifierZ
GetFogModifierZ="GetFogModifierZ(",~whichFogModifier,")"
GetFogModifierZHint="[UjAPI] native GetFogModifierZ takes fogmodifier whichFogModifier returns real"

GetFogModifierRadius=GetFogModifierRadius
GetFogModifierRadius="GetFogModifierRadius(",~whichFogModifier,")"
GetFogModifierRadiusHint="[UjAPI] native GetFogModifierRadius takes fogmodifier whichFogModifier returns real"

GetFogModifierRect=GetFogModifierRect
GetFogModifierRect="GetFogModifierRect(",~whichFogModifier,")"
GetFogModifierRectHint="[UjAPI] native GetFogModifierRect takes fogmodifier whichFogModifier returns rect"

GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(",~whichGroup,")"
GroupGetCountHint="[UjAPI] native GroupGetCount takes group whichGroup returns integer"

GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(",~whichGroup,", ",~whichUnit,")"
GroupContainsUnitHint="[UjAPI] native GroupContainsUnit takes group whichGroup, unit whichUnit returns boolean"

GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(",~whichGroup,", ",~index,")"
GroupGetUnitByIndexHint="[UjAPI] native GroupGetUnitByIndex takes group whichGroup, integer index returns unit"

GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(",~whichGroup,")"
GroupForEachUnitHint="[UjAPI] native GroupForEachUnit takes group whichGroup returns unit"

GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupAddGroupExHint="[UjAPI] native GroupAddGroupEx takes group destGroup, group sourceGroup returns integer"

GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI] native GroupRemoveGroupEx takes group destGroup, group sourceGroup returns integer"

GetTradeSource=GetTradeSource
GetTradeSource="GetTradeSource(",")"
GetTradeSourceHint="[UjAPI] native GetTradeSource takes nothing returns player"

GetTradeTarget=GetTradeTarget
GetTradeTarget="GetTradeTarget(",")"
GetTradeTargetHint="[UjAPI] native GetTradeTarget takes nothing returns player"

GetTradeGold=GetTradeGold
GetTradeGold="GetTradeGold(",")"
GetTradeGoldHint="[UjAPI] native GetTradeGold takes nothing returns integer"

GetTradeLumber=GetTradeLumber
GetTradeLumber="GetTradeLumber(",")"
GetTradeLumberHint="[UjAPI] native GetTradeLumber takes nothing returns integer"

IsTradeState=IsTradeState
IsTradeState="IsTradeState(",~whichTradeState,")"
IsTradeStateHint="[UjAPI] native IsTradeState takes tradestate whichTradeState returns boolean"

HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI] native HandleListCreate takes nothing returns handlelist"

HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(",~destHandleList,", ",~sourceHandleList,")"
HandleListAddListHint="[UjAPI] native HandleListAddList takes handlelist destHandleList, handlelist sourceHandleList returns integer"

HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(",~destHandleList,", ",~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI] native HandleListRemoveList takes handlelist destHandleList, handlelist sourceHandleList returns integer"

HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(",~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI] native HandleListRemoveEmpty takes handlelist whichHandleList returns integer"

HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListContainsHandleHint="[UjAPI] native HandleListContainsHandle takes handlelist whichHandleList, handle whichHandle returns boolean"

HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(",~whichHandleList,", ",~typeId,")"
HandleListContainsTypeIdHint="[UjAPI] native HandleListContainsTypeId takes handlelist whichHandleList, integer typeId returns boolean"

HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(",~whichHandleList,")"
HandleListGetCountHint="[UjAPI] native HandleListGetCount takes handlelist whichHandleList returns integer"

HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(",~whichHandleList,", ",~handleTypeId,")"
HandleListGetCountExHint="[UjAPI] native HandleListGetCountEx takes handlelist whichHandleList, integer handleTypeId returns integer"

HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(",~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI] native HandleListGetAgentCount takes handlelist whichHandleList returns integer"

HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(",~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI] native HandleListGetWidgetCount takes handlelist whichHandleList returns integer"

HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(",~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI] native HandleListGetUnitCount takes handlelist whichHandleList returns integer"

HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(",~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI] native HandleListGetItemCount takes handlelist whichHandleList returns integer"

HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(",~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI] native HandleListGetDestructableCount takes handlelist whichHandleList returns integer"

HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(",~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI] native HandleListGetDoodadCount takes handlelist whichHandleList returns integer"

HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(",~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI] native HandleListGetAbilityCount takes handlelist whichHandleList returns integer"

HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(",~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI] native HandleListGetBuffCount takes handlelist whichHandleList returns integer"

HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(",~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI] native HandleListGetSpriteCount takes handlelist whichHandleList returns integer"

HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(",~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI] native HandleListGetEffectCount takes handlelist whichHandleList returns integer"

HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(",~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI] native HandleListGetProjectileCount takes handlelist whichHandleList returns integer"

HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(",~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI] native HandleListGetFrameCount takes handlelist whichHandleList returns integer"

HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(",~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI] native HandleListGetOrderCount takes handlelist whichHandleList returns integer"

HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(",~whichHandleList,", ",~index,")"
HandleListGetHandleByIndexHint="[UjAPI] native HandleListGetHandleByIndex takes handlelist whichHandleList, integer index returns handle"

HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(",~whichHandleList,", ",~handleTypeId,", ",~index,")"
HandleListGetHandleByIndexExHint="[UjAPI] native HandleListGetHandleByIndexEx takes handlelist whichHandleList, integer handleTypeId, integer index returns handle"

HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(",~whichHandleList,", ",~typeId,", ",~index,")"
HandleListGetHandleByIdHint="[UjAPI] native HandleListGetHandleById takes handlelist whichHandleList, integer typeId, integer index returns handle"

HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAgentByIndexHint="[UjAPI] native HandleListGetAgentByIndex takes handlelist whichHandleList, integer index returns agent"

HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(",~whichHandleList,", ",~index,")"
HandleListGetWidgetByIndexHint="[UjAPI] native HandleListGetWidgetByIndex takes handlelist whichHandleList, integer index returns widget"

HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(",~whichHandleList,", ",~index,")"
HandleListGetUnitByIndexHint="[UjAPI] native HandleListGetUnitByIndex takes handlelist whichHandleList, integer index returns unit"

HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(",~whichHandleList,", ",~index,")"
HandleListGetItemByIndexHint="[UjAPI] native HandleListGetItemByIndex takes handlelist whichHandleList, integer index returns item"

HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDestructableByIndexHint="[UjAPI] native HandleListGetDestructableByIndex takes handlelist whichHandleList, integer index returns destructable"

HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDoodadByIndexHint="[UjAPI] native HandleListGetDoodadByIndex takes handlelist whichHandleList, integer index returns doodad"

HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAbilityByIndexHint="[UjAPI] native HandleListGetAbilityByIndex takes handlelist whichHandleList, integer index returns ability"

HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(",~whichHandleList,", ",~index,")"
HandleListGetBuffByIndexHint="[UjAPI] native HandleListGetBuffByIndex takes handlelist whichHandleList, integer index returns buff"

HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(",~whichHandleList,", ",~index,")"
HandleListGetSpriteByIndexHint="[UjAPI] native HandleListGetSpriteByIndex takes handlelist whichHandleList, integer index returns sprite"

HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(",~whichHandleList,", ",~index,")"
HandleListGetEffectByIndexHint="[UjAPI] native HandleListGetEffectByIndex takes handlelist whichHandleList, integer index returns effect"

HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(",~whichHandleList,", ",~index,")"
HandleListGetProjectileByIndexHint="[UjAPI] native HandleListGetProjectileByIndex takes handlelist whichHandleList, integer index returns projectile"

HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(",~whichHandleList,", ",~index,")"
HandleListGetFrameByIndexHint="[UjAPI] native HandleListGetFrameByIndex takes handlelist whichHandleList, integer index returns framehandle"

HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(",~whichHandleList,", ",~index,")"
HandleListGetOrderByIndexHint="[UjAPI] native HandleListGetOrderByIndex takes handlelist whichHandleList, integer index returns orderhandle"

HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI] native HandleListGetFilterHandle takes nothing returns handle"

HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI] native HandleListGetFilterAgent takes nothing returns agent"

HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI] native HandleListGetFilterWidget takes nothing returns widget"

HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI] native HandleListGetFilterUnit takes nothing returns unit"

HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI] native HandleListGetFilterItem takes nothing returns item"

HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI] native HandleListGetFilterDestructable takes nothing returns destructable"

HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI] native HandleListGetFilterDoodad takes nothing returns doodad"

HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI] native HandleListGetFilterAbility takes nothing returns ability"

HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI] native HandleListGetFilterBuff takes nothing returns buff"

HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI] native HandleListGetFilterSprite takes nothing returns sprite"

HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI] native HandleListGetFilterEffect takes nothing returns effect"

HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI] native HandleListGetFilterProjectile takes nothing returns projectile"

HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI] native HandleListGetFilterFrame takes nothing returns framehandle"

HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI] native HandleListGetFilterOrder takes nothing returns orderhandle"

HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI] native HandleListGetEnumHandle takes nothing returns handle"

HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI] native HandleListGetEnumAgent takes nothing returns agent"

HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI] native HandleListGetEnumWidget takes nothing returns widget"

HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI] native HandleListGetEnumUnit takes nothing returns unit"

HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI] native HandleListGetEnumItem takes nothing returns item"

HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI] native HandleListGetEnumDestructable takes nothing returns destructable"

HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI] native HandleListGetEnumDoodad takes nothing returns doodad"

HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI] native HandleListGetEnumAbility takes nothing returns ability"

HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI] native HandleListGetEnumBuff takes nothing returns buff"

HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI] native HandleListGetEnumSprite takes nothing returns sprite"

HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI] native HandleListGetEnumEffect takes nothing returns effect"

HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI] native HandleListGetEnumProjectile takes nothing returns projectile"

HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI] native HandleListGetEnumFrame takes nothing returns framehandle"

HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI] native HandleListGetEnumOrder takes nothing returns orderhandle"

GetBaseTextTagFont=GetBaseTextTagFont
GetBaseTextTagFont="GetBaseTextTagFont(",")"
GetBaseTextTagFontHint="[UjAPI] native GetBaseTextTagFont takes nothing returns string"

IsTextTagVisible=IsTextTagVisible
IsTextTagVisible="IsTextTagVisible(",~whichTextTag,")"
IsTextTagVisibleHint="[UjAPI] native IsTextTagVisible takes texttag whichTextTag returns boolean"

IsTextTagSuspended=IsTextTagSuspended
IsTextTagSuspended="IsTextTagSuspended(",~whichTextTag,")"
IsTextTagSuspendedHint="[UjAPI] native IsTextTagSuspended takes texttag whichTextTag returns boolean"

IsTextTagPermanent=IsTextTagPermanent
IsTextTagPermanent="IsTextTagPermanent(",~whichTextTag,")"
IsTextTagPermanentHint="[UjAPI] native IsTextTagPermanent takes texttag whichTextTag returns real"

GetTextTagX=GetTextTagX
GetTextTagX="GetTextTagX(",~whichTextTag,")"
GetTextTagXHint="[UjAPI] native GetTextTagX takes texttag whichTextTag returns real"

GetTextTagY=GetTextTagY
GetTextTagY="GetTextTagY(",~whichTextTag,")"
GetTextTagYHint="[UjAPI] native GetTextTagY takes texttag whichTextTag returns real"

GetTextTagZ=GetTextTagZ
GetTextTagZ="GetTextTagZ(",~whichTextTag,")"
GetTextTagZHint="[UjAPI] native GetTextTagZ takes texttag whichTextTag returns real"

GetTextTagScreenX=GetTextTagScreenX
GetTextTagScreenX="GetTextTagScreenX(",~whichTextTag,")"
GetTextTagScreenXHint="[UjAPI] native GetTextTagScreenX takes texttag whichTextTag returns real"

GetTextTagScreenY=GetTextTagScreenY
GetTextTagScreenY="GetTextTagScreenY(",~whichTextTag,")"
GetTextTagScreenYHint="[UjAPI] native GetTextTagScreenY takes texttag whichTextTag returns real"

GetTextTagHeight=GetTextTagHeight
GetTextTagHeight="GetTextTagHeight(",~whichTextTag,")"
GetTextTagHeightHint="[UjAPI] native GetTextTagHeight takes texttag whichTextTag returns real"

GetTextTagPositionLoc=GetTextTagPositionLoc
GetTextTagPositionLoc="GetTextTagPositionLoc(",~whichTextTag,")"
GetTextTagPositionLocHint="[UjAPI] native GetTextTagPositionLoc takes texttag whichTextTag returns location"

GetTextTagColour=GetTextTagColour
GetTextTagColour="GetTextTagColour(",~whichTextTag,")"
GetTextTagColourHint="[UjAPI] native GetTextTagColour takes texttag whichTextTag returns integer"

GetTextTagAlpha=GetTextTagAlpha
GetTextTagAlpha="GetTextTagAlpha(",~whichTextTag,")"
GetTextTagAlphaHint="[UjAPI] native GetTextTagAlpha takes texttag whichTextTag returns integer"

GetTextTagVelocityX=GetTextTagVelocityX
GetTextTagVelocityX="GetTextTagVelocityX(",~whichTextTag,")"
GetTextTagVelocityXHint="[UjAPI] native GetTextTagVelocityX takes texttag whichTextTag returns real"

GetTextTagVelocityY=GetTextTagVelocityY
GetTextTagVelocityY="GetTextTagVelocityY(",~whichTextTag,")"
GetTextTagVelocityYHint="[UjAPI] native GetTextTagVelocityY takes texttag whichTextTag returns real"

GetTextTagVelocityZ=GetTextTagVelocityZ
GetTextTagVelocityZ="GetTextTagVelocityZ(",~whichTextTag,")"
GetTextTagVelocityZHint="[UjAPI] native GetTextTagVelocityZ takes texttag whichTextTag returns real"

GetTextTagAge=GetTextTagAge
GetTextTagAge="GetTextTagAge(",~whichTextTag,")"
GetTextTagAgeHint="[UjAPI] native GetTextTagAge takes texttag whichTextTag returns real"

GetTextTagLifespan=GetTextTagLifespan
GetTextTagLifespan="GetTextTagLifespan(",~whichTextTag,")"
GetTextTagLifespanHint="[UjAPI] native GetTextTagLifespan takes texttag whichTextTag returns real"

GetTextTagFadepoint=GetTextTagFadepoint
GetTextTagFadepoint="GetTextTagFadepoint(",~whichTextTag,")"
GetTextTagFadepointHint="[UjAPI] native GetTextTagFadepoint takes texttag whichTextTag returns real"

GetTextTagShadowColour=GetTextTagShadowColour
GetTextTagShadowColour="GetTextTagShadowColour(",~whichTextTag,")"
GetTextTagShadowColourHint="[UjAPI] native GetTextTagShadowColour takes texttag whichTextTag returns integer"

GetTextTagShadowAlpha=GetTextTagShadowAlpha
GetTextTagShadowAlpha="GetTextTagShadowAlpha(",~whichTextTag,")"
GetTextTagShadowAlphaHint="[UjAPI] native GetTextTagShadowAlpha takes texttag whichTextTag returns integer"

GetTextTagText=GetTextTagText
GetTextTagText="GetTextTagText(",~whichTextTag,")"
GetTextTagTextHint="[UjAPI] native GetTextTagText takes texttag whichTextTag returns string"

GetTextTagFont=GetTextTagFont
GetTextTagFont="GetTextTagFont(",~whichTextTag,")"
GetTextTagFontHint="[UjAPI] native GetTextTagFont takes texttag whichTextTag returns string"

GetLightningSourceX=GetLightningSourceX
GetLightningSourceX="GetLightningSourceX(",~whichBolt,")"
GetLightningSourceXHint="[UjAPI] native GetLightningSourceX takes lightning whichBolt returns real"

GetLightningSourceY=GetLightningSourceY
GetLightningSourceY="GetLightningSourceY(",~whichBolt,")"
GetLightningSourceYHint="[UjAPI] native GetLightningSourceY takes lightning whichBolt returns real"

GetLightningSourceZ=GetLightningSourceZ
GetLightningSourceZ="GetLightningSourceZ(",~whichBolt,")"
GetLightningSourceZHint="[UjAPI] native GetLightningSourceZ takes lightning whichBolt returns real"

GetLightningSourcePositionLoc=GetLightningSourcePositionLoc
GetLightningSourcePositionLoc="GetLightningSourcePositionLoc(",~whichBolt,")"
GetLightningSourcePositionLocHint="[UjAPI] native GetLightningSourcePositionLoc takes lightning whichBolt returns location"

GetLightningTargetX=GetLightningTargetX
GetLightningTargetX="GetLightningTargetX(",~whichBolt,")"
GetLightningTargetXHint="[UjAPI] native GetLightningTargetX takes lightning whichBolt returns real"

GetLightningTargetY=GetLightningTargetY
GetLightningTargetY="GetLightningTargetY(",~whichBolt,")"
GetLightningTargetYHint="[UjAPI] native GetLightningTargetY takes lightning whichBolt returns real"

GetLightningTargetZ=GetLightningTargetZ
GetLightningTargetZ="GetLightningTargetZ(",~whichBolt,")"
GetLightningTargetZHint="[UjAPI] native GetLightningTargetZ takes lightning whichBolt returns real"

GetLightningTargetPositionLoc=GetLightningTargetPositionLoc
GetLightningTargetPositionLoc="GetLightningTargetPositionLoc(",~whichBolt,")"
GetLightningTargetPositionLocHint="[UjAPI] native GetLightningTargetPositionLoc takes lightning whichBolt returns location"

GetLightningScreenX=GetLightningScreenX
GetLightningScreenX="GetLightningScreenX(",~whichBolt,")"
GetLightningScreenXHint="[UjAPI] native GetLightningScreenX takes lightning whichBolt returns real"

GetLightningScreenY=GetLightningScreenY
GetLightningScreenY="GetLightningScreenY(",~whichBolt,")"
GetLightningScreenYHint="[UjAPI] native GetLightningScreenY takes lightning whichBolt returns real"

GetLightningColour=GetLightningColour
GetLightningColour="GetLightningColour(",~whichBolt,")"
GetLightningColourHint="[UjAPI] native GetLightningColour takes lightning whichBolt returns integer"

GetLightningColourA=GetLightningColourA
GetLightningColourA="GetLightningColourA(",~whichBolt,")"
GetLightningColourAHint="[UjAPI] native GetLightningColourA takes lightning whichBolt returns integer"

GetLightningColourR=GetLightningColourR
GetLightningColourR="GetLightningColourR(",~whichBolt,")"
GetLightningColourRHint="[UjAPI] native GetLightningColourR takes lightning whichBolt returns integer"

GetLightningColourG=GetLightningColourG
GetLightningColourG="GetLightningColourG(",~whichBolt,")"
GetLightningColourGHint="[UjAPI] native GetLightningColourG takes lightning whichBolt returns integer"

GetLightningColourB=GetLightningColourB
GetLightningColourB="GetLightningColourB(",~whichBolt,")"
GetLightningColourBHint="[UjAPI] native GetLightningColourB takes lightning whichBolt returns integer"

SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(",~whichBolt,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetLightningColourHint="[UjAPI] native SetLightningColour takes lightning whichBolt, integer red, integer green, integer blue, integer alpha returns boolean"

GetLightningLength=GetLightningLength
GetLightningLength="GetLightningLength(",~whichBolt,")"
GetLightningLengthHint="[UjAPI] native GetLightningLength takes lightning whichBolt returns real"

GetLightningWidth=GetLightningWidth
GetLightningWidth="GetLightningWidth(",~whichBolt,")"
GetLightningWidthHint="[UjAPI] native GetLightningWidth takes lightning whichBolt returns real"

GetLightningNoiseScaling=GetLightningNoiseScaling
GetLightningNoiseScaling="GetLightningNoiseScaling(",~whichBolt,")"
GetLightningNoiseScalingHint="[UjAPI] native GetLightningNoiseScaling takes lightning whichBolt returns real"

GetLightningTextureCoordinates=GetLightningTextureCoordinates
GetLightningTextureCoordinates="GetLightningTextureCoordinates(",~whichBolt,")"
GetLightningTextureCoordinatesHint="[UjAPI] native GetLightningTextureCoordinates takes lightning whichBolt returns real"

GetLightningDuration=GetLightningDuration
GetLightningDuration="GetLightningDuration(",~whichBolt,")"
GetLightningDurationHint="[UjAPI] native GetLightningDuration takes lightning whichBolt returns real"

GetLightningTexture=GetLightningTexture
GetLightningTexture="GetLightningTexture(",~whichBolt,")"
GetLightningTextureHint="[UjAPI] native GetLightningTexture takes lightning whichBolt returns string"

CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(",~file,", ",~sizeX,", ",~sizeY,", ",~posX,", ",~posY,", ",~posZ,", ",~imageType,")"
CreateImageSimpleHint="[UjAPI] native CreateImageSimple takes string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType returns image"

GetImageType=GetImageType
GetImageType="GetImageType(",~whichImage,")"
GetImageTypeHint="[UjAPI] native GetImageType takes image whichImage returns integer"

GetImageX=GetImageX
GetImageX="GetImageX(",~whichImage,")"
GetImageXHint="[UjAPI] native GetImageX takes image whichImage returns real"

GetImageY=GetImageY
GetImageY="GetImageY(",~whichImage,")"
GetImageYHint="[UjAPI] native GetImageY takes image whichImage returns real"

GetImageZ=GetImageZ
GetImageZ="GetImageZ(",~whichImage,")"
GetImageZHint="[UjAPI] native GetImageZ takes image whichImage returns real"

GetImagePositionLoc=GetImagePositionLoc
GetImagePositionLoc="GetImagePositionLoc(",~whichImage,")"
GetImagePositionLocHint="[UjAPI] native GetImagePositionLoc takes image whichImage returns location"

GetImageScreenX=GetImageScreenX
GetImageScreenX="GetImageScreenX(",~whichImage,")"
GetImageScreenXHint="[UjAPI] native GetImageScreenX takes image whichImage returns real"

GetImageScreenY=GetImageScreenY
GetImageScreenY="GetImageScreenY(",~whichImage,")"
GetImageScreenYHint="[UjAPI] native GetImageScreenY takes image whichImage returns real"

GetImageOriginX=GetImageOriginX
GetImageOriginX="GetImageOriginX(",~whichImage,")"
GetImageOriginXHint="[UjAPI] native GetImageOriginX takes image whichImage returns real"

GetImageOriginY=GetImageOriginY
GetImageOriginY="GetImageOriginY(",~whichImage,")"
GetImageOriginYHint="[UjAPI] native GetImageOriginY takes image whichImage returns real"

GetImageSizeX=GetImageSizeX
GetImageSizeX="GetImageSizeX(",~whichImage,")"
GetImageSizeXHint="[UjAPI] native GetImageSizeX takes image whichImage returns real"

GetImageSizeY=GetImageSizeY
GetImageSizeY="GetImageSizeY(",~whichImage,")"
GetImageSizeYHint="[UjAPI] native GetImageSizeY takes image whichImage returns real"

GetImageColour=GetImageColour
GetImageColour="GetImageColour(",~whichImage,")"
GetImageColourHint="[UjAPI] native GetImageColour takes image whichImage returns integer"

IsImageRendered=IsImageRendered
IsImageRendered="IsImageRendered(",~whichImage,")"
IsImageRenderedHint="[UjAPI] native IsImageRendered takes image whichImage returns boolean"

IsImageRenderAlways=IsImageRenderAlways
IsImageRenderAlways="IsImageRenderAlways(",~whichImage,")"
IsImageRenderAlwaysHint="[UjAPI] native IsImageRenderAlways takes image whichImage returns boolean"

IsImageRenderAboveWater=IsImageRenderAboveWater
IsImageRenderAboveWater="IsImageRenderAboveWater(",~whichImage,")"
IsImageRenderAboveWaterHint="[UjAPI] native IsImageRenderAboveWater takes image whichImage returns boolean"

IsImageVisible=IsImageVisible
IsImageVisible="IsImageVisible(",~whichImage,")"
IsImageVisibleHint="[UjAPI] native IsImageVisible takes image whichImage returns boolean"

GetImageConstantHeight=GetImageConstantHeight
GetImageConstantHeight="GetImageConstantHeight(",~whichImage,")"
GetImageConstantHeightHint="[UjAPI] native GetImageConstantHeight takes image whichImage returns real"

GetImageTexture=GetImageTexture
GetImageTexture="GetImageTexture(",~whichImage,")"
GetImageTextureHint="[UjAPI] native GetImageTexture takes image whichImage returns string"

TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(",~whichTimer,")"
TimerIsPausedHint="[UjAPI] native TimerIsPaused takes timer whichTimer returns boolean"

TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(",~whichTimer,")"
TimerIsPeriodicHint="[UjAPI] native TimerIsPeriodic takes timer whichTimer returns boolean"

TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(",~whichTimer,")"
TimerGetCallbackHint="[UjAPI] native TimerGetCallback takes timer whichTimer returns code"

GetAbilityBaseIntegerFieldById=GetAbilityBaseIntegerFieldById
GetAbilityBaseIntegerFieldById="GetAbilityBaseIntegerFieldById(",~abilityTypeId,", ",~whichField,")"
GetAbilityBaseIntegerFieldByIdHint="[UjAPI] native GetAbilityBaseIntegerFieldById takes integer abilityTypeId, abilityintegerfield whichField returns integer"

SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerFieldById takes integer abilityTypeId, abilityintegerfield whichField, integer value returns boolean"

GetAbilityBaseBooleanFieldById=GetAbilityBaseBooleanFieldById
GetAbilityBaseBooleanFieldById="GetAbilityBaseBooleanFieldById(",~abilityTypeId,", ",~whichField,")"
GetAbilityBaseBooleanFieldByIdHint="[UjAPI] native GetAbilityBaseBooleanFieldById takes integer abilityTypeId, abilitybooleanfield whichField returns boolean"

SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanFieldById takes integer abilityTypeId, abilitybooleanfield whichField, boolean value returns boolean"

GetAbilityBaseRealFieldById=GetAbilityBaseRealFieldById
GetAbilityBaseRealFieldById="GetAbilityBaseRealFieldById(",~abilityTypeId,", ",~whichField,")"
GetAbilityBaseRealFieldByIdHint="[UjAPI] native GetAbilityBaseRealFieldById takes integer abilityTypeId, abilityrealfield whichField returns real"

SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI] native SetAbilityBaseRealFieldById takes integer abilityTypeId, abilityrealfield whichField, real value returns boolean"

GetAbilityBaseStringFieldById=GetAbilityBaseStringFieldById
GetAbilityBaseStringFieldById="GetAbilityBaseStringFieldById(",~abilityTypeId,", ",~whichField,")"
GetAbilityBaseStringFieldByIdHint="[UjAPI] native GetAbilityBaseStringFieldById takes integer abilityTypeId, abilitystringfield whichField returns string"

SetAbilityBaseStringFieldById=SetAbilityBaseStringFieldById
SetAbilityBaseStringFieldById="SetAbilityBaseStringFieldById(",~abilityTypeId,", ",~whichField,", ",~value,")"
SetAbilityBaseStringFieldByIdHint="[UjAPI] native SetAbilityBaseStringFieldById takes integer abilityTypeId, abilitystringfield whichField, string value returns boolean"

GetAbilityBaseIntegerLevelFieldById=GetAbilityBaseIntegerLevelFieldById
GetAbilityBaseIntegerLevelFieldById="GetAbilityBaseIntegerLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,")"
GetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI] native GetAbilityBaseIntegerLevelFieldById takes integer abilityTypeId, abilityintegerlevelfield whichField, integer level returns integer"

SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerLevelFieldById takes integer abilityTypeId, abilityintegerlevelfield whichField, integer level, integer value returns boolean"

GetAbilityBaseBooleanLevelFieldById=GetAbilityBaseBooleanLevelFieldById
GetAbilityBaseBooleanLevelFieldById="GetAbilityBaseBooleanLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,")"
GetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI] native GetAbilityBaseBooleanLevelFieldById takes integer abilityTypeId, abilitybooleanlevelfield whichField, integer level returns boolean"

SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanLevelFieldById takes integer abilityTypeId, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"

GetAbilityBaseRealLevelFieldById=GetAbilityBaseRealLevelFieldById
GetAbilityBaseRealLevelFieldById="GetAbilityBaseRealLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,")"
GetAbilityBaseRealLevelFieldByIdHint="[UjAPI] native GetAbilityBaseRealLevelFieldById takes integer abilityTypeId, abilityreallevelfield whichField, integer level returns real"

SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI] native SetAbilityBaseRealLevelFieldById takes integer abilityTypeId, abilityreallevelfield whichField, integer level, real value returns boolean"

GetAbilityBaseStringLevelFieldById=GetAbilityBaseStringLevelFieldById
GetAbilityBaseStringLevelFieldById="GetAbilityBaseStringLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,")"
GetAbilityBaseStringLevelFieldByIdHint="[UjAPI] native GetAbilityBaseStringLevelFieldById takes integer abilityTypeId, abilitystringlevelfield whichField, integer level returns string"

SetAbilityBaseStringLevelFieldById=SetAbilityBaseStringLevelFieldById
SetAbilityBaseStringLevelFieldById="SetAbilityBaseStringLevelFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseStringLevelFieldByIdHint="[UjAPI] native SetAbilityBaseStringLevelFieldById takes integer abilityTypeId, abilitystringlevelfield whichField, integer level, string value returns boolean"

GetAbilityBaseIntegerLevelArrayFieldById=GetAbilityBaseIntegerLevelArrayFieldById
GetAbilityBaseIntegerLevelArrayFieldById="GetAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native GetAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer index returns integer"

SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"

AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseIntegerLevelArrayFieldById takes integer abilityTypeId, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

GetAbilityBaseBooleanLevelArrayFieldById=GetAbilityBaseBooleanLevelArrayFieldById
GetAbilityBaseBooleanLevelArrayFieldById="GetAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native GetAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, integer index returns boolean"

SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"

AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseBooleanLevelArrayFieldById takes integer abilityTypeId, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

GetAbilityBaseRealLevelArrayFieldById=GetAbilityBaseRealLevelArrayFieldById
GetAbilityBaseRealLevelArrayFieldById="GetAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native GetAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, integer index returns real"

SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"

AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseRealLevelArrayFieldById takes integer abilityTypeId, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

GetAbilityBaseStringLevelArrayFieldById=GetAbilityBaseStringLevelArrayFieldById
GetAbilityBaseStringLevelArrayFieldById="GetAbilityBaseStringLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI] native GetAbilityBaseStringLevelArrayFieldById takes integer abilityTypeId, abilitystringlevelarrayfield whichField, integer level, integer index returns string"

SetAbilityBaseStringLevelArrayFieldById=SetAbilityBaseStringLevelArrayFieldById
SetAbilityBaseStringLevelArrayFieldById="SetAbilityBaseStringLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI] native SetAbilityBaseStringLevelArrayFieldById takes integer abilityTypeId, abilitystringlevelarrayfield whichField, integer level, integer index, string value returns boolean"

AddAbilityBaseStringLevelArrayFieldById=AddAbilityBaseStringLevelArrayFieldById
AddAbilityBaseStringLevelArrayFieldById="AddAbilityBaseStringLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI] native AddAbilityBaseStringLevelArrayFieldById takes integer abilityTypeId, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"

RemoveAbilityBaseStringLevelArrayFieldById=RemoveAbilityBaseStringLevelArrayFieldById
RemoveAbilityBaseStringLevelArrayFieldById="RemoveAbilityBaseStringLevelArrayFieldById(",~abilityTypeId,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI] native RemoveAbilityBaseStringLevelArrayFieldById takes integer abilityTypeId, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"

GetAbilityIntegerField=GetAbilityIntegerField
GetAbilityIntegerField="GetAbilityIntegerField(",~whichAbility,", ",~whichField,")"
GetAbilityIntegerFieldHint="[UjAPI] native GetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField returns integer"

SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityIntegerFieldHint="[UjAPI] native SetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField, integer value returns boolean"

GetAbilityBooleanField=GetAbilityBooleanField
GetAbilityBooleanField="GetAbilityBooleanField(",~whichAbility,", ",~whichField,")"
GetAbilityBooleanFieldHint="[UjAPI] native GetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField returns boolean"

SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityBooleanFieldHint="[UjAPI] native SetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField, boolean value returns boolean"

GetAbilityRealField=GetAbilityRealField
GetAbilityRealField="GetAbilityRealField(",~whichAbility,", ",~whichField,")"
GetAbilityRealFieldHint="[UjAPI] native GetAbilityRealField takes ability whichAbility, abilityrealfield whichField returns real"

SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityRealFieldHint="[UjAPI] native SetAbilityRealField takes ability whichAbility, abilityrealfield whichField, real value returns boolean"

GetAbilityStringField=GetAbilityStringField
GetAbilityStringField="GetAbilityStringField(",~whichAbility,", ",~whichField,")"
GetAbilityStringFieldHint="[UjAPI] native GetAbilityStringField takes ability whichAbility, abilitystringfield whichField returns string"

SetAbilityStringField=SetAbilityStringField
SetAbilityStringField="SetAbilityStringField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityStringFieldHint="[UjAPI] native SetAbilityStringField takes ability whichAbility, abilitystringfield whichField, string value returns boolean"

GetAbilityIntegerLevelField=GetAbilityIntegerLevelField
GetAbilityIntegerLevelField="GetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityIntegerLevelFieldHint="[UjAPI] native GetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level returns integer"

SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI] native SetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value returns boolean"

GetAbilityBooleanLevelField=GetAbilityBooleanLevelField
GetAbilityBooleanLevelField="GetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityBooleanLevelFieldHint="[UjAPI] native GetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level returns boolean"

SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI] native SetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"

GetAbilityRealLevelField=GetAbilityRealLevelField
GetAbilityRealLevelField="GetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityRealLevelFieldHint="[UjAPI] native GetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level returns real"

SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityRealLevelFieldHint="[UjAPI] native SetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level, real value returns boolean"

GetAbilityStringLevelField=GetAbilityStringLevelField
GetAbilityStringLevelField="GetAbilityStringLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityStringLevelFieldHint="[UjAPI] native GetAbilityStringLevelField takes ability whichAbility, abilitystringlevelfield whichField, integer level returns string"

SetAbilityStringLevelField=SetAbilityStringLevelField
SetAbilityStringLevelField="SetAbilityStringLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityStringLevelFieldHint="[UjAPI] native SetAbilityStringLevelField takes ability whichAbility, abilitystringlevelfield whichField, integer level, string value returns boolean"

GetAbilityIntegerLevelArrayField=GetAbilityIntegerLevelArrayField
GetAbilityIntegerLevelArrayField="GetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityIntegerLevelArrayFieldHint="[UjAPI] native GetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index returns integer"

SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI] native SetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"

AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI] native AddAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI] native RemoveAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"

GetAbilityBooleanLevelArrayField=GetAbilityBooleanLevelArrayField
GetAbilityBooleanLevelArrayField="GetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBooleanLevelArrayFieldHint="[UjAPI] native GetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index returns boolean"

SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI] native SetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"

AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI] native AddAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI] native RemoveAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"

GetAbilityRealLevelArrayField=GetAbilityRealLevelArrayField
GetAbilityRealLevelArrayField="GetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityRealLevelArrayFieldHint="[UjAPI] native GetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index returns real"

SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI] native SetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"

AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI] native AddAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI] native RemoveAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"

GetAbilityStringLevelArrayField=GetAbilityStringLevelArrayField
GetAbilityStringLevelArrayField="GetAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityStringLevelArrayFieldHint="[UjAPI] native GetAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index returns string"

SetAbilityStringLevelArrayField=SetAbilityStringLevelArrayField
SetAbilityStringLevelArrayField="SetAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityStringLevelArrayFieldHint="[UjAPI] native SetAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index, string value returns boolean"

AddAbilityStringLevelArrayField=AddAbilityStringLevelArrayField
AddAbilityStringLevelArrayField="AddAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityStringLevelArrayFieldHint="[UjAPI] native AddAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"

RemoveAbilityStringLevelArrayField=RemoveAbilityStringLevelArrayField
RemoveAbilityStringLevelArrayField="RemoveAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityStringLevelArrayFieldHint="[UjAPI] native RemoveAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"

ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(",~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI] native ResetAbilityFieldData takes ability whichAbility returns boolean"

IsAbilityBaseTargetAllowedUnitUnit=IsAbilityBaseTargetAllowed (Unit, Unit)
IsAbilityBaseTargetAllowedUnitUnit="IsAbilityBaseTargetAllowedUnitUnit(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedUnitUnitHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, unit source, unit target returns boolean"

IsAbilityBaseTargetAllowedItemUnit=IsAbilityBaseTargetAllowed (Item, Unit)
IsAbilityBaseTargetAllowedItemUnit="IsAbilityBaseTargetAllowedItemUnit(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedItemUnitHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, item source, unit target returns boolean"

IsAbilityBaseTargetAllowedDestructableUnit=IsAbilityBaseTargetAllowed (Destructable, Unit)
IsAbilityBaseTargetAllowedDestructableUnit="IsAbilityBaseTargetAllowedDestructableUnit(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedDestructableUnitHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, destructable source, unit target returns boolean"

IsAbilityBaseTargetAllowedUnitItem=IsAbilityBaseTargetAllowed (Unit, Item)
IsAbilityBaseTargetAllowedUnitItem="IsAbilityBaseTargetAllowedUnitItem(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedUnitItemHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, unit source, item target returns boolean"

IsAbilityBaseTargetAllowedItemItem=IsAbilityBaseTargetAllowed (Item, Item)
IsAbilityBaseTargetAllowedItemItem="IsAbilityBaseTargetAllowedItemItem(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedItemItemHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, item source, item target returns boolean"

IsAbilityBaseTargetAllowedDestructableItem=IsAbilityBaseTargetAllowed (Destructable, Item)
IsAbilityBaseTargetAllowedDestructableItem="IsAbilityBaseTargetAllowedDestructableItem(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedDestructableItemHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, destructable source, item target returns boolean"

IsAbilityBaseTargetAllowedUnitDestructable=IsAbilityBaseTargetAllowed (Unit, Destructable)
IsAbilityBaseTargetAllowedUnitDestructable="IsAbilityBaseTargetAllowedUnitDestructable(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedUnitDestructableHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, unit source, destructable target returns boolean"

IsAbilityBaseTargetAllowedItemDestructable=IsAbilityBaseTargetAllowed (Item, Destructable)
IsAbilityBaseTargetAllowedItemDestructable="IsAbilityBaseTargetAllowedItemDestructable(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedItemDestructableHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, item source, destructable target returns boolean"

IsAbilityBaseTargetAllowedDestructableDestructable=IsAbilityBaseTargetAllowed (Destructable, Destructable)
IsAbilityBaseTargetAllowedDestructableDestructable="IsAbilityBaseTargetAllowedDestructableDestructable(",~abilityTypeId,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedDestructableDestructableHint="[UjAPI] native IsAbilityBaseTargetAllowed takes integer abilityTypeId, destructable source, destructable target returns boolean"

CreateAbility=CreateAbility
CreateAbility="CreateAbility(",~abilityTypeId,")"
CreateAbilityHint="[UjAPI] native CreateAbility takes integer abilityTypeId returns ability"

GetTriggerAbility=GetTriggerAbility
GetTriggerAbility="GetTriggerAbility(",")"
GetTriggerAbilityHint="[UjAPI] native GetTriggerAbility takes nothing returns ability"

GetTriggerAbilityPreviousLevel=GetTriggerAbilityPreviousLevel
GetTriggerAbilityPreviousLevel="GetTriggerAbilityPreviousLevel(",")"
GetTriggerAbilityPreviousLevelHint="[UjAPI] native GetTriggerAbilityPreviousLevel takes nothing returns integer"

IsAbilityType=IsAbilityType
IsAbilityType="IsAbilityType(",~whichAbility,", ",~whichAbilityType,")"
IsAbilityTypeHint="[UjAPI] native IsAbilityType takes ability whichAbility, abilitytype whichAbilityType returns boolean"

GetAbilityOwner=GetAbilityOwner
GetAbilityOwner="GetAbilityOwner(",~whichAbility,")"
GetAbilityOwnerHint="[UjAPI] native GetAbilityOwner takes ability whichAbility returns unit"

GetAbilityOwningAbility=GetAbilityOwningAbility
GetAbilityOwningAbility="GetAbilityOwningAbility(",~whichAbility,")"
GetAbilityOwningAbilityHint="[UjAPI] native GetAbilityOwningAbility takes ability whichAbility returns ability"

GetAbilityOwningItem=GetAbilityOwningItem
GetAbilityOwningItem="GetAbilityOwningItem(",~whichAbility,")"
GetAbilityOwningItemHint="[UjAPI] native GetAbilityOwningItem takes ability whichAbility returns item"

GetAbilityOrderId=GetAbilityOrderId
GetAbilityOrderId="GetAbilityOrderId(",~whichAbility,")"
GetAbilityOrderIdHint="[UjAPI] native GetAbilityOrderId takes ability whichAbility returns integer"

GetAbilityLevel=GetAbilityLevel
GetAbilityLevel="GetAbilityLevel(",~whichAbility,")"
GetAbilityLevelHint="[UjAPI] native GetAbilityLevel takes ability whichAbility returns integer"

SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(",~whichAbility,", ",~level,")"
SetAbilityLevelHint="[UjAPI] native SetAbilityLevel takes ability whichAbility, integer level returns integer"

GetAbilityBaseTypeId=GetAbilityBaseTypeId
GetAbilityBaseTypeId="GetAbilityBaseTypeId(",~whichAbility,")"
GetAbilityBaseTypeIdHint="[UjAPI] native GetAbilityBaseTypeId takes ability whichAbility returns integer"

GetAbilityTypeId=GetAbilityTypeId
GetAbilityTypeId="GetAbilityTypeId(",~whichAbility,")"
GetAbilityTypeIdHint="[UjAPI] native GetAbilityTypeId takes ability whichAbility returns integer"

IsAbilityTargetAllowedUnit=IsAbilityTargetAllowed (Unit)
IsAbilityTargetAllowedUnit="IsAbilityTargetAllowedUnit(",~whichAbility,", ",~whichWidget,")"
IsAbilityTargetAllowedUnitHint="[UjAPI] native IsAbilityTargetAllowed takes ability whichAbility, unit whichWidget returns boolean"

IsAbilityTargetAllowedItem=IsAbilityTargetAllowed (Item)
IsAbilityTargetAllowedItem="IsAbilityTargetAllowedItem(",~whichAbility,", ",~whichWidget,")"
IsAbilityTargetAllowedItemHint="[UjAPI] native IsAbilityTargetAllowed takes ability whichAbility, item whichWidget returns boolean"

IsAbilityTargetAllowedDestructable=IsAbilityTargetAllowed (Destructable)
IsAbilityTargetAllowedDestructable="IsAbilityTargetAllowedDestructable(",~whichAbility,", ",~whichWidget,")"
IsAbilityTargetAllowedDestructableHint="[UjAPI] native IsAbilityTargetAllowed takes ability whichAbility, destructable whichWidget returns boolean"

IsAbilityOnCooldown=IsAbilityOnCooldown
IsAbilityOnCooldown="IsAbilityOnCooldown(",~whichAbility,")"
IsAbilityOnCooldownHint="[UjAPI] native IsAbilityOnCooldown takes ability whichAbility returns boolean"

IsAbilityEnabled=IsAbilityEnabled
IsAbilityEnabled="IsAbilityEnabled(",~whichAbility,")"
IsAbilityEnabledHint="[UjAPI] native IsAbilityEnabled takes ability whichAbility returns boolean"

IsAbilityVisible=IsAbilityVisible
IsAbilityVisible="IsAbilityVisible(",~whichAbility,")"
IsAbilityVisibleHint="[UjAPI] native IsAbilityVisible takes ability whichAbility returns boolean"

IsAbilityOrderEnabled=IsAbilityOrderEnabled
IsAbilityOrderEnabled="IsAbilityOrderEnabled(",~whichAbility,")"
IsAbilityOrderEnabledHint="[UjAPI] native IsAbilityOrderEnabled takes ability whichAbility returns boolean"

IsAbilityPassive=IsAbilityPassive
IsAbilityPassive="IsAbilityPassive(",~whichAbility,")"
IsAbilityPassiveHint="[UjAPI] native IsAbilityPassive takes ability whichAbility returns boolean"

IsAbilityUsable=IsAbilityUsable
IsAbilityUsable="IsAbilityUsable(",~whichAbility,")"
IsAbilityUsableHint="[UjAPI] native IsAbilityUsable takes ability whichAbility returns boolean"

IsAbilityAutocastEnabled=IsAbilityAutocastEnabled
IsAbilityAutocastEnabled="IsAbilityAutocastEnabled(",~whichAbility,")"
IsAbilityAutocastEnabledHint="[UjAPI] native IsAbilityAutocastEnabled takes ability whichAbility returns boolean"

GetAbilityCastTime=GetAbilityCastTime
GetAbilityCastTime="GetAbilityCastTime(",~whichAbility,")"
GetAbilityCastTimeHint="[UjAPI] native GetAbilityCastTime takes ability whichAbility returns real"

GetAbilityCastPoint=GetAbilityCastPoint
GetAbilityCastPoint="GetAbilityCastPoint(",~whichAbility,")"
GetAbilityCastPointHint="[UjAPI] native GetAbilityCastPoint takes ability whichAbility returns real"

GetAbilityBackswing=GetAbilityBackswing
GetAbilityBackswing="GetAbilityBackswing(",~whichAbility,")"
GetAbilityBackswingHint="[UjAPI] native GetAbilityBackswing takes ability whichAbility returns real"

GetAbilityCooldown=GetAbilityCooldown
GetAbilityCooldown="GetAbilityCooldown(",~whichAbility,")"
GetAbilityCooldownHint="[UjAPI] native GetAbilityCooldown takes ability whichAbility returns real"

GetAbilityRemainingCooldown=GetAbilityRemainingCooldown
GetAbilityRemainingCooldown="GetAbilityRemainingCooldown(",~whichAbility,")"
GetAbilityRemainingCooldownHint="[UjAPI] native GetAbilityRemainingCooldown takes ability whichAbility returns real"

CastAbility=CastAbility
CastAbility="CastAbility(",~whichAbility,")"
CastAbilityHint="[UjAPI] native CastAbility takes ability whichAbility returns boolean"

CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(",~whichAbility,", ",~targX,", ",~targY,")"
CastAbilityGroundHint="[UjAPI] native CastAbilityGround takes ability whichAbility, real targX, real targY returns boolean"

CastAbilityTargetUnit=CastAbilityTarget (Unit)
CastAbilityTargetUnit="CastAbilityTargetUnit(",~whichAbility,", ",~target,")"
CastAbilityTargetUnitHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, unit target returns boolean"

CastAbilityTargetItem=CastAbilityTarget (Item)
CastAbilityTargetItem="CastAbilityTargetItem(",~whichAbility,", ",~target,")"
CastAbilityTargetItemHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, item target returns boolean"

CastAbilityTargetDestructable=CastAbilityTarget (Destructable)
CastAbilityTargetDestructable="CastAbilityTargetDestructable(",~whichAbility,", ",~target,")"
CastAbilityTargetDestructableHint="[UjAPI] native CastAbilityTarget takes ability whichAbility, destructable target returns boolean"

GetFilterAbility=GetFilterAbility
GetFilterAbility="GetFilterAbility(",")"
GetFilterAbilityHint="[UjAPI] native GetFilterAbility takes nothing returns ability"

GetEnumAbility=GetEnumAbility
GetEnumAbility="GetEnumAbility(",")"
GetEnumAbilityHint="[UjAPI] native GetEnumAbility takes nothing returns ability"

EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI] native EnumUnitAbilities takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"

GetBuffBaseIntegerFieldById=GetBuffBaseIntegerFieldById
GetBuffBaseIntegerFieldById="GetBuffBaseIntegerFieldById(",~buffTypeId,", ",~whichField,")"
GetBuffBaseIntegerFieldByIdHint="[UjAPI] native GetBuffBaseIntegerFieldById takes integer buffTypeId, abilityintegerfield whichField returns integer"

SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI] native SetBuffBaseIntegerFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

GetBuffBaseBooleanFieldById=GetBuffBaseBooleanFieldById
GetBuffBaseBooleanFieldById="GetBuffBaseBooleanFieldById(",~buffTypeId,", ",~whichField,")"
GetBuffBaseBooleanFieldByIdHint="[UjAPI] native GetBuffBaseBooleanFieldById takes integer buffTypeId, abilitybooleanfield whichField returns boolean"

SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI] native SetBuffBaseBooleanFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

GetBuffBaseRealFieldById=GetBuffBaseRealFieldById
GetBuffBaseRealFieldById="GetBuffBaseRealFieldById(",~buffTypeId,", ",~whichField,")"
GetBuffBaseRealFieldByIdHint="[UjAPI] native GetBuffBaseRealFieldById takes integer buffTypeId, abilityrealfield whichField returns real"

SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI] native SetBuffBaseRealFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

GetBuffBaseStringFieldById=GetBuffBaseStringFieldById
GetBuffBaseStringFieldById="GetBuffBaseStringFieldById(",~buffTypeId,", ",~whichField,")"
GetBuffBaseStringFieldByIdHint="[UjAPI] native GetBuffBaseStringFieldById takes integer buffTypeId, abilitystringfield whichField returns string"

SetBuffBaseStringFieldById=SetBuffBaseStringFieldById
SetBuffBaseStringFieldById="SetBuffBaseStringFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
SetBuffBaseStringFieldByIdHint="[UjAPI] native SetBuffBaseStringFieldById takes integer buffTypeId, abilitystringfield whichField, string value returns boolean"

GetBuffBaseIntegerArrayFieldById=GetBuffBaseIntegerArrayFieldById
GetBuffBaseIntegerArrayFieldById="GetBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,")"
GetBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native GetBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer index returns integer"

SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native SetBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer index, integer value returns boolean"

AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native AddBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseIntegerArrayFieldById takes integer buffTypeId, abilityintegerfield whichField, integer value returns boolean"

GetBuffBaseBooleanArrayFieldById=GetBuffBaseBooleanArrayFieldById
GetBuffBaseBooleanArrayFieldById="GetBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,")"
GetBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native GetBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, integer index returns boolean"

SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native SetBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, integer index, boolean value returns boolean"

AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native AddBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseBooleanArrayFieldById takes integer buffTypeId, abilitybooleanfield whichField, boolean value returns boolean"

GetBuffBaseRealArrayFieldById=GetBuffBaseRealArrayFieldById
GetBuffBaseRealArrayFieldById="GetBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,")"
GetBuffBaseRealArrayFieldByIdHint="[UjAPI] native GetBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, integer index returns real"

SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI] native SetBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, integer index, real value returns boolean"

AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI] native AddBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseRealArrayFieldById takes integer buffTypeId, abilityrealfield whichField, real value returns boolean"

GetBuffBaseStringArrayFieldById=GetBuffBaseStringArrayFieldById
GetBuffBaseStringArrayFieldById="GetBuffBaseStringArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,")"
GetBuffBaseStringArrayFieldByIdHint="[UjAPI] native GetBuffBaseStringArrayFieldById takes integer buffTypeId, abilitystringfield whichField, integer index returns string"

SetBuffBaseStringArrayFieldById=SetBuffBaseStringArrayFieldById
SetBuffBaseStringArrayFieldById="SetBuffBaseStringArrayFieldById(",~buffTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseStringArrayFieldByIdHint="[UjAPI] native SetBuffBaseStringArrayFieldById takes integer buffTypeId, abilitystringfield whichField, integer index, string value returns boolean"

AddBuffBaseStringArrayFieldById=AddBuffBaseStringArrayFieldById
AddBuffBaseStringArrayFieldById="AddBuffBaseStringArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
AddBuffBaseStringArrayFieldByIdHint="[UjAPI] native AddBuffBaseStringArrayFieldById takes integer buffTypeId, abilitystringfield whichField, string value returns boolean"

RemoveBuffBaseStringArrayFieldById=RemoveBuffBaseStringArrayFieldById
RemoveBuffBaseStringArrayFieldById="RemoveBuffBaseStringArrayFieldById(",~buffTypeId,", ",~whichField,", ",~value,")"
RemoveBuffBaseStringArrayFieldByIdHint="[UjAPI] native RemoveBuffBaseStringArrayFieldById takes integer buffTypeId, abilitystringfield whichField, string value returns boolean"

GetBuffIntegerField=GetBuffIntegerField
GetBuffIntegerField="GetBuffIntegerField(",~whichBuff,", ",~whichField,")"
GetBuffIntegerFieldHint="[UjAPI] native GetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField returns integer"

SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffIntegerFieldHint="[UjAPI] native SetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

GetBuffBooleanField=GetBuffBooleanField
GetBuffBooleanField="GetBuffBooleanField(",~whichBuff,", ",~whichField,")"
GetBuffBooleanFieldHint="[UjAPI] native GetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField returns boolean"

SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffBooleanFieldHint="[UjAPI] native SetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

GetBuffRealField=GetBuffRealField
GetBuffRealField="GetBuffRealField(",~whichBuff,", ",~whichField,")"
GetBuffRealFieldHint="[UjAPI] native GetBuffRealField takes buff whichBuff, abilityrealfield whichField returns real"

SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffRealFieldHint="[UjAPI] native SetBuffRealField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

GetBuffStringField=GetBuffStringField
GetBuffStringField="GetBuffStringField(",~whichBuff,", ",~whichField,")"
GetBuffStringFieldHint="[UjAPI] native GetBuffStringField takes buff whichBuff, abilitystringfield whichField returns string"

SetBuffStringField=SetBuffStringField
SetBuffStringField="SetBuffStringField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffStringFieldHint="[UjAPI] native SetBuffStringField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"

GetBuffIntegerArrayField=GetBuffIntegerArrayField
GetBuffIntegerArrayField="GetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffIntegerArrayFieldHint="[UjAPI] native GetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index returns integer"

SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI] native SetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index, integer value returns boolean"

AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI] native AddBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI] native RemoveBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"

GetBuffBooleanArrayField=GetBuffBooleanArrayField
GetBuffBooleanArrayField="GetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffBooleanArrayFieldHint="[UjAPI] native GetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index returns boolean"

SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI] native SetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index, boolean value returns boolean"

AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI] native AddBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI] native RemoveBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"

GetBuffRealArrayField=GetBuffRealArrayField
GetBuffRealArrayField="GetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffRealArrayFieldHint="[UjAPI] native GetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index returns real"

SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffRealArrayFieldHint="[UjAPI] native SetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index, real value returns boolean"

AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffRealArrayFieldHint="[UjAPI] native AddBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI] native RemoveBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"

GetBuffStringArrayField=GetBuffStringArrayField
GetBuffStringArrayField="GetBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffStringArrayFieldHint="[UjAPI] native GetBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, integer index returns string"

SetBuffStringArrayField=SetBuffStringArrayField
SetBuffStringArrayField="SetBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffStringArrayFieldHint="[UjAPI] native SetBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, integer index, string value returns boolean"

AddBuffStringArrayField=AddBuffStringArrayField
AddBuffStringArrayField="AddBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffStringArrayFieldHint="[UjAPI] native AddBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"

RemoveBuffStringArrayField=RemoveBuffStringArrayField
RemoveBuffStringArrayField="RemoveBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffStringArrayFieldHint="[UjAPI] native RemoveBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"

ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(",~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI] native ResetBuffFieldData takes buff whichBuff returns boolean"

CreateBuff=CreateBuff
CreateBuff="CreateBuff(",~buffTypeId,")"
CreateBuffHint="[UjAPI] native CreateBuff takes integer buffTypeId returns buff"

IsBuffType=IsBuffType
IsBuffType="IsBuffType(",~whichBuff,", ",~whichAbilityType,")"
IsBuffTypeHint="[UjAPI] native IsBuffType takes buff whichBuff, abilitytype whichAbilityType returns boolean"

GetBuffTypeId=GetBuffTypeId
GetBuffTypeId="GetBuffTypeId(",~whichBuff,")"
GetBuffTypeIdHint="[UjAPI] native GetBuffTypeId takes buff whichBuff returns integer"

GetBuffBaseTypeId=GetBuffBaseTypeId
GetBuffBaseTypeId="GetBuffBaseTypeId(",~whichBuff,")"
GetBuffBaseTypeIdHint="[UjAPI] native GetBuffBaseTypeId takes buff whichBuff returns integer"

GetBuffOwner=GetBuffOwner
GetBuffOwner="GetBuffOwner(",~whichbuff,")"
GetBuffOwnerHint="[UjAPI] native GetBuffOwner takes buff whichbuff returns unit"

GetBuffOwningAbility=GetBuffOwningAbility
GetBuffOwningAbility="GetBuffOwningAbility(",~whichbuff,")"
GetBuffOwningAbilityHint="[UjAPI] native GetBuffOwningAbility takes buff whichbuff returns ability"

IsBuffDispellable=IsBuffDispellable
IsBuffDispellable="IsBuffDispellable(",~whichBuff,")"
IsBuffDispellableHint="[UjAPI] native IsBuffDispellable takes buff whichBuff returns boolean"

IsBuffDrawEnabled=IsBuffDrawEnabled
IsBuffDrawEnabled="IsBuffDrawEnabled(",~whichBuff,")"
IsBuffDrawEnabledHint="[UjAPI] native IsBuffDrawEnabled takes buff whichBuff returns boolean"

GetBuffLevel=GetBuffLevel
GetBuffLevel="GetBuffLevel(",~whichBuff,")"
GetBuffLevelHint="[UjAPI] native GetBuffLevel takes buff whichBuff returns integer"

GetBuffRemainingDuration=GetBuffRemainingDuration
GetBuffRemainingDuration="GetBuffRemainingDuration(",~whichBuff,")"
GetBuffRemainingDurationHint="[UjAPI] native GetBuffRemainingDuration takes buff whichBuff returns real"

IsBuffPaused=IsBuffPaused
IsBuffPaused="IsBuffPaused(",~whichBuff,")"
IsBuffPausedHint="[UjAPI] native IsBuffPaused takes buff whichBuff returns boolean"

GetFilterBuff=GetFilterBuff
GetFilterBuff="GetFilterBuff(",")"
GetFilterBuffHint="[UjAPI] native GetFilterBuff takes nothing returns buff"

GetEnumBuff=GetEnumBuff
GetEnumBuff="GetEnumBuff(",")"
GetEnumBuffHint="[UjAPI] native GetEnumBuff takes nothing returns buff"

EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitBuffsHint="[UjAPI] native EnumUnitBuffs takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"

GetTriggerBuff=GetTriggerBuff
GetTriggerBuff="GetTriggerBuff(",")"
GetTriggerBuffHint="[UjAPI] native GetTriggerBuff takes nothing returns buff"

GetTriggerBuffSourceAbility=GetTriggerBuffSourceAbility
GetTriggerBuffSourceAbility="GetTriggerBuffSourceAbility(",")"
GetTriggerBuffSourceAbilityHint="[UjAPI] native GetTriggerBuffSourceAbility takes nothing returns ability"

GetTriggerBuffSourceUnit=GetTriggerBuffSourceUnit
GetTriggerBuffSourceUnit="GetTriggerBuffSourceUnit(",")"
GetTriggerBuffSourceUnitHint="[UjAPI] native GetTriggerBuffSourceUnit takes nothing returns unit"

GetTriggerBuffTarget=GetTriggerBuffTarget
GetTriggerBuffTarget="GetTriggerBuffTarget(",")"
GetTriggerBuffTargetHint="[UjAPI] native GetTriggerBuffTarget takes nothing returns unit"

GetWar3ImageSprite=GetWar3ImageSprite
GetWar3ImageSprite="GetWar3ImageSprite(",~whichWar3Image,")"
GetWar3ImageSpriteHint="[UjAPI] native GetWar3ImageSprite takes war3image whichWar3Image returns sprite"

IsWar3ImageVisible=IsWar3ImageVisible
IsWar3ImageVisible="IsWar3ImageVisible(",~whichWar3Image,")"
IsWar3ImageVisibleHint="[UjAPI] native IsWar3ImageVisible takes war3image whichWar3Image returns boolean"

IsWar3ImageInvulnerable=IsWar3ImageInvulnerable
IsWar3ImageInvulnerable="IsWar3ImageInvulnerable(",~whichWar3Image,")"
IsWar3ImageInvulnerableHint="[UjAPI] native IsWar3ImageInvulnerable takes war3image whichWar3Image returns boolean"

GetWar3ImageX=GetWar3ImageX
GetWar3ImageX="GetWar3ImageX(",~whichWar3Image,")"
GetWar3ImageXHint="[UjAPI] native GetWar3ImageX takes war3image whichWar3Image returns real"

GetWar3ImageY=GetWar3ImageY
GetWar3ImageY="GetWar3ImageY(",~whichWar3Image,")"
GetWar3ImageYHint="[UjAPI] native GetWar3ImageY takes war3image whichWar3Image returns real"

GetWar3ImageZ=GetWar3ImageZ
GetWar3ImageZ="GetWar3ImageZ(",~whichWar3Image,")"
GetWar3ImageZHint="[UjAPI] native GetWar3ImageZ takes war3image whichWar3Image returns real"

GetWar3ImagePositionLoc=GetWar3ImagePositionLoc
GetWar3ImagePositionLoc="GetWar3ImagePositionLoc(",~whichWar3Image,")"
GetWar3ImagePositionLocHint="[UjAPI] native GetWar3ImagePositionLoc takes war3image whichWar3Image returns location"

GetWar3ImageHeight=GetWar3ImageHeight
GetWar3ImageHeight="GetWar3ImageHeight(",~whichWar3Image,")"
GetWar3ImageHeightHint="[UjAPI] native GetWar3ImageHeight takes war3image whichWar3Image returns real"

GetWar3ImageScreenX=GetWar3ImageScreenX
GetWar3ImageScreenX="GetWar3ImageScreenX(",~whichWar3Image,")"
GetWar3ImageScreenXHint="[UjAPI] native GetWar3ImageScreenX takes war3image whichWar3Image returns real"

GetWar3ImageScreenY=GetWar3ImageScreenY
GetWar3ImageScreenY="GetWar3ImageScreenY(",~whichWar3Image,")"
GetWar3ImageScreenYHint="[UjAPI] native GetWar3ImageScreenY takes war3image whichWar3Image returns real"

GetWar3ImagePlayerColour=GetWar3ImagePlayerColour
GetWar3ImagePlayerColour="GetWar3ImagePlayerColour(",~whichWar3Image,")"
GetWar3ImagePlayerColourHint="[UjAPI] native GetWar3ImagePlayerColour takes war3image whichWar3Image returns playercolor"

GetWar3ImageVertexColour=GetWar3ImageVertexColour
GetWar3ImageVertexColour="GetWar3ImageVertexColour(",~whichWar3Image,")"
GetWar3ImageVertexColourHint="[UjAPI] native GetWar3ImageVertexColour takes war3image whichWar3Image returns integer"

GetWar3ImageTimeScale=GetWar3ImageTimeScale
GetWar3ImageTimeScale="GetWar3ImageTimeScale(",~whichWar3Image,")"
GetWar3ImageTimeScaleHint="[UjAPI] native GetWar3ImageTimeScale takes war3image whichWar3Image returns real"

GetWar3ImageScale=GetWar3ImageScale
GetWar3ImageScale="GetWar3ImageScale(",~whichWar3Image,")"
GetWar3ImageScaleHint="[UjAPI] native GetWar3ImageScale takes war3image whichWar3Image returns real"

GetWar3ImageFacing=GetWar3ImageFacing
GetWar3ImageFacing="GetWar3ImageFacing(",~whichWar3Image,")"
GetWar3ImageFacingHint="[UjAPI] native GetWar3ImageFacing takes war3image whichWar3Image returns real"

GetWar3ImageMatrixScaleX=GetWar3ImageMatrixScaleX
GetWar3ImageMatrixScaleX="GetWar3ImageMatrixScaleX(",~whichWar3Image,")"
GetWar3ImageMatrixScaleXHint="[UjAPI] native GetWar3ImageMatrixScaleX takes war3image whichWar3Image returns real"

GetWar3ImageMatrixScaleY=GetWar3ImageMatrixScaleY
GetWar3ImageMatrixScaleY="GetWar3ImageMatrixScaleY(",~whichWar3Image,")"
GetWar3ImageMatrixScaleYHint="[UjAPI] native GetWar3ImageMatrixScaleY takes war3image whichWar3Image returns real"

GetWar3ImageMatrixScaleZ=GetWar3ImageMatrixScaleZ
GetWar3ImageMatrixScaleZ="GetWar3ImageMatrixScaleZ(",~whichWar3Image,")"
GetWar3ImageMatrixScaleZHint="[UjAPI] native GetWar3ImageMatrixScaleZ takes war3image whichWar3Image returns real"

GetWar3ImageYaw=GetWar3ImageYaw
GetWar3ImageYaw="GetWar3ImageYaw(",~whichWar3Image,")"
GetWar3ImageYawHint="[UjAPI] native GetWar3ImageYaw takes war3image whichWar3Image returns real"

GetWar3ImagePitch=GetWar3ImagePitch
GetWar3ImagePitch="GetWar3ImagePitch(",~whichWar3Image,")"
GetWar3ImagePitchHint="[UjAPI] native GetWar3ImagePitch takes war3image whichWar3Image returns real"

GetWar3ImageRoll=GetWar3ImageRoll
GetWar3ImageRoll="GetWar3ImageRoll(",~whichWar3Image,")"
GetWar3ImageRollHint="[UjAPI] native GetWar3ImageRoll takes war3image whichWar3Image returns real"

GetWar3ImageModel=GetWar3ImageModel
GetWar3ImageModel="GetWar3ImageModel(",~whichWar3Image,")"
GetWar3ImageModelHint="[UjAPI] native GetWar3ImageModel takes war3image whichWar3Image returns string"

GetWar3ImageMaterialTexture=GetWar3ImageMaterialTexture
GetWar3ImageMaterialTexture="GetWar3ImageMaterialTexture(",~whichWar3Image,", ",~materialId,", ",~textureIndex,")"
GetWar3ImageMaterialTextureHint="[UjAPI] native GetWar3ImageMaterialTexture takes war3image whichWar3Image, integer materialId, integer textureIndex returns string"

GetWar3ImageTexture=GetWar3ImageTexture
GetWar3ImageTexture="GetWar3ImageTexture(",~whichWar3Image,", ",~textureIndex,")"
GetWar3ImageTextureHint="[UjAPI] native GetWar3ImageTexture takes war3image whichWar3Image, integer textureIndex returns string"

GetWar3ImageModelObjectX=GetWar3ImageModelObjectX
GetWar3ImageModelObjectX="GetWar3ImageModelObjectX(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectXHint="[UjAPI] native GetWar3ImageModelObjectX takes war3image whichWar3Image, string whichObject returns real"

GetWar3ImageModelObjectY=GetWar3ImageModelObjectY
GetWar3ImageModelObjectY="GetWar3ImageModelObjectY(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectYHint="[UjAPI] native GetWar3ImageModelObjectY takes war3image whichWar3Image, string whichObject returns real"

GetWar3ImageModelObjectZ=GetWar3ImageModelObjectZ
GetWar3ImageModelObjectZ="GetWar3ImageModelObjectZ(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectZHint="[UjAPI] native GetWar3ImageModelObjectZ takes war3image whichWar3Image, string whichObject returns real"

GetWar3ImageModelObjectPositionLoc=GetWar3ImageModelObjectPositionLoc
GetWar3ImageModelObjectPositionLoc="GetWar3ImageModelObjectPositionLoc(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectPositionLocHint="[UjAPI] native GetWar3ImageModelObjectPositionLoc takes war3image whichWar3Image, string whichObject returns location"

GetWar3ImageCurrentAnimationId=GetWar3ImageCurrentAnimationId
GetWar3ImageCurrentAnimationId="GetWar3ImageCurrentAnimationId(",~whichWar3Image,")"
GetWar3ImageCurrentAnimationIdHint="[UjAPI] native GetWar3ImageCurrentAnimationId takes war3image whichWar3Image returns integer"

GetWar3ImageCurrentAnimationName=GetWar3ImageCurrentAnimationName
GetWar3ImageCurrentAnimationName="GetWar3ImageCurrentAnimationName(",~whichWar3Image,")"
GetWar3ImageCurrentAnimationNameHint="[UjAPI] native GetWar3ImageCurrentAnimationName takes war3image whichWar3Image returns string"

GetWar3ImageAnimationOffsetPercent=GetWar3ImageAnimationOffsetPercent
GetWar3ImageAnimationOffsetPercent="GetWar3ImageAnimationOffsetPercent(",~whichWar3Image,")"
GetWar3ImageAnimationOffsetPercentHint="[UjAPI] native GetWar3ImageAnimationOffsetPercent takes war3image whichWar3Image returns real"

IsWar3ImageAnimationFrozen=IsWar3ImageAnimationFrozen
IsWar3ImageAnimationFrozen="IsWar3ImageAnimationFrozen(",~whichWar3Image,")"
IsWar3ImageAnimationFrozenHint="[UjAPI] native IsWar3ImageAnimationFrozen takes war3image whichWar3Image returns boolean"

CreateSprite=CreateSprite
CreateSprite="CreateSprite(",~isUber,")"
CreateSpriteHint="[UjAPI] native CreateSprite takes boolean isUber returns sprite"

AttachSpriteToTarget=AttachSpriteToTarget
AttachSpriteToTarget="AttachSpriteToTarget(",~whichSprite,", ",~targetSprite,", ",~attachPointName,")"
AttachSpriteToTargetHint="[UjAPI] native AttachSpriteToTarget takes sprite whichSprite, sprite targetSprite, string attachPointName returns sprite"

AddSpriteToTarget=AddSpriteToTarget
AddSpriteToTarget="AddSpriteToTarget(",~modelName,", ",~targetSprite,", ",~attachPointName,")"
AddSpriteToTargetHint="[UjAPI] native AddSpriteToTarget takes string modelName, sprite targetSprite, string attachPointName returns sprite"

GetSpriteChildrenCount=GetSpriteChildrenCount
GetSpriteChildrenCount="GetSpriteChildrenCount(",~whichSprite,")"
GetSpriteChildrenCountHint="[UjAPI] native GetSpriteChildrenCount takes sprite whichSprite returns integer"

GetSpriteChildById=GetSpriteChildById
GetSpriteChildById="GetSpriteChildById(",~whichSprite,", ",~index,")"
GetSpriteChildByIdHint="[UjAPI] native GetSpriteChildById takes sprite whichSprite, integer index returns sprite"

IsSpriteUber=IsSpriteUber
IsSpriteUber="IsSpriteUber(",~whichSprite,")"
IsSpriteUberHint="[UjAPI] native IsSpriteUber takes sprite whichSprite returns boolean"

GetSpriteX=GetSpriteX
GetSpriteX="GetSpriteX(",~whichSprite,")"
GetSpriteXHint="[UjAPI] native GetSpriteX takes sprite whichSprite returns real"

GetSpriteY=GetSpriteY
GetSpriteY="GetSpriteY(",~whichSprite,")"
GetSpriteYHint="[UjAPI] native GetSpriteY takes sprite whichSprite returns real"

GetSpriteZ=GetSpriteZ
GetSpriteZ="GetSpriteZ(",~whichSprite,")"
GetSpriteZHint="[UjAPI] native GetSpriteZ takes sprite whichSprite returns real"

GetSpriteHeight=GetSpriteHeight
GetSpriteHeight="GetSpriteHeight(",~whichSprite,")"
GetSpriteHeightHint="[UjAPI] native GetSpriteHeight takes sprite whichSprite returns real"

GetSpritePositionLoc=GetSpritePositionLoc
GetSpritePositionLoc="GetSpritePositionLoc(",~whichSprite,")"
GetSpritePositionLocHint="[UjAPI] native GetSpritePositionLoc takes sprite whichSprite returns location"

GetSpriteScreenX=GetSpriteScreenX
GetSpriteScreenX="GetSpriteScreenX(",~whichSprite,")"
GetSpriteScreenXHint="[UjAPI] native GetSpriteScreenX takes sprite whichSprite returns real"

GetSpriteScreenY=GetSpriteScreenY
GetSpriteScreenY="GetSpriteScreenY(",~whichSprite,")"
GetSpriteScreenYHint="[UjAPI] native GetSpriteScreenY takes sprite whichSprite returns real"

GetSpriteScale=GetSpriteScale
GetSpriteScale="GetSpriteScale(",~whichSprite,")"
GetSpriteScaleHint="[UjAPI] native GetSpriteScale takes sprite whichSprite returns real"

GetSpriteTimeScale=GetSpriteTimeScale
GetSpriteTimeScale="GetSpriteTimeScale(",~whichSprite,")"
GetSpriteTimeScaleHint="[UjAPI] native GetSpriteTimeScale takes sprite whichSprite returns real"

GetSpritePlayerColour=GetSpritePlayerColour
GetSpritePlayerColour="GetSpritePlayerColour(",~whichSprite,")"
GetSpritePlayerColourHint="[UjAPI] native GetSpritePlayerColour takes sprite whichSprite returns playercolor"

GetSpriteColour=GetSpriteColour
GetSpriteColour="GetSpriteColour(",~whichSprite,")"
GetSpriteColourHint="[UjAPI] native GetSpriteColour takes sprite whichSprite returns integer"

GetSpriteMatrixScaleX=GetSpriteMatrixScaleX
GetSpriteMatrixScaleX="GetSpriteMatrixScaleX(",~whichSprite,")"
GetSpriteMatrixScaleXHint="[UjAPI] native GetSpriteMatrixScaleX takes sprite whichSprite returns real"

GetSpriteMatrixScaleY=GetSpriteMatrixScaleY
GetSpriteMatrixScaleY="GetSpriteMatrixScaleY(",~whichSprite,")"
GetSpriteMatrixScaleYHint="[UjAPI] native GetSpriteMatrixScaleY takes sprite whichSprite returns real"

GetSpriteMatrixScaleZ=GetSpriteMatrixScaleZ
GetSpriteMatrixScaleZ="GetSpriteMatrixScaleZ(",~whichSprite,")"
GetSpriteMatrixScaleZHint="[UjAPI] native GetSpriteMatrixScaleZ takes sprite whichSprite returns real"

GetSpriteYaw=GetSpriteYaw
GetSpriteYaw="GetSpriteYaw(",~whichSprite,")"
GetSpriteYawHint="[UjAPI] native GetSpriteYaw takes sprite whichSprite returns real"

GetSpriteFacing=GetSpriteFacing
GetSpriteFacing="GetSpriteFacing(",~whichSprite,")"
GetSpriteFacingHint="[UjAPI] native GetSpriteFacing takes sprite whichSprite returns real"

GetSpritePitch=GetSpritePitch
GetSpritePitch="GetSpritePitch(",~whichSprite,")"
GetSpritePitchHint="[UjAPI] native GetSpritePitch takes sprite whichSprite returns real"

GetSpriteRoll=GetSpriteRoll
GetSpriteRoll="GetSpriteRoll(",~whichSprite,")"
GetSpriteRollHint="[UjAPI] native GetSpriteRoll takes sprite whichSprite returns real"

GetSpriteMaterialTexture=GetSpriteMaterialTexture
GetSpriteMaterialTexture="GetSpriteMaterialTexture(",~whichSprite,", ",~materialId,", ",~textureIndex,")"
GetSpriteMaterialTextureHint="[UjAPI] native GetSpriteMaterialTexture takes sprite whichSprite, integer materialId, integer textureIndex returns string"

GetSpriteTexture=GetSpriteTexture
GetSpriteTexture="GetSpriteTexture(",~whichSprite,", ",~textureIndex,")"
GetSpriteTextureHint="[UjAPI] native GetSpriteTexture takes sprite whichSprite, integer textureIndex returns string"

GetSpriteModel=GetSpriteModel
GetSpriteModel="GetSpriteModel(",~whichSprite,")"
GetSpriteModelHint="[UjAPI] native GetSpriteModel takes sprite whichSprite returns string"

GetSpriteModelObjectX=GetSpriteModelObjectX
GetSpriteModelObjectX="GetSpriteModelObjectX(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectXHint="[UjAPI] native GetSpriteModelObjectX takes sprite whichSprite, string whichObject returns real"

GetSpriteModelObjectY=GetSpriteModelObjectY
GetSpriteModelObjectY="GetSpriteModelObjectY(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectYHint="[UjAPI] native GetSpriteModelObjectY takes sprite whichSprite, string whichObject returns real"

GetSpriteModelObjectZ=GetSpriteModelObjectZ
GetSpriteModelObjectZ="GetSpriteModelObjectZ(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectZHint="[UjAPI] native GetSpriteModelObjectZ takes sprite whichSprite, string whichObject returns real"

GetSpriteModelObjectPositionLoc=GetSpriteModelObjectPositionLoc
GetSpriteModelObjectPositionLoc="GetSpriteModelObjectPositionLoc(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectPositionLocHint="[UjAPI] native GetSpriteModelObjectPositionLoc takes sprite whichSprite, string whichObject returns location"

GetSpriteCurrentAnimationId=GetSpriteCurrentAnimationId
GetSpriteCurrentAnimationId="GetSpriteCurrentAnimationId(",~whichSprite,")"
GetSpriteCurrentAnimationIdHint="[UjAPI] native GetSpriteCurrentAnimationId takes sprite whichSprite returns integer"

GetSpriteCurrentAnimationName=GetSpriteCurrentAnimationName
GetSpriteCurrentAnimationName="GetSpriteCurrentAnimationName(",~whichSprite,")"
GetSpriteCurrentAnimationNameHint="[UjAPI] native GetSpriteCurrentAnimationName takes sprite whichSprite returns string"

GetSpriteAnimationOffsetPercent=GetSpriteAnimationOffsetPercent
GetSpriteAnimationOffsetPercent="GetSpriteAnimationOffsetPercent(",~whichSprite,")"
GetSpriteAnimationOffsetPercentHint="[UjAPI] native GetSpriteAnimationOffsetPercent takes sprite whichSprite returns real"

IsSpriteAnimationFrozen=IsSpriteAnimationFrozen
IsSpriteAnimationFrozen="IsSpriteAnimationFrozen(",~whichSprite,")"
IsSpriteAnimationFrozenHint="[UjAPI] native IsSpriteAnimationFrozen takes sprite whichSprite returns boolean"

CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(",~objectTypeId,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadHint="[UjAPI] native CreateDoodad takes integer objectTypeId, real x, real y, real facing, real scale, integer variation returns doodad"

CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(",~objectTypeId,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadZHint="[UjAPI] native CreateDoodadZ takes integer objectTypeId, real x, real y, real z, real facing, real scale, integer variation returns doodad"

GetDoodadCount=GetDoodadCount
GetDoodadCount="GetDoodadCount(",")"
GetDoodadCountHint="[UjAPI] native GetDoodadCount takes nothing returns integer"

GetDoodadByIndex=GetDoodadByIndex
GetDoodadByIndex="GetDoodadByIndex(",~index,")"
GetDoodadByIndexHint="[UjAPI] native GetDoodadByIndex takes integer index returns doodad"

GetDoodadIndex=GetDoodadIndex
GetDoodadIndex="GetDoodadIndex(",~whichDoodad,")"
GetDoodadIndexHint="[UjAPI] native GetDoodadIndex takes doodad whichDoodad returns integer"

GetDoodadColour=GetDoodadColour
GetDoodadColour="GetDoodadColour(",~whichDoodad,")"
GetDoodadColourHint="[UjAPI] native GetDoodadColour takes doodad whichDoodad returns integer"

GetDoodadScale=GetDoodadScale
GetDoodadScale="GetDoodadScale(",~whichDoodad,")"
GetDoodadScaleHint="[UjAPI] native GetDoodadScale takes doodad whichDoodad returns real"

GetDoodadTimeScale=GetDoodadTimeScale
GetDoodadTimeScale="GetDoodadTimeScale(",~whichDoodad,")"
GetDoodadTimeScaleHint="[UjAPI] native GetDoodadTimeScale takes doodad whichDoodad returns real"

GetDoodadX=GetDoodadX
GetDoodadX="GetDoodadX(",~whichDoodad,")"
GetDoodadXHint="[UjAPI] native GetDoodadX takes doodad whichDoodad returns real"

GetDoodadY=GetDoodadY
GetDoodadY="GetDoodadY(",~whichDoodad,")"
GetDoodadYHint="[UjAPI] native GetDoodadY takes doodad whichDoodad returns real"

GetDoodadZ=GetDoodadZ
GetDoodadZ="GetDoodadZ(",~whichDoodad,")"
GetDoodadZHint="[UjAPI] native GetDoodadZ takes doodad whichDoodad returns real"

GetDoodadPositionLoc=GetDoodadPositionLoc
GetDoodadPositionLoc="GetDoodadPositionLoc(",~whichDoodad,")"
GetDoodadPositionLocHint="[UjAPI] native GetDoodadPositionLoc takes doodad whichDoodad returns location"

GetDoodadScreenX=GetDoodadScreenX
GetDoodadScreenX="GetDoodadScreenX(",~whichDoodad,")"
GetDoodadScreenXHint="[UjAPI] native GetDoodadScreenX takes doodad whichDoodad returns real"

GetDoodadScreenY=GetDoodadScreenY
GetDoodadScreenY="GetDoodadScreenY(",~whichDoodad,")"
GetDoodadScreenYHint="[UjAPI] native GetDoodadScreenY takes doodad whichDoodad returns real"

GetDoodadMatrixScaleX=GetDoodadMatrixScaleX
GetDoodadMatrixScaleX="GetDoodadMatrixScaleX(",~whichDoodad,")"
GetDoodadMatrixScaleXHint="[UjAPI] native GetDoodadMatrixScaleX takes doodad whichDoodad returns real"

GetDoodadMatrixScaleY=GetDoodadMatrixScaleY
GetDoodadMatrixScaleY="GetDoodadMatrixScaleY(",~whichDoodad,")"
GetDoodadMatrixScaleYHint="[UjAPI] native GetDoodadMatrixScaleY takes doodad whichDoodad returns real"

GetDoodadMatrixScaleZ=GetDoodadMatrixScaleZ
GetDoodadMatrixScaleZ="GetDoodadMatrixScaleZ(",~whichDoodad,")"
GetDoodadMatrixScaleZHint="[UjAPI] native GetDoodadMatrixScaleZ takes doodad whichDoodad returns real"

GetDoodadYaw=GetDoodadYaw
GetDoodadYaw="GetDoodadYaw(",~whichDoodad,")"
GetDoodadYawHint="[UjAPI] native GetDoodadYaw takes doodad whichDoodad returns real"

GetDoodadFacing=GetDoodadFacing
GetDoodadFacing="GetDoodadFacing(",~whichDoodad,")"
GetDoodadFacingHint="[UjAPI] native GetDoodadFacing takes doodad whichDoodad returns real"

GetDoodadPitch=GetDoodadPitch
GetDoodadPitch="GetDoodadPitch(",~whichDoodad,")"
GetDoodadPitchHint="[UjAPI] native GetDoodadPitch takes doodad whichDoodad returns real"

GetDoodadRoll=GetDoodadRoll
GetDoodadRoll="GetDoodadRoll(",~whichDoodad,")"
GetDoodadRollHint="[UjAPI] native GetDoodadRoll takes doodad whichDoodad returns real"

GetDoodadPlayerColour=GetDoodadPlayerColour
GetDoodadPlayerColour="GetDoodadPlayerColour(",~whichDoodad,")"
GetDoodadPlayerColourHint="[UjAPI] native GetDoodadPlayerColour takes doodad whichDoodad returns playercolor"

GetDoodadModel=GetDoodadModel
GetDoodadModel="GetDoodadModel(",~whichDoodad,")"
GetDoodadModelHint="[UjAPI] native GetDoodadModel takes doodad whichDoodad returns string"

GetDoodadMaterialTexture=GetDoodadMaterialTexture
GetDoodadMaterialTexture="GetDoodadMaterialTexture(",~whichDoodad,", ",~materialId,", ",~textureIndex,")"
GetDoodadMaterialTextureHint="[UjAPI] native GetDoodadMaterialTexture takes doodad whichDoodad, integer materialId, integer textureIndex returns string"

GetDoodadTexture=GetDoodadTexture
GetDoodadTexture="GetDoodadTexture(",~whichDoodad,", ",~textureIndex,")"
GetDoodadTextureHint="[UjAPI] native GetDoodadTexture takes doodad whichDoodad, integer textureIndex returns string"

IsDoodadVisible=IsDoodadVisible
IsDoodadVisible="IsDoodadVisible(",~whichDoodad,")"
IsDoodadVisibleHint="[UjAPI] native IsDoodadVisible takes doodad whichDoodad returns boolean"

GetDoodadAnimationOffsetPercent=GetDoodadAnimationOffsetPercent
GetDoodadAnimationOffsetPercent="GetDoodadAnimationOffsetPercent(",~whichDoodad,")"
GetDoodadAnimationOffsetPercentHint="[UjAPI] native GetDoodadAnimationOffsetPercent takes doodad whichDoodad returns real"

IsDoodadAnimationFrozen=IsDoodadAnimationFrozen
IsDoodadAnimationFrozen="IsDoodadAnimationFrozen(",~whichDoodad,")"
IsDoodadAnimationFrozenHint="[UjAPI] native IsDoodadAnimationFrozen takes doodad whichDoodad returns boolean"

GetFilterDoodad=GetFilterDoodad
GetFilterDoodad="GetFilterDoodad(",")"
GetFilterDoodadHint="[UjAPI] native GetFilterDoodad takes nothing returns doodad"

GetEnumDoodad=GetEnumDoodad
GetEnumDoodad="GetEnumDoodad(",")"
GetEnumDoodadHint="[UjAPI] native GetEnumDoodad takes nothing returns doodad"

GetSpecialEffectSprite=GetSpecialEffectSprite
GetSpecialEffectSprite="GetSpecialEffectSprite(",~whichEffect,")"
GetSpecialEffectSpriteHint="[UjAPI] native GetSpecialEffectSprite takes effect whichEffect returns sprite"

IsSpecialEffectVisible=IsSpecialEffectVisible
IsSpecialEffectVisible="IsSpecialEffectVisible(",~whichEffect,")"
IsSpecialEffectVisibleHint="[UjAPI] native IsSpecialEffectVisible takes effect whichEffect returns boolean"

GetSpecialEffectX=GetSpecialEffectX
GetSpecialEffectX="GetSpecialEffectX(",~whichEffect,")"
GetSpecialEffectXHint="[UjAPI] native GetSpecialEffectX takes effect whichEffect returns real"

GetSpecialEffectY=GetSpecialEffectY
GetSpecialEffectY="GetSpecialEffectY(",~whichEffect,")"
GetSpecialEffectYHint="[UjAPI] native GetSpecialEffectY takes effect whichEffect returns real"

GetSpecialEffectZ=GetSpecialEffectZ
GetSpecialEffectZ="GetSpecialEffectZ(",~whichEffect,")"
GetSpecialEffectZHint="[UjAPI] native GetSpecialEffectZ takes effect whichEffect returns real"

GetSpecialEffectHeight=GetSpecialEffectHeight
GetSpecialEffectHeight="GetSpecialEffectHeight(",~whichEffect,")"
GetSpecialEffectHeightHint="[UjAPI] native GetSpecialEffectHeight takes effect whichEffect returns real"

GetSpecialEffectPositionLoc=GetSpecialEffectPositionLoc
GetSpecialEffectPositionLoc="GetSpecialEffectPositionLoc(",~whichEffect,")"
GetSpecialEffectPositionLocHint="[UjAPI] native GetSpecialEffectPositionLoc takes effect whichEffect returns location"

GetSpecialEffectScreenX=GetSpecialEffectScreenX
GetSpecialEffectScreenX="GetSpecialEffectScreenX(",~whichEffect,")"
GetSpecialEffectScreenXHint="[UjAPI] native GetSpecialEffectScreenX takes effect whichEffect returns real"

GetSpecialEffectScreenY=GetSpecialEffectScreenY
GetSpecialEffectScreenY="GetSpecialEffectScreenY(",~whichEffect,")"
GetSpecialEffectScreenYHint="[UjAPI] native GetSpecialEffectScreenY takes effect whichEffect returns real"

GetSpecialEffectScale=GetSpecialEffectScale
GetSpecialEffectScale="GetSpecialEffectScale(",~whichEffect,")"
GetSpecialEffectScaleHint="[UjAPI] native GetSpecialEffectScale takes effect whichEffect returns real"

GetSpecialEffectTimeScale=GetSpecialEffectTimeScale
GetSpecialEffectTimeScale="GetSpecialEffectTimeScale(",~whichEffect,")"
GetSpecialEffectTimeScaleHint="[UjAPI] native GetSpecialEffectTimeScale takes effect whichEffect returns real"

GetSpecialEffectPlayerColour=GetSpecialEffectPlayerColour
GetSpecialEffectPlayerColour="GetSpecialEffectPlayerColour(",~whichEffect,")"
GetSpecialEffectPlayerColourHint="[UjAPI] native GetSpecialEffectPlayerColour takes effect whichEffect returns playercolor"

GetSpecialEffectColour=GetSpecialEffectColour
GetSpecialEffectColour="GetSpecialEffectColour(",~whichEffect,")"
GetSpecialEffectColourHint="[UjAPI] native GetSpecialEffectColour takes effect whichEffect returns integer"

GetSpecialEffectMatrixScaleX=GetSpecialEffectMatrixScaleX
GetSpecialEffectMatrixScaleX="GetSpecialEffectMatrixScaleX(",~whichEffect,")"
GetSpecialEffectMatrixScaleXHint="[UjAPI] native GetSpecialEffectMatrixScaleX takes effect whichEffect returns real"

GetSpecialEffectMatrixScaleY=GetSpecialEffectMatrixScaleY
GetSpecialEffectMatrixScaleY="GetSpecialEffectMatrixScaleY(",~whichEffect,")"
GetSpecialEffectMatrixScaleYHint="[UjAPI] native GetSpecialEffectMatrixScaleY takes effect whichEffect returns real"

GetSpecialEffectMatrixScaleZ=GetSpecialEffectMatrixScaleZ
GetSpecialEffectMatrixScaleZ="GetSpecialEffectMatrixScaleZ(",~whichEffect,")"
GetSpecialEffectMatrixScaleZHint="[UjAPI] native GetSpecialEffectMatrixScaleZ takes effect whichEffect returns real"

GetSpecialEffectYaw=GetSpecialEffectYaw
GetSpecialEffectYaw="GetSpecialEffectYaw(",~whichEffect,")"
GetSpecialEffectYawHint="[UjAPI] native GetSpecialEffectYaw takes effect whichEffect returns real"

GetSpecialEffectFacing=GetSpecialEffectFacing
GetSpecialEffectFacing="GetSpecialEffectFacing(",~whichEffect,")"
GetSpecialEffectFacingHint="[UjAPI] native GetSpecialEffectFacing takes effect whichEffect returns real"

GetSpecialEffectPitch=GetSpecialEffectPitch
GetSpecialEffectPitch="GetSpecialEffectPitch(",~whichEffect,")"
GetSpecialEffectPitchHint="[UjAPI] native GetSpecialEffectPitch takes effect whichEffect returns real"

GetSpecialEffectRoll=GetSpecialEffectRoll
GetSpecialEffectRoll="GetSpecialEffectRoll(",~whichEffect,")"
GetSpecialEffectRollHint="[UjAPI] native GetSpecialEffectRoll takes effect whichEffect returns real"

GetSpecialEffectMaterialTexture=GetSpecialEffectMaterialTexture
GetSpecialEffectMaterialTexture="GetSpecialEffectMaterialTexture(",~whichEffect,", ",~materialId,", ",~textureIndex,")"
GetSpecialEffectMaterialTextureHint="[UjAPI] native GetSpecialEffectMaterialTexture takes effect whichEffect, integer materialId, integer textureIndex returns string"

GetSpecialEffectTexture=GetSpecialEffectTexture
GetSpecialEffectTexture="GetSpecialEffectTexture(",~whichEffect,", ",~textureIndex,")"
GetSpecialEffectTextureHint="[UjAPI] native GetSpecialEffectTexture takes effect whichEffect, integer textureIndex returns string"

GetSpecialEffectModel=GetSpecialEffectModel
GetSpecialEffectModel="GetSpecialEffectModel(",~whichEffect,")"
GetSpecialEffectModelHint="[UjAPI] native GetSpecialEffectModel takes effect whichEffect returns string"

GetSpecialEffectModelObjectX=GetSpecialEffectModelObjectX
GetSpecialEffectModelObjectX="GetSpecialEffectModelObjectX(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectXHint="[UjAPI] native GetSpecialEffectModelObjectX takes effect whichEffect, string whichObject returns real"

GetSpecialEffectModelObjectY=GetSpecialEffectModelObjectY
GetSpecialEffectModelObjectY="GetSpecialEffectModelObjectY(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectYHint="[UjAPI] native GetSpecialEffectModelObjectY takes effect whichEffect, string whichObject returns real"

GetSpecialEffectModelObjectZ=GetSpecialEffectModelObjectZ
GetSpecialEffectModelObjectZ="GetSpecialEffectModelObjectZ(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectZHint="[UjAPI] native GetSpecialEffectModelObjectZ takes effect whichEffect, string whichObject returns real"

GetSpecialEffectModelObjectPositionLoc=GetSpecialEffectModelObjectPositionLoc
GetSpecialEffectModelObjectPositionLoc="GetSpecialEffectModelObjectPositionLoc(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectPositionLocHint="[UjAPI] native GetSpecialEffectModelObjectPositionLoc takes effect whichEffect, string whichObject returns location"

GetSpecialEffectCurrentAnimationId=GetSpecialEffectCurrentAnimationId
GetSpecialEffectCurrentAnimationId="GetSpecialEffectCurrentAnimationId(",~whichEffect,")"
GetSpecialEffectCurrentAnimationIdHint="[UjAPI] native GetSpecialEffectCurrentAnimationId takes effect whichEffect returns integer"

GetSpecialEffectCurrentAnimationName=GetSpecialEffectCurrentAnimationName
GetSpecialEffectCurrentAnimationName="GetSpecialEffectCurrentAnimationName(",~whichEffect,")"
GetSpecialEffectCurrentAnimationNameHint="[UjAPI] native GetSpecialEffectCurrentAnimationName takes effect whichEffect returns string"

GetSpecialEffectAnimationOffsetPercent=GetSpecialEffectAnimationOffsetPercent
GetSpecialEffectAnimationOffsetPercent="GetSpecialEffectAnimationOffsetPercent(",~whichEffect,")"
GetSpecialEffectAnimationOffsetPercentHint="[UjAPI] native GetSpecialEffectAnimationOffsetPercent takes effect whichEffect returns real"

IsSpecialEffectAnimationFrozen=IsSpecialEffectAnimationFrozen
IsSpecialEffectAnimationFrozen="IsSpecialEffectAnimationFrozen(",~whichEffect,")"
IsSpecialEffectAnimationFrozenHint="[UjAPI] native IsSpecialEffectAnimationFrozen takes effect whichEffect returns boolean"

GetTriggerSpecialEffect=GetTriggerSpecialEffect
GetTriggerSpecialEffect="GetTriggerSpecialEffect(",")"
GetTriggerSpecialEffectHint="[UjAPI] native GetTriggerSpecialEffect takes nothing returns effect"

GetFilterSpecialEffect=GetFilterSpecialEffect
GetFilterSpecialEffect="GetFilterSpecialEffect(",")"
GetFilterSpecialEffectHint="[UjAPI] native GetFilterSpecialEffect takes nothing returns effect"

GetEnumSpecialEffect=GetEnumSpecialEffect
GetEnumSpecialEffect="GetEnumSpecialEffect(",")"
GetEnumSpecialEffectHint="[UjAPI] native GetEnumSpecialEffect takes nothing returns effect"

GetTrackableSprite=GetTrackableSprite
GetTrackableSprite="GetTrackableSprite(",~whichTrackable,")"
GetTrackableSpriteHint="[UjAPI] native GetTrackableSprite takes trackable whichTrackable returns sprite"

IsTrackableVisible=IsTrackableVisible
IsTrackableVisible="IsTrackableVisible(",~whichTrackable,")"
IsTrackableVisibleHint="[UjAPI] native IsTrackableVisible takes trackable whichTrackable returns boolean"

GetTrackableX=GetTrackableX
GetTrackableX="GetTrackableX(",~whichTrackable,")"
GetTrackableXHint="[UjAPI] native GetTrackableX takes trackable whichTrackable returns real"

GetTrackableY=GetTrackableY
GetTrackableY="GetTrackableY(",~whichTrackable,")"
GetTrackableYHint="[UjAPI] native GetTrackableY takes trackable whichTrackable returns real"

GetTrackableZ=GetTrackableZ
GetTrackableZ="GetTrackableZ(",~whichTrackable,")"
GetTrackableZHint="[UjAPI] native GetTrackableZ takes trackable whichTrackable returns real"

GetTrackableHeight=GetTrackableHeight
GetTrackableHeight="GetTrackableHeight(",~whichTrackable,")"
GetTrackableHeightHint="[UjAPI] native GetTrackableHeight takes trackable whichTrackable returns real"

GetTrackablePositionLoc=GetTrackablePositionLoc
GetTrackablePositionLoc="GetTrackablePositionLoc(",~whichTrackable,")"
GetTrackablePositionLocHint="[UjAPI] native GetTrackablePositionLoc takes trackable whichTrackable returns location"

GetTrackableScreenX=GetTrackableScreenX
GetTrackableScreenX="GetTrackableScreenX(",~whichTrackable,")"
GetTrackableScreenXHint="[UjAPI] native GetTrackableScreenX takes trackable whichTrackable returns real"

GetTrackableScreenY=GetTrackableScreenY
GetTrackableScreenY="GetTrackableScreenY(",~whichTrackable,")"
GetTrackableScreenYHint="[UjAPI] native GetTrackableScreenY takes trackable whichTrackable returns real"

GetTrackableScale=GetTrackableScale
GetTrackableScale="GetTrackableScale(",~whichTrackable,")"
GetTrackableScaleHint="[UjAPI] native GetTrackableScale takes trackable whichTrackable returns real"

GetTrackableTimeScale=GetTrackableTimeScale
GetTrackableTimeScale="GetTrackableTimeScale(",~whichTrackable,")"
GetTrackableTimeScaleHint="[UjAPI] native GetTrackableTimeScale takes trackable whichTrackable returns real"

GetTrackablePlayerColour=GetTrackablePlayerColour
GetTrackablePlayerColour="GetTrackablePlayerColour(",~whichTrackable,")"
GetTrackablePlayerColourHint="[UjAPI] native GetTrackablePlayerColour takes trackable whichTrackable returns playercolor"

GetTrackableColour=GetTrackableColour
GetTrackableColour="GetTrackableColour(",~whichTrackable,")"
GetTrackableColourHint="[UjAPI] native GetTrackableColour takes trackable whichTrackable returns integer"

GetTrackableMatrixScaleX=GetTrackableMatrixScaleX
GetTrackableMatrixScaleX="GetTrackableMatrixScaleX(",~whichTrackable,")"
GetTrackableMatrixScaleXHint="[UjAPI] native GetTrackableMatrixScaleX takes trackable whichTrackable returns real"

GetTrackableMatrixScaleY=GetTrackableMatrixScaleY
GetTrackableMatrixScaleY="GetTrackableMatrixScaleY(",~whichTrackable,")"
GetTrackableMatrixScaleYHint="[UjAPI] native GetTrackableMatrixScaleY takes trackable whichTrackable returns real"

GetTrackableMatrixScaleZ=GetTrackableMatrixScaleZ
GetTrackableMatrixScaleZ="GetTrackableMatrixScaleZ(",~whichTrackable,")"
GetTrackableMatrixScaleZHint="[UjAPI] native GetTrackableMatrixScaleZ takes trackable whichTrackable returns real"

GetTrackableYaw=GetTrackableYaw
GetTrackableYaw="GetTrackableYaw(",~whichTrackable,")"
GetTrackableYawHint="[UjAPI] native GetTrackableYaw takes trackable whichTrackable returns real"

GetTrackableFacing=GetTrackableFacing
GetTrackableFacing="GetTrackableFacing(",~whichTrackable,")"
GetTrackableFacingHint="[UjAPI] native GetTrackableFacing takes trackable whichTrackable returns real"

GetTrackablePitch=GetTrackablePitch
GetTrackablePitch="GetTrackablePitch(",~whichTrackable,")"
GetTrackablePitchHint="[UjAPI] native GetTrackablePitch takes trackable whichTrackable returns real"

GetTrackableRoll=GetTrackableRoll
GetTrackableRoll="GetTrackableRoll(",~whichTrackable,")"
GetTrackableRollHint="[UjAPI] native GetTrackableRoll takes trackable whichTrackable returns real"

GetTrackableMaterialTexture=GetTrackableMaterialTexture
GetTrackableMaterialTexture="GetTrackableMaterialTexture(",~whichTrackable,", ",~materialId,", ",~textureIndex,")"
GetTrackableMaterialTextureHint="[UjAPI] native GetTrackableMaterialTexture takes trackable whichTrackable, integer materialId, integer textureIndex returns string"

GetTrackableTexture=GetTrackableTexture
GetTrackableTexture="GetTrackableTexture(",~whichTrackable,", ",~textureIndex,")"
GetTrackableTextureHint="[UjAPI] native GetTrackableTexture takes trackable whichTrackable, integer textureIndex returns string"

GetTrackableModel=GetTrackableModel
GetTrackableModel="GetTrackableModel(",~whichTrackable,")"
GetTrackableModelHint="[UjAPI] native GetTrackableModel takes trackable whichTrackable returns string"

GetTrackableModelObjectX=GetTrackableModelObjectX
GetTrackableModelObjectX="GetTrackableModelObjectX(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectXHint="[UjAPI] native GetTrackableModelObjectX takes trackable whichTrackable, string whichObject returns real"

GetTrackableModelObjectY=GetTrackableModelObjectY
GetTrackableModelObjectY="GetTrackableModelObjectY(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectYHint="[UjAPI] native GetTrackableModelObjectY takes trackable whichTrackable, string whichObject returns real"

GetTrackableModelObjectZ=GetTrackableModelObjectZ
GetTrackableModelObjectZ="GetTrackableModelObjectZ(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectZHint="[UjAPI] native GetTrackableModelObjectZ takes trackable whichTrackable, string whichObject returns real"

GetTrackableModelObjectPositionLoc=GetTrackableModelObjectPositionLoc
GetTrackableModelObjectPositionLoc="GetTrackableModelObjectPositionLoc(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectPositionLocHint="[UjAPI] native GetTrackableModelObjectPositionLoc takes trackable whichTrackable, string whichObject returns location"

GetTrackableCurrentAnimationId=GetTrackableCurrentAnimationId
GetTrackableCurrentAnimationId="GetTrackableCurrentAnimationId(",~whichTrackable,")"
GetTrackableCurrentAnimationIdHint="[UjAPI] native GetTrackableCurrentAnimationId takes trackable whichTrackable returns integer"

GetTrackableCurrentAnimationName=GetTrackableCurrentAnimationName
GetTrackableCurrentAnimationName="GetTrackableCurrentAnimationName(",~whichTrackable,")"
GetTrackableCurrentAnimationNameHint="[UjAPI] native GetTrackableCurrentAnimationName takes trackable whichTrackable returns string"

GetTrackableAnimationOffsetPercent=GetTrackableAnimationOffsetPercent
GetTrackableAnimationOffsetPercent="GetTrackableAnimationOffsetPercent(",~whichTrackable,")"
GetTrackableAnimationOffsetPercentHint="[UjAPI] native GetTrackableAnimationOffsetPercent takes trackable whichTrackable returns real"

IsTrackableAnimationFrozen=IsTrackableAnimationFrozen
IsTrackableAnimationFrozen="IsTrackableAnimationFrozen(",~whichTrackable,")"
IsTrackableAnimationFrozenHint="[UjAPI] native IsTrackableAnimationFrozen takes trackable whichTrackable returns boolean"

GetTriggerTrackable=GetTriggerTrackable
GetTriggerTrackable="GetTriggerTrackable(",")"
GetTriggerTrackableHint="[UjAPI] native GetTriggerTrackable takes nothing returns trackable"

GetFilterTrackable=GetFilterTrackable
GetFilterTrackable="GetFilterTrackable(",")"
GetFilterTrackableHint="[UjAPI] native GetFilterTrackable takes nothing returns trackable"

GetEnumTrackable=GetEnumTrackable
GetEnumTrackable="GetEnumTrackable(",")"
GetEnumTrackableHint="[UjAPI] native GetEnumTrackable takes nothing returns trackable"

GetWidgetUnderCursor=GetWidgetUnderCursor
GetWidgetUnderCursor="GetWidgetUnderCursor(",")"
GetWidgetUnderCursorHint="[UjAPI] native GetWidgetUnderCursor takes nothing returns widget"

GetWidgetSpriteUnit=GetWidgetSprite (Unit)
GetWidgetSpriteUnit="GetWidgetSpriteUnit(",~whichWidget,")"
GetWidgetSpriteUnitHint="[UjAPI] native GetWidgetSprite takes unit whichWidget returns sprite"

GetWidgetSpriteItem=GetWidgetSprite (Item)
GetWidgetSpriteItem="GetWidgetSpriteItem(",~whichWidget,")"
GetWidgetSpriteItemHint="[UjAPI] native GetWidgetSprite takes item whichWidget returns sprite"

GetWidgetSpriteDestructable=GetWidgetSprite (Destructable)
GetWidgetSpriteDestructable="GetWidgetSpriteDestructable(",~whichWidget,")"
GetWidgetSpriteDestructableHint="[UjAPI] native GetWidgetSprite takes destructable whichWidget returns sprite"

GetWidgetTypeIdUnit=GetWidgetTypeId (Unit)
GetWidgetTypeIdUnit="GetWidgetTypeIdUnit(",~whichWidget,")"
GetWidgetTypeIdUnitHint="[UjAPI] native GetWidgetTypeId takes unit whichWidget returns integer"

GetWidgetTypeIdItem=GetWidgetTypeId (Item)
GetWidgetTypeIdItem="GetWidgetTypeIdItem(",~whichWidget,")"
GetWidgetTypeIdItemHint="[UjAPI] native GetWidgetTypeId takes item whichWidget returns integer"

GetWidgetTypeIdDestructable=GetWidgetTypeId (Destructable)
GetWidgetTypeIdDestructable="GetWidgetTypeIdDestructable(",~whichWidget,")"
GetWidgetTypeIdDestructableHint="[UjAPI] native GetWidgetTypeId takes destructable whichWidget returns integer"

GetWidgetNameUnit=GetWidgetName (Unit)
GetWidgetNameUnit="GetWidgetNameUnit(",~whichWidget,")"
GetWidgetNameUnitHint="[UjAPI] native GetWidgetName takes unit whichWidget returns string"

GetWidgetNameItem=GetWidgetName (Item)
GetWidgetNameItem="GetWidgetNameItem(",~whichWidget,")"
GetWidgetNameItemHint="[UjAPI] native GetWidgetName takes item whichWidget returns string"

GetWidgetNameDestructable=GetWidgetName (Destructable)
GetWidgetNameDestructable="GetWidgetNameDestructable(",~whichWidget,")"
GetWidgetNameDestructableHint="[UjAPI] native GetWidgetName takes destructable whichWidget returns string"

IsWidgetTipEnabled=IsWidgetTipEnabled
IsWidgetTipEnabled="IsWidgetTipEnabled(",")"
IsWidgetTipEnabledHint="[UjAPI] native IsWidgetTipEnabled takes nothing returns boolean"

IsWidgetVisibleUnit=IsWidgetVisible (Unit)
IsWidgetVisibleUnit="IsWidgetVisibleUnit(",~whichWidget,")"
IsWidgetVisibleUnitHint="[UjAPI] native IsWidgetVisible takes unit whichWidget returns boolean"

IsWidgetVisibleItem=IsWidgetVisible (Item)
IsWidgetVisibleItem="IsWidgetVisibleItem(",~whichWidget,")"
IsWidgetVisibleItemHint="[UjAPI] native IsWidgetVisible takes item whichWidget returns boolean"

IsWidgetVisibleDestructable=IsWidgetVisible (Destructable)
IsWidgetVisibleDestructable="IsWidgetVisibleDestructable(",~whichWidget,")"
IsWidgetVisibleDestructableHint="[UjAPI] native IsWidgetVisible takes destructable whichWidget returns boolean"

IsWidgetInvulnerableUnit=IsWidgetInvulnerable (Unit)
IsWidgetInvulnerableUnit="IsWidgetInvulnerableUnit(",~whichWidget,")"
IsWidgetInvulnerableUnitHint="[UjAPI] native IsWidgetInvulnerable takes unit whichWidget returns boolean"

IsWidgetInvulnerableItem=IsWidgetInvulnerable (Item)
IsWidgetInvulnerableItem="IsWidgetInvulnerableItem(",~whichWidget,")"
IsWidgetInvulnerableItemHint="[UjAPI] native IsWidgetInvulnerable takes item whichWidget returns boolean"

IsWidgetInvulnerableDestructable=IsWidgetInvulnerable (Destructable)
IsWidgetInvulnerableDestructable="IsWidgetInvulnerableDestructable(",~whichWidget,")"
IsWidgetInvulnerableDestructableHint="[UjAPI] native IsWidgetInvulnerable takes destructable whichWidget returns boolean"

IsWidgetTargetAllowedUnitUnit=IsWidgetTargetAllowed (Unit, Unit)
IsWidgetTargetAllowedUnitUnit="IsWidgetTargetAllowedUnitUnit(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedUnitUnitHint="[UjAPI] native IsWidgetTargetAllowed takes unit whichWidget, unit target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedItemUnit=IsWidgetTargetAllowed (Item, Unit)
IsWidgetTargetAllowedItemUnit="IsWidgetTargetAllowedItemUnit(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedItemUnitHint="[UjAPI] native IsWidgetTargetAllowed takes item whichWidget, unit target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedDestructableUnit=IsWidgetTargetAllowed (Destructable, Unit)
IsWidgetTargetAllowedDestructableUnit="IsWidgetTargetAllowedDestructableUnit(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedDestructableUnitHint="[UjAPI] native IsWidgetTargetAllowed takes destructable whichWidget, unit target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedUnitItem=IsWidgetTargetAllowed (Unit, Item)
IsWidgetTargetAllowedUnitItem="IsWidgetTargetAllowedUnitItem(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedUnitItemHint="[UjAPI] native IsWidgetTargetAllowed takes unit whichWidget, item target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedItemItem=IsWidgetTargetAllowed (Item, Item)
IsWidgetTargetAllowedItemItem="IsWidgetTargetAllowedItemItem(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedItemItemHint="[UjAPI] native IsWidgetTargetAllowed takes item whichWidget, item target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedDestructableItem=IsWidgetTargetAllowed (Destructable, Item)
IsWidgetTargetAllowedDestructableItem="IsWidgetTargetAllowedDestructableItem(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedDestructableItemHint="[UjAPI] native IsWidgetTargetAllowed takes destructable whichWidget, item target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedUnitDestructable=IsWidgetTargetAllowed (Unit, Destructable)
IsWidgetTargetAllowedUnitDestructable="IsWidgetTargetAllowedUnitDestructable(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedUnitDestructableHint="[UjAPI] native IsWidgetTargetAllowed takes unit whichWidget, destructable target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedItemDestructable=IsWidgetTargetAllowed (Item, Destructable)
IsWidgetTargetAllowedItemDestructable="IsWidgetTargetAllowedItemDestructable(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedItemDestructableHint="[UjAPI] native IsWidgetTargetAllowed takes item whichWidget, destructable target, targetflag whichFlags returns boolean"

IsWidgetTargetAllowedDestructableDestructable=IsWidgetTargetAllowed (Destructable, Destructable)
IsWidgetTargetAllowedDestructableDestructable="IsWidgetTargetAllowedDestructableDestructable(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedDestructableDestructableHint="[UjAPI] native IsWidgetTargetAllowed takes destructable whichWidget, destructable target, targetflag whichFlags returns boolean"

GetWidgetZUnit=GetWidgetZ (Unit)
GetWidgetZUnit="GetWidgetZUnit(",~whichWidget,")"
GetWidgetZUnitHint="[UjAPI] native GetWidgetZ takes unit whichWidget returns real"

GetWidgetZItem=GetWidgetZ (Item)
GetWidgetZItem="GetWidgetZItem(",~whichWidget,")"
GetWidgetZItemHint="[UjAPI] native GetWidgetZ takes item whichWidget returns real"

GetWidgetZDestructable=GetWidgetZ (Destructable)
GetWidgetZDestructable="GetWidgetZDestructable(",~whichWidget,")"
GetWidgetZDestructableHint="[UjAPI] native GetWidgetZ takes destructable whichWidget returns real"

GetWidgetPositionLocUnit=GetWidgetPositionLoc (Unit)
GetWidgetPositionLocUnit="GetWidgetPositionLocUnit(",~whichWidget,")"
GetWidgetPositionLocUnitHint="[UjAPI] native GetWidgetPositionLoc takes unit whichWidget returns location"

GetWidgetPositionLocItem=GetWidgetPositionLoc (Item)
GetWidgetPositionLocItem="GetWidgetPositionLocItem(",~whichWidget,")"
GetWidgetPositionLocItemHint="[UjAPI] native GetWidgetPositionLoc takes item whichWidget returns location"

GetWidgetPositionLocDestructable=GetWidgetPositionLoc (Destructable)
GetWidgetPositionLocDestructable="GetWidgetPositionLocDestructable(",~whichWidget,")"
GetWidgetPositionLocDestructableHint="[UjAPI] native GetWidgetPositionLoc takes destructable whichWidget returns location"

GetWidgetHeightUnit=GetWidgetHeight (Unit)
GetWidgetHeightUnit="GetWidgetHeightUnit(",~whichWidget,")"
GetWidgetHeightUnitHint="[UjAPI] native GetWidgetHeight takes unit whichWidget returns real"

GetWidgetHeightItem=GetWidgetHeight (Item)
GetWidgetHeightItem="GetWidgetHeightItem(",~whichWidget,")"
GetWidgetHeightItemHint="[UjAPI] native GetWidgetHeight takes item whichWidget returns real"

GetWidgetHeightDestructable=GetWidgetHeight (Destructable)
GetWidgetHeightDestructable="GetWidgetHeightDestructable(",~whichWidget,")"
GetWidgetHeightDestructableHint="[UjAPI] native GetWidgetHeight takes destructable whichWidget returns real"

GetWidgetScreenXUnit=GetWidgetScreenX (Unit)
GetWidgetScreenXUnit="GetWidgetScreenXUnit(",~whichWidget,")"
GetWidgetScreenXUnitHint="[UjAPI] native GetWidgetScreenX takes unit whichWidget returns real"

GetWidgetScreenXItem=GetWidgetScreenX (Item)
GetWidgetScreenXItem="GetWidgetScreenXItem(",~whichWidget,")"
GetWidgetScreenXItemHint="[UjAPI] native GetWidgetScreenX takes item whichWidget returns real"

GetWidgetScreenXDestructable=GetWidgetScreenX (Destructable)
GetWidgetScreenXDestructable="GetWidgetScreenXDestructable(",~whichWidget,")"
GetWidgetScreenXDestructableHint="[UjAPI] native GetWidgetScreenX takes destructable whichWidget returns real"

GetWidgetScreenYUnit=GetWidgetScreenY (Unit)
GetWidgetScreenYUnit="GetWidgetScreenYUnit(",~whichWidget,")"
GetWidgetScreenYUnitHint="[UjAPI] native GetWidgetScreenY takes unit whichWidget returns real"

GetWidgetScreenYItem=GetWidgetScreenY (Item)
GetWidgetScreenYItem="GetWidgetScreenYItem(",~whichWidget,")"
GetWidgetScreenYItemHint="[UjAPI] native GetWidgetScreenY takes item whichWidget returns real"

GetWidgetScreenYDestructable=GetWidgetScreenY (Destructable)
GetWidgetScreenYDestructable="GetWidgetScreenYDestructable(",~whichWidget,")"
GetWidgetScreenYDestructableHint="[UjAPI] native GetWidgetScreenY takes destructable whichWidget returns real"

GetWidgetPlayerColourUnit=GetWidgetPlayerColour (Unit)
GetWidgetPlayerColourUnit="GetWidgetPlayerColourUnit(",~whichWidget,")"
GetWidgetPlayerColourUnitHint="[UjAPI] native GetWidgetPlayerColour takes unit whichWidget returns playercolor"

GetWidgetPlayerColourItem=GetWidgetPlayerColour (Item)
GetWidgetPlayerColourItem="GetWidgetPlayerColourItem(",~whichWidget,")"
GetWidgetPlayerColourItemHint="[UjAPI] native GetWidgetPlayerColour takes item whichWidget returns playercolor"

GetWidgetPlayerColourDestructable=GetWidgetPlayerColour (Destructable)
GetWidgetPlayerColourDestructable="GetWidgetPlayerColourDestructable(",~whichWidget,")"
GetWidgetPlayerColourDestructableHint="[UjAPI] native GetWidgetPlayerColour takes destructable whichWidget returns playercolor"

GetWidgetVertexColourUnit=GetWidgetVertexColour (Unit)
GetWidgetVertexColourUnit="GetWidgetVertexColourUnit(",~whichWidget,")"
GetWidgetVertexColourUnitHint="[UjAPI] native GetWidgetVertexColour takes unit whichWidget returns integer"

GetWidgetVertexColourItem=GetWidgetVertexColour (Item)
GetWidgetVertexColourItem="GetWidgetVertexColourItem(",~whichWidget,")"
GetWidgetVertexColourItemHint="[UjAPI] native GetWidgetVertexColour takes item whichWidget returns integer"

GetWidgetVertexColourDestructable=GetWidgetVertexColour (Destructable)
GetWidgetVertexColourDestructable="GetWidgetVertexColourDestructable(",~whichWidget,")"
GetWidgetVertexColourDestructableHint="[UjAPI] native GetWidgetVertexColour takes destructable whichWidget returns integer"

GetWidgetTimeScaleUnit=GetWidgetTimeScale (Unit)
GetWidgetTimeScaleUnit="GetWidgetTimeScaleUnit(",~whichWidget,")"
GetWidgetTimeScaleUnitHint="[UjAPI] native GetWidgetTimeScale takes unit whichWidget returns real"

GetWidgetTimeScaleItem=GetWidgetTimeScale (Item)
GetWidgetTimeScaleItem="GetWidgetTimeScaleItem(",~whichWidget,")"
GetWidgetTimeScaleItemHint="[UjAPI] native GetWidgetTimeScale takes item whichWidget returns real"

GetWidgetTimeScaleDestructable=GetWidgetTimeScale (Destructable)
GetWidgetTimeScaleDestructable="GetWidgetTimeScaleDestructable(",~whichWidget,")"
GetWidgetTimeScaleDestructableHint="[UjAPI] native GetWidgetTimeScale takes destructable whichWidget returns real"

GetWidgetScaleUnit=GetWidgetScale (Unit)
GetWidgetScaleUnit="GetWidgetScaleUnit(",~whichWidget,")"
GetWidgetScaleUnitHint="[UjAPI] native GetWidgetScale takes unit whichWidget returns real"

GetWidgetScaleItem=GetWidgetScale (Item)
GetWidgetScaleItem="GetWidgetScaleItem(",~whichWidget,")"
GetWidgetScaleItemHint="[UjAPI] native GetWidgetScale takes item whichWidget returns real"

GetWidgetScaleDestructable=GetWidgetScale (Destructable)
GetWidgetScaleDestructable="GetWidgetScaleDestructable(",~whichWidget,")"
GetWidgetScaleDestructableHint="[UjAPI] native GetWidgetScale takes destructable whichWidget returns real"

GetWidgetFacingUnit=GetWidgetFacing (Unit)
GetWidgetFacingUnit="GetWidgetFacingUnit(",~whichWidget,")"
GetWidgetFacingUnitHint="[UjAPI] native GetWidgetFacing takes unit whichWidget returns real"

GetWidgetFacingItem=GetWidgetFacing (Item)
GetWidgetFacingItem="GetWidgetFacingItem(",~whichWidget,")"
GetWidgetFacingItemHint="[UjAPI] native GetWidgetFacing takes item whichWidget returns real"

GetWidgetFacingDestructable=GetWidgetFacing (Destructable)
GetWidgetFacingDestructable="GetWidgetFacingDestructable(",~whichWidget,")"
GetWidgetFacingDestructableHint="[UjAPI] native GetWidgetFacing takes destructable whichWidget returns real"

GetWidgetMatrixScaleXUnit=GetWidgetMatrixScaleX (Unit)
GetWidgetMatrixScaleXUnit="GetWidgetMatrixScaleXUnit(",~whichWidget,")"
GetWidgetMatrixScaleXUnitHint="[UjAPI] native GetWidgetMatrixScaleX takes unit whichWidget returns real"

GetWidgetMatrixScaleXItem=GetWidgetMatrixScaleX (Item)
GetWidgetMatrixScaleXItem="GetWidgetMatrixScaleXItem(",~whichWidget,")"
GetWidgetMatrixScaleXItemHint="[UjAPI] native GetWidgetMatrixScaleX takes item whichWidget returns real"

GetWidgetMatrixScaleXDestructable=GetWidgetMatrixScaleX (Destructable)
GetWidgetMatrixScaleXDestructable="GetWidgetMatrixScaleXDestructable(",~whichWidget,")"
GetWidgetMatrixScaleXDestructableHint="[UjAPI] native GetWidgetMatrixScaleX takes destructable whichWidget returns real"

GetWidgetMatrixScaleYUnit=GetWidgetMatrixScaleY (Unit)
GetWidgetMatrixScaleYUnit="GetWidgetMatrixScaleYUnit(",~whichWidget,")"
GetWidgetMatrixScaleYUnitHint="[UjAPI] native GetWidgetMatrixScaleY takes unit whichWidget returns real"

GetWidgetMatrixScaleYItem=GetWidgetMatrixScaleY (Item)
GetWidgetMatrixScaleYItem="GetWidgetMatrixScaleYItem(",~whichWidget,")"
GetWidgetMatrixScaleYItemHint="[UjAPI] native GetWidgetMatrixScaleY takes item whichWidget returns real"

GetWidgetMatrixScaleYDestructable=GetWidgetMatrixScaleY (Destructable)
GetWidgetMatrixScaleYDestructable="GetWidgetMatrixScaleYDestructable(",~whichWidget,")"
GetWidgetMatrixScaleYDestructableHint="[UjAPI] native GetWidgetMatrixScaleY takes destructable whichWidget returns real"

GetWidgetMatrixScaleZUnit=GetWidgetMatrixScaleZ (Unit)
GetWidgetMatrixScaleZUnit="GetWidgetMatrixScaleZUnit(",~whichWidget,")"
GetWidgetMatrixScaleZUnitHint="[UjAPI] native GetWidgetMatrixScaleZ takes unit whichWidget returns real"

GetWidgetMatrixScaleZItem=GetWidgetMatrixScaleZ (Item)
GetWidgetMatrixScaleZItem="GetWidgetMatrixScaleZItem(",~whichWidget,")"
GetWidgetMatrixScaleZItemHint="[UjAPI] native GetWidgetMatrixScaleZ takes item whichWidget returns real"

GetWidgetMatrixScaleZDestructable=GetWidgetMatrixScaleZ (Destructable)
GetWidgetMatrixScaleZDestructable="GetWidgetMatrixScaleZDestructable(",~whichWidget,")"
GetWidgetMatrixScaleZDestructableHint="[UjAPI] native GetWidgetMatrixScaleZ takes destructable whichWidget returns real"

GetWidgetYawUnit=GetWidgetYaw (Unit)
GetWidgetYawUnit="GetWidgetYawUnit(",~whichWidget,")"
GetWidgetYawUnitHint="[UjAPI] native GetWidgetYaw takes unit whichWidget returns real"

GetWidgetYawItem=GetWidgetYaw (Item)
GetWidgetYawItem="GetWidgetYawItem(",~whichWidget,")"
GetWidgetYawItemHint="[UjAPI] native GetWidgetYaw takes item whichWidget returns real"

GetWidgetYawDestructable=GetWidgetYaw (Destructable)
GetWidgetYawDestructable="GetWidgetYawDestructable(",~whichWidget,")"
GetWidgetYawDestructableHint="[UjAPI] native GetWidgetYaw takes destructable whichWidget returns real"

GetWidgetPitchUnit=GetWidgetPitch (Unit)
GetWidgetPitchUnit="GetWidgetPitchUnit(",~whichWidget,")"
GetWidgetPitchUnitHint="[UjAPI] native GetWidgetPitch takes unit whichWidget returns real"

GetWidgetPitchItem=GetWidgetPitch (Item)
GetWidgetPitchItem="GetWidgetPitchItem(",~whichWidget,")"
GetWidgetPitchItemHint="[UjAPI] native GetWidgetPitch takes item whichWidget returns real"

GetWidgetPitchDestructable=GetWidgetPitch (Destructable)
GetWidgetPitchDestructable="GetWidgetPitchDestructable(",~whichWidget,")"
GetWidgetPitchDestructableHint="[UjAPI] native GetWidgetPitch takes destructable whichWidget returns real"

GetWidgetRollUnit=GetWidgetRoll (Unit)
GetWidgetRollUnit="GetWidgetRollUnit(",~whichWidget,")"
GetWidgetRollUnitHint="[UjAPI] native GetWidgetRoll takes unit whichWidget returns real"

GetWidgetRollItem=GetWidgetRoll (Item)
GetWidgetRollItem="GetWidgetRollItem(",~whichWidget,")"
GetWidgetRollItemHint="[UjAPI] native GetWidgetRoll takes item whichWidget returns real"

GetWidgetRollDestructable=GetWidgetRoll (Destructable)
GetWidgetRollDestructable="GetWidgetRollDestructable(",~whichWidget,")"
GetWidgetRollDestructableHint="[UjAPI] native GetWidgetRoll takes destructable whichWidget returns real"

GetWidgetModelUnit=GetWidgetModel (Unit)
GetWidgetModelUnit="GetWidgetModelUnit(",~whichWidget,")"
GetWidgetModelUnitHint="[UjAPI] native GetWidgetModel takes unit whichWidget returns string"

GetWidgetModelItem=GetWidgetModel (Item)
GetWidgetModelItem="GetWidgetModelItem(",~whichWidget,")"
GetWidgetModelItemHint="[UjAPI] native GetWidgetModel takes item whichWidget returns string"

GetWidgetModelDestructable=GetWidgetModel (Destructable)
GetWidgetModelDestructable="GetWidgetModelDestructable(",~whichWidget,")"
GetWidgetModelDestructableHint="[UjAPI] native GetWidgetModel takes destructable whichWidget returns string"

GetWidgetPortraitUnit=GetWidgetPortrait (Unit)
GetWidgetPortraitUnit="GetWidgetPortraitUnit(",~whichWidget,")"
GetWidgetPortraitUnitHint="[UjAPI] native GetWidgetPortrait takes unit whichWidget returns string"

GetWidgetPortraitItem=GetWidgetPortrait (Item)
GetWidgetPortraitItem="GetWidgetPortraitItem(",~whichWidget,")"
GetWidgetPortraitItemHint="[UjAPI] native GetWidgetPortrait takes item whichWidget returns string"

GetWidgetPortraitDestructable=GetWidgetPortrait (Destructable)
GetWidgetPortraitDestructable="GetWidgetPortraitDestructable(",~whichWidget,")"
GetWidgetPortraitDestructableHint="[UjAPI] native GetWidgetPortrait takes destructable whichWidget returns string"

GetWidgetMaterialTextureUnit=GetWidgetMaterialTexture (Unit)
GetWidgetMaterialTextureUnit="GetWidgetMaterialTextureUnit(",~whichWidget,", ",~materialId,", ",~textureIndex,")"
GetWidgetMaterialTextureUnitHint="[UjAPI] native GetWidgetMaterialTexture takes unit whichWidget, integer materialId, integer textureIndex returns string"

GetWidgetMaterialTextureItem=GetWidgetMaterialTexture (Item)
GetWidgetMaterialTextureItem="GetWidgetMaterialTextureItem(",~whichWidget,", ",~materialId,", ",~textureIndex,")"
GetWidgetMaterialTextureItemHint="[UjAPI] native GetWidgetMaterialTexture takes item whichWidget, integer materialId, integer textureIndex returns string"

GetWidgetMaterialTextureDestructable=GetWidgetMaterialTexture (Destructable)
GetWidgetMaterialTextureDestructable="GetWidgetMaterialTextureDestructable(",~whichWidget,", ",~materialId,", ",~textureIndex,")"
GetWidgetMaterialTextureDestructableHint="[UjAPI] native GetWidgetMaterialTexture takes destructable whichWidget, integer materialId, integer textureIndex returns string"

GetWidgetTextureUnit=GetWidgetTexture (Unit)
GetWidgetTextureUnit="GetWidgetTextureUnit(",~whichWidget,", ",~textureIndex,")"
GetWidgetTextureUnitHint="[UjAPI] native GetWidgetTexture takes unit whichWidget, integer textureIndex returns string"

GetWidgetTextureItem=GetWidgetTexture (Item)
GetWidgetTextureItem="GetWidgetTextureItem(",~whichWidget,", ",~textureIndex,")"
GetWidgetTextureItemHint="[UjAPI] native GetWidgetTexture takes item whichWidget, integer textureIndex returns string"

GetWidgetTextureDestructable=GetWidgetTexture (Destructable)
GetWidgetTextureDestructable="GetWidgetTextureDestructable(",~whichWidget,", ",~textureIndex,")"
GetWidgetTextureDestructableHint="[UjAPI] native GetWidgetTexture takes destructable whichWidget, integer textureIndex returns string"

GetWidgetModelObjectXUnit=GetWidgetModelObjectX (Unit)
GetWidgetModelObjectXUnit="GetWidgetModelObjectXUnit(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectXUnitHint="[UjAPI] native GetWidgetModelObjectX takes unit whichWidget, string whichObject returns real"

GetWidgetModelObjectXItem=GetWidgetModelObjectX (Item)
GetWidgetModelObjectXItem="GetWidgetModelObjectXItem(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectXItemHint="[UjAPI] native GetWidgetModelObjectX takes item whichWidget, string whichObject returns real"

GetWidgetModelObjectXDestructable=GetWidgetModelObjectX (Destructable)
GetWidgetModelObjectXDestructable="GetWidgetModelObjectXDestructable(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectXDestructableHint="[UjAPI] native GetWidgetModelObjectX takes destructable whichWidget, string whichObject returns real"

GetWidgetModelObjectYUnit=GetWidgetModelObjectY (Unit)
GetWidgetModelObjectYUnit="GetWidgetModelObjectYUnit(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectYUnitHint="[UjAPI] native GetWidgetModelObjectY takes unit whichWidget, string whichObject returns real"

GetWidgetModelObjectYItem=GetWidgetModelObjectY (Item)
GetWidgetModelObjectYItem="GetWidgetModelObjectYItem(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectYItemHint="[UjAPI] native GetWidgetModelObjectY takes item whichWidget, string whichObject returns real"

GetWidgetModelObjectYDestructable=GetWidgetModelObjectY (Destructable)
GetWidgetModelObjectYDestructable="GetWidgetModelObjectYDestructable(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectYDestructableHint="[UjAPI] native GetWidgetModelObjectY takes destructable whichWidget, string whichObject returns real"

GetWidgetModelObjectZUnit=GetWidgetModelObjectZ (Unit)
GetWidgetModelObjectZUnit="GetWidgetModelObjectZUnit(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectZUnitHint="[UjAPI] native GetWidgetModelObjectZ takes unit whichWidget, string whichObject returns real"

GetWidgetModelObjectZItem=GetWidgetModelObjectZ (Item)
GetWidgetModelObjectZItem="GetWidgetModelObjectZItem(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectZItemHint="[UjAPI] native GetWidgetModelObjectZ takes item whichWidget, string whichObject returns real"

GetWidgetModelObjectZDestructable=GetWidgetModelObjectZ (Destructable)
GetWidgetModelObjectZDestructable="GetWidgetModelObjectZDestructable(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectZDestructableHint="[UjAPI] native GetWidgetModelObjectZ takes destructable whichWidget, string whichObject returns real"

GetWidgetModelObjectPositionLocUnit=GetWidgetModelObjectPositionLoc (Unit)
GetWidgetModelObjectPositionLocUnit="GetWidgetModelObjectPositionLocUnit(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectPositionLocUnitHint="[UjAPI] native GetWidgetModelObjectPositionLoc takes unit whichWidget, string whichObject returns location"

GetWidgetModelObjectPositionLocItem=GetWidgetModelObjectPositionLoc (Item)
GetWidgetModelObjectPositionLocItem="GetWidgetModelObjectPositionLocItem(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectPositionLocItemHint="[UjAPI] native GetWidgetModelObjectPositionLoc takes item whichWidget, string whichObject returns location"

GetWidgetModelObjectPositionLocDestructable=GetWidgetModelObjectPositionLoc (Destructable)
GetWidgetModelObjectPositionLocDestructable="GetWidgetModelObjectPositionLocDestructable(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectPositionLocDestructableHint="[UjAPI] native GetWidgetModelObjectPositionLoc takes destructable whichWidget, string whichObject returns location"

GetWidgetCurrentAnimationIdUnit=GetWidgetCurrentAnimationId (Unit)
GetWidgetCurrentAnimationIdUnit="GetWidgetCurrentAnimationIdUnit(",~whichWidget,")"
GetWidgetCurrentAnimationIdUnitHint="[UjAPI] native GetWidgetCurrentAnimationId takes unit whichWidget returns integer"

GetWidgetCurrentAnimationIdItem=GetWidgetCurrentAnimationId (Item)
GetWidgetCurrentAnimationIdItem="GetWidgetCurrentAnimationIdItem(",~whichWidget,")"
GetWidgetCurrentAnimationIdItemHint="[UjAPI] native GetWidgetCurrentAnimationId takes item whichWidget returns integer"

GetWidgetCurrentAnimationIdDestructable=GetWidgetCurrentAnimationId (Destructable)
GetWidgetCurrentAnimationIdDestructable="GetWidgetCurrentAnimationIdDestructable(",~whichWidget,")"
GetWidgetCurrentAnimationIdDestructableHint="[UjAPI] native GetWidgetCurrentAnimationId takes destructable whichWidget returns integer"

GetWidgetCurrentAnimationNameUnit=GetWidgetCurrentAnimationName (Unit)
GetWidgetCurrentAnimationNameUnit="GetWidgetCurrentAnimationNameUnit(",~whichWidget,")"
GetWidgetCurrentAnimationNameUnitHint="[UjAPI] native GetWidgetCurrentAnimationName takes unit whichWidget returns string"

GetWidgetCurrentAnimationNameItem=GetWidgetCurrentAnimationName (Item)
GetWidgetCurrentAnimationNameItem="GetWidgetCurrentAnimationNameItem(",~whichWidget,")"
GetWidgetCurrentAnimationNameItemHint="[UjAPI] native GetWidgetCurrentAnimationName takes item whichWidget returns string"

GetWidgetCurrentAnimationNameDestructable=GetWidgetCurrentAnimationName (Destructable)
GetWidgetCurrentAnimationNameDestructable="GetWidgetCurrentAnimationNameDestructable(",~whichWidget,")"
GetWidgetCurrentAnimationNameDestructableHint="[UjAPI] native GetWidgetCurrentAnimationName takes destructable whichWidget returns string"

GetWidgetAnimationOffsetPercentUnit=GetWidgetAnimationOffsetPercent (Unit)
GetWidgetAnimationOffsetPercentUnit="GetWidgetAnimationOffsetPercentUnit(",~whichWidget,")"
GetWidgetAnimationOffsetPercentUnitHint="[UjAPI] native GetWidgetAnimationOffsetPercent takes unit whichWidget returns real"

GetWidgetAnimationOffsetPercentItem=GetWidgetAnimationOffsetPercent (Item)
GetWidgetAnimationOffsetPercentItem="GetWidgetAnimationOffsetPercentItem(",~whichWidget,")"
GetWidgetAnimationOffsetPercentItemHint="[UjAPI] native GetWidgetAnimationOffsetPercent takes item whichWidget returns real"

GetWidgetAnimationOffsetPercentDestructable=GetWidgetAnimationOffsetPercent (Destructable)
GetWidgetAnimationOffsetPercentDestructable="GetWidgetAnimationOffsetPercentDestructable(",~whichWidget,")"
GetWidgetAnimationOffsetPercentDestructableHint="[UjAPI] native GetWidgetAnimationOffsetPercent takes destructable whichWidget returns real"

IsWidgetAnimationFrozenUnit=IsWidgetAnimationFrozen (Unit)
IsWidgetAnimationFrozenUnit="IsWidgetAnimationFrozenUnit(",~whichWidget,")"
IsWidgetAnimationFrozenUnitHint="[UjAPI] native IsWidgetAnimationFrozen takes unit whichWidget returns boolean"

IsWidgetAnimationFrozenItem=IsWidgetAnimationFrozen (Item)
IsWidgetAnimationFrozenItem="IsWidgetAnimationFrozenItem(",~whichWidget,")"
IsWidgetAnimationFrozenItemHint="[UjAPI] native IsWidgetAnimationFrozen takes item whichWidget returns boolean"

IsWidgetAnimationFrozenDestructable=IsWidgetAnimationFrozen (Destructable)
IsWidgetAnimationFrozenDestructable="IsWidgetAnimationFrozenDestructable(",~whichWidget,")"
IsWidgetAnimationFrozenDestructableHint="[UjAPI] native IsWidgetAnimationFrozen takes destructable whichWidget returns boolean"

TriggerRegisterWidgetEventUnit=TriggerRegisterWidgetEvent (Unit)
TriggerRegisterWidgetEventUnit="TriggerRegisterWidgetEventUnit(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventUnitHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, unit whichWidget, widgetevent whichWidgetEvent returns event"

TriggerRegisterWidgetEventItem=TriggerRegisterWidgetEvent (Item)
TriggerRegisterWidgetEventItem="TriggerRegisterWidgetEventItem(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventItemHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, item whichWidget, widgetevent whichWidgetEvent returns event"

TriggerRegisterWidgetEventDestructable=TriggerRegisterWidgetEvent (Destructable)
TriggerRegisterWidgetEventDestructable="TriggerRegisterWidgetEventDestructable(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventDestructableHint="[UjAPI] native TriggerRegisterWidgetEvent takes trigger whichTrigger, destructable whichWidget, widgetevent whichWidgetEvent returns event"

GetDestructableUnderCursor=GetDestructableUnderCursor
GetDestructableUnderCursor="GetDestructableUnderCursor(",")"
GetDestructableUnderCursorHint="[UjAPI] native GetDestructableUnderCursor takes nothing returns destructable"

GetDestructableStringField=GetDestructableStringField
GetDestructableStringField="GetDestructableStringField(",~whichDestructable,", ",~whichField,")"
GetDestructableStringFieldHint="[UjAPI] native GetDestructableStringField takes destructable whichDestructable, destructablestringfield whichField returns string"

SetDestructableStringField=SetDestructableStringField
SetDestructableStringField="SetDestructableStringField(",~whichDestructable,", ",~whichField,", ",~value,")"
SetDestructableStringFieldHint="[UjAPI] native SetDestructableStringField takes destructable whichDestructable, destructablestringfield whichField, string value returns boolean"

GetDestructableVariation=GetDestructableVariation
GetDestructableVariation="GetDestructableVariation(",~whichDestructable,")"
GetDestructableVariationHint="[UjAPI] native GetDestructableVariation takes destructable whichDestructable returns integer"

IsDestructableBlighted=IsDestructableBlighted
IsDestructableBlighted="IsDestructableBlighted(",~whichDestructable,")"
IsDestructableBlightedHint="[UjAPI] native IsDestructableBlighted takes destructable whichDestructable returns boolean"

GetDestructableSprite=GetDestructableSprite
GetDestructableSprite="GetDestructableSprite(",~whichDestructable,")"
GetDestructableSpriteHint="[UjAPI] native GetDestructableSprite takes destructable whichDestructable returns sprite"

GetDestructableZ=GetDestructableZ
GetDestructableZ="GetDestructableZ(",~whichDestructable,")"
GetDestructableZHint="[UjAPI] native GetDestructableZ takes destructable whichDestructable returns real"

GetDestructableHeight=GetDestructableHeight
GetDestructableHeight="GetDestructableHeight(",~whichDestructable,")"
GetDestructableHeightHint="[UjAPI] native GetDestructableHeight takes destructable whichDestructable returns real"

GetDestructablePositionLoc=GetDestructablePositionLoc
GetDestructablePositionLoc="GetDestructablePositionLoc(",~whichDestructable,")"
GetDestructablePositionLocHint="[UjAPI] native GetDestructablePositionLoc takes destructable whichDestructable returns location"

GetDestructableScreenX=GetDestructableScreenX
GetDestructableScreenX="GetDestructableScreenX(",~whichDestructable,")"
GetDestructableScreenXHint="[UjAPI] native GetDestructableScreenX takes destructable whichDestructable returns real"

GetDestructableScreenY=GetDestructableScreenY
GetDestructableScreenY="GetDestructableScreenY(",~whichDestructable,")"
GetDestructableScreenYHint="[UjAPI] native GetDestructableScreenY takes destructable whichDestructable returns real"

GetDestructablePlayerColour=GetDestructablePlayerColour
GetDestructablePlayerColour="GetDestructablePlayerColour(",~whichDestructable,")"
GetDestructablePlayerColourHint="[UjAPI] native GetDestructablePlayerColour takes destructable whichDestructable returns playercolor"

GetDestructableVertexColour=GetDestructableVertexColour
GetDestructableVertexColour="GetDestructableVertexColour(",~whichDestructable,")"
GetDestructableVertexColourHint="[UjAPI] native GetDestructableVertexColour takes destructable whichDestructable returns integer"

GetDestructableTimeScale=GetDestructableTimeScale
GetDestructableTimeScale="GetDestructableTimeScale(",~whichDestructable,")"
GetDestructableTimeScaleHint="[UjAPI] native GetDestructableTimeScale takes destructable whichDestructable returns real"

GetDestructableScale=GetDestructableScale
GetDestructableScale="GetDestructableScale(",~whichDestructable,")"
GetDestructableScaleHint="[UjAPI] native GetDestructableScale takes destructable whichDestructable returns real"

GetDestructableFacing=GetDestructableFacing
GetDestructableFacing="GetDestructableFacing(",~whichDestructable,")"
GetDestructableFacingHint="[UjAPI] native GetDestructableFacing takes destructable whichDestructable returns real"

GetDestructableMatrixScaleX=GetDestructableMatrixScaleX
GetDestructableMatrixScaleX="GetDestructableMatrixScaleX(",~whichDestructable,")"
GetDestructableMatrixScaleXHint="[UjAPI] native GetDestructableMatrixScaleX takes destructable whichDestructable returns real"

GetDestructableMatrixScaleY=GetDestructableMatrixScaleY
GetDestructableMatrixScaleY="GetDestructableMatrixScaleY(",~whichDestructable,")"
GetDestructableMatrixScaleYHint="[UjAPI] native GetDestructableMatrixScaleY takes destructable whichDestructable returns real"

GetDestructableMatrixScaleZ=GetDestructableMatrixScaleZ
GetDestructableMatrixScaleZ="GetDestructableMatrixScaleZ(",~whichDestructable,")"
GetDestructableMatrixScaleZHint="[UjAPI] native GetDestructableMatrixScaleZ takes destructable whichDestructable returns real"

GetDestructableYaw=GetDestructableYaw
GetDestructableYaw="GetDestructableYaw(",~whichDestructable,")"
GetDestructableYawHint="[UjAPI] native GetDestructableYaw takes destructable whichDestructable returns real"

GetDestructablePitch=GetDestructablePitch
GetDestructablePitch="GetDestructablePitch(",~whichDestructable,")"
GetDestructablePitchHint="[UjAPI] native GetDestructablePitch takes destructable whichDestructable returns real"

GetDestructableRoll=GetDestructableRoll
GetDestructableRoll="GetDestructableRoll(",~whichDestructable,")"
GetDestructableRollHint="[UjAPI] native GetDestructableRoll takes destructable whichDestructable returns real"

GetDestructableModel=GetDestructableModel
GetDestructableModel="GetDestructableModel(",~whichDestructable,")"
GetDestructableModelHint="[UjAPI] native GetDestructableModel takes destructable whichDestructable returns string"

GetDestructablePortrait=GetDestructablePortrait
GetDestructablePortrait="GetDestructablePortrait(",~whichDestructable,")"
GetDestructablePortraitHint="[UjAPI] native GetDestructablePortrait takes destructable whichDestructable returns string"

GetDestructableMaterialTexture=GetDestructableMaterialTexture
GetDestructableMaterialTexture="GetDestructableMaterialTexture(",~whichDestructable,", ",~materialId,", ",~textureIndex,")"
GetDestructableMaterialTextureHint="[UjAPI] native GetDestructableMaterialTexture takes destructable whichDestructable, integer materialId, integer textureIndex returns string"

GetDestructableTexture=GetDestructableTexture
GetDestructableTexture="GetDestructableTexture(",~whichDestructable,", ",~textureIndex,")"
GetDestructableTextureHint="[UjAPI] native GetDestructableTexture takes destructable whichDestructable, integer textureIndex returns string"

GetDestructableModelObjectX=GetDestructableModelObjectX
GetDestructableModelObjectX="GetDestructableModelObjectX(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectXHint="[UjAPI] native GetDestructableModelObjectX takes destructable whichDestructable, string whichObject returns real"

GetDestructableModelObjectY=GetDestructableModelObjectY
GetDestructableModelObjectY="GetDestructableModelObjectY(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectYHint="[UjAPI] native GetDestructableModelObjectY takes destructable whichDestructable, string whichObject returns real"

GetDestructableModelObjectZ=GetDestructableModelObjectZ
GetDestructableModelObjectZ="GetDestructableModelObjectZ(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectZHint="[UjAPI] native GetDestructableModelObjectZ takes destructable whichDestructable, string whichObject returns real"

GetDestructableModelObjectPositionLoc=GetDestructableModelObjectPositionLoc
GetDestructableModelObjectPositionLoc="GetDestructableModelObjectPositionLoc(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectPositionLocHint="[UjAPI] native GetDestructableModelObjectPositionLoc takes destructable whichDestructable, string whichObject returns location"

GetDestructableCurrentAnimationId=GetDestructableCurrentAnimationId
GetDestructableCurrentAnimationId="GetDestructableCurrentAnimationId(",~whichDestructable,")"
GetDestructableCurrentAnimationIdHint="[UjAPI] native GetDestructableCurrentAnimationId takes destructable whichDestructable returns integer"

GetDestructableCurrentAnimationName=GetDestructableCurrentAnimationName
GetDestructableCurrentAnimationName="GetDestructableCurrentAnimationName(",~whichDestructable,")"
GetDestructableCurrentAnimationNameHint="[UjAPI] native GetDestructableCurrentAnimationName takes destructable whichDestructable returns string"

GetDestructableAnimationOffsetPercent=GetDestructableAnimationOffsetPercent
GetDestructableAnimationOffsetPercent="GetDestructableAnimationOffsetPercent(",~whichDestructable,")"
GetDestructableAnimationOffsetPercentHint="[UjAPI] native GetDestructableAnimationOffsetPercent takes destructable whichDestructable returns real"

IsDestructableAnimationFrozen=IsDestructableAnimationFrozen
IsDestructableAnimationFrozen="IsDestructableAnimationFrozen(",~whichDestructable,")"
IsDestructableAnimationFrozenHint="[UjAPI] native IsDestructableAnimationFrozen takes destructable whichDestructable returns boolean"

GetBaseItemIntegerFieldById=GetBaseItemIntegerFieldById
GetBaseItemIntegerFieldById="GetBaseItemIntegerFieldById(",~itemTypeId,", ",~whichField,")"
GetBaseItemIntegerFieldByIdHint="[UjAPI] native GetBaseItemIntegerFieldById takes integer itemTypeId, itemintegerfield whichField returns integer"

SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI] native SetBaseItemIntegerFieldById takes integer itemTypeId, itemintegerfield whichField, integer value returns boolean"

GetBaseItemBooleanFieldById=GetBaseItemBooleanFieldById
GetBaseItemBooleanFieldById="GetBaseItemBooleanFieldById(",~itemTypeId,", ",~whichField,")"
GetBaseItemBooleanFieldByIdHint="[UjAPI] native GetBaseItemBooleanFieldById takes integer itemTypeId, itembooleanfield whichField returns boolean"

SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI] native SetBaseItemBooleanFieldById takes integer itemTypeId, itembooleanfield whichField, boolean value returns boolean"

GetBaseItemRealFieldById=GetBaseItemRealFieldById
GetBaseItemRealFieldById="GetBaseItemRealFieldById(",~itemTypeId,", ",~whichField,")"
GetBaseItemRealFieldByIdHint="[UjAPI] native GetBaseItemRealFieldById takes integer itemTypeId, itemrealfield whichField returns real"

SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI] native SetBaseItemRealFieldById takes integer itemTypeId, itemrealfield whichField, real value returns boolean"

GetBaseItemStringFieldById=GetBaseItemStringFieldById
GetBaseItemStringFieldById="GetBaseItemStringFieldById(",~itemTypeId,", ",~whichField,")"
GetBaseItemStringFieldByIdHint="[UjAPI] native GetBaseItemStringFieldById takes integer itemTypeId, itemstringfield whichField returns string"

SetBaseItemStringFieldById=SetBaseItemStringFieldById
SetBaseItemStringFieldById="SetBaseItemStringFieldById(",~itemTypeId,", ",~whichField,", ",~value,")"
SetBaseItemStringFieldByIdHint="[UjAPI] native SetBaseItemStringFieldById takes integer itemTypeId, itemstringfield whichField, string value returns boolean"

GetItemIntegerField=GetItemIntegerField
GetItemIntegerField="GetItemIntegerField(",~whichItem,", ",~whichField,")"
GetItemIntegerFieldHint="[UjAPI] native GetItemIntegerField takes item whichItem, itemintegerfield whichField returns integer"

SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemIntegerFieldHint="[UjAPI] native SetItemIntegerField takes item whichItem, itemintegerfield whichField, integer value returns boolean"

GetItemBooleanField=GetItemBooleanField
GetItemBooleanField="GetItemBooleanField(",~whichItem,", ",~whichField,")"
GetItemBooleanFieldHint="[UjAPI] native GetItemBooleanField takes item whichItem, itembooleanfield whichField returns boolean"

SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemBooleanFieldHint="[UjAPI] native SetItemBooleanField takes item whichItem, itembooleanfield whichField, boolean value returns boolean"

GetItemRealField=GetItemRealField
GetItemRealField="GetItemRealField(",~whichItem,", ",~whichField,")"
GetItemRealFieldHint="[UjAPI] native GetItemRealField takes item whichItem, itemrealfield whichField returns real"

SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemRealFieldHint="[UjAPI] native SetItemRealField takes item whichItem, itemrealfield whichField, real value returns boolean"

GetItemStringField=GetItemStringField
GetItemStringField="GetItemStringField(",~whichItem,", ",~whichField,")"
GetItemStringFieldHint="[UjAPI] native GetItemStringField takes item whichItem, itemstringfield whichField returns string"

SetItemStringField=SetItemStringField
SetItemStringField="SetItemStringField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemStringFieldHint="[UjAPI] native SetItemStringField takes item whichItem, itemstringfield whichField, string value returns boolean"

GetItemUnderCursor=GetItemUnderCursor
GetItemUnderCursor="GetItemUnderCursor(",")"
GetItemUnderCursorHint="[UjAPI] native GetItemUnderCursor takes nothing returns item"

GetItemOwner=GetItemOwner
GetItemOwner="GetItemOwner(",~whichItem,")"
GetItemOwnerHint="[UjAPI] native GetItemOwner takes item whichItem returns unit"

IsItemDroppable=IsItemDroppable
IsItemDroppable="IsItemDroppable(",~whichItem,")"
IsItemDroppableHint="[UjAPI] native IsItemDroppable takes item whichItem returns boolean"

GetItemSprite=GetItemSprite
GetItemSprite="GetItemSprite(",~whichItem,")"
GetItemSpriteHint="[UjAPI] native GetItemSprite takes item whichItem returns sprite"

GetItemZ=GetItemZ
GetItemZ="GetItemZ(",~whichItem,")"
GetItemZHint="[UjAPI] native GetItemZ takes item whichItem returns real"

GetItemHeight=GetItemHeight
GetItemHeight="GetItemHeight(",~whichItem,")"
GetItemHeightHint="[UjAPI] native GetItemHeight takes item whichItem returns real"

GetItemScreenX=GetItemScreenX
GetItemScreenX="GetItemScreenX(",~whichItem,")"
GetItemScreenXHint="[UjAPI] native GetItemScreenX takes item whichItem returns real"

GetItemScreenY=GetItemScreenY
GetItemScreenY="GetItemScreenY(",~whichItem,")"
GetItemScreenYHint="[UjAPI] native GetItemScreenY takes item whichItem returns real"

GetItemLife=GetItemLife
GetItemLife="GetItemLife(",~whichItem,")"
GetItemLifeHint="[UjAPI] native GetItemLife takes item whichItem returns real"

GetItemMaxLife=GetItemMaxLife
GetItemMaxLife="GetItemMaxLife(",~whichItem,")"
GetItemMaxLifeHint="[UjAPI] native GetItemMaxLife takes item whichItem returns real"

GetItemMaxCharges=GetItemMaxCharges
GetItemMaxCharges="GetItemMaxCharges(",~whichItem,")"
GetItemMaxChargesHint="[UjAPI] native GetItemMaxCharges takes item whichItem returns integer"

GetItemAbilityById=GetItemAbilityById
GetItemAbilityById="GetItemAbilityById(",~whichItem,", ",~abilityTypeId,")"
GetItemAbilityByIdHint="[UjAPI] native GetItemAbilityById takes item whichItem, integer abilityTypeId returns ability"

GetItemAbilityByIdEx=GetItemAbilityByIdEx
GetItemAbilityByIdEx="GetItemAbilityByIdEx(",~whichItem,", ",~abilityTypeId,", ",~index,")"
GetItemAbilityByIdExHint="[UjAPI] native GetItemAbilityByIdEx takes item whichItem, integer abilityTypeId, integer index returns ability"

GetItemAbilityByIndex=GetItemAbilityByIndex
GetItemAbilityByIndex="GetItemAbilityByIndex(",~whichItem,", ",~index,")"
GetItemAbilityByIndexHint="[UjAPI] native GetItemAbilityByIndex takes item whichItem, integer index returns ability"

ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(",~whichItem,", ",~whichAbility,")"
ItemAddAbilityHint="[UjAPI] native ItemAddAbility takes item whichItem, ability whichAbility returns boolean"

ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(",~whichItem,", ",~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI] native ItemRemoveAbility takes item whichItem, ability whichAbility returns boolean"

ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(",~whichItem,", ",~abilityTypeId,")"
ItemAddAbilityByIdHint="[UjAPI] native ItemAddAbilityById takes item whichItem, integer abilityTypeId returns boolean"

ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(",~whichItem,", ",~abilityTypeId,")"
ItemRemoveAbilityByIdHint="[UjAPI] native ItemRemoveAbilityById takes item whichItem, integer abilityTypeId returns boolean"

IsItemDisabled=IsItemDisabled
IsItemDisabled="IsItemDisabled(",~whichItem,")"
IsItemDisabledHint="[UjAPI] native IsItemDisabled takes item whichItem returns boolean"

GetItemDisableFlags=GetItemDisableFlags
GetItemDisableFlags="GetItemDisableFlags(",~whichItem,")"
GetItemDisableFlagsHint="[UjAPI] native GetItemDisableFlags takes item whichItem returns integer"

GetItemCooldown=GetItemCooldown
GetItemCooldown="GetItemCooldown(",~whichItem,")"
GetItemCooldownHint="[UjAPI] native GetItemCooldown takes item whichItem returns real"

GetItemRemainingCooldown=GetItemRemainingCooldown
GetItemRemainingCooldown="GetItemRemainingCooldown(",~whichItem,")"
GetItemRemainingCooldownHint="[UjAPI] native GetItemRemainingCooldown takes item whichItem returns real"

GetItemPlayerColour=GetItemPlayerColour
GetItemPlayerColour="GetItemPlayerColour(",~whichItem,")"
GetItemPlayerColourHint="[UjAPI] native GetItemPlayerColour takes item whichItem returns playercolor"

GetItemVertexColour=GetItemVertexColour
GetItemVertexColour="GetItemVertexColour(",~whichItem,")"
GetItemVertexColourHint="[UjAPI] native GetItemVertexColour takes item whichItem returns integer"

GetItemTimeScale=GetItemTimeScale
GetItemTimeScale="GetItemTimeScale(",~whichItem,")"
GetItemTimeScaleHint="[UjAPI] native GetItemTimeScale takes item whichItem returns real"

GetItemScale=GetItemScale
GetItemScale="GetItemScale(",~whichItem,")"
GetItemScaleHint="[UjAPI] native GetItemScale takes item whichItem returns real"

GetItemFacing=GetItemFacing
GetItemFacing="GetItemFacing(",~whichItem,")"
GetItemFacingHint="[UjAPI] native GetItemFacing takes item whichItem returns real"

GetItemMatrixScaleX=GetItemMatrixScaleX
GetItemMatrixScaleX="GetItemMatrixScaleX(",~whichItem,")"
GetItemMatrixScaleXHint="[UjAPI] native GetItemMatrixScaleX takes item whichItem returns real"

GetItemMatrixScaleY=GetItemMatrixScaleY
GetItemMatrixScaleY="GetItemMatrixScaleY(",~whichItem,")"
GetItemMatrixScaleYHint="[UjAPI] native GetItemMatrixScaleY takes item whichItem returns real"

GetItemMatrixScaleZ=GetItemMatrixScaleZ
GetItemMatrixScaleZ="GetItemMatrixScaleZ(",~whichItem,")"
GetItemMatrixScaleZHint="[UjAPI] native GetItemMatrixScaleZ takes item whichItem returns real"

GetItemYaw=GetItemYaw
GetItemYaw="GetItemYaw(",~whichItem,")"
GetItemYawHint="[UjAPI] native GetItemYaw takes item whichItem returns real"

GetItemPitch=GetItemPitch
GetItemPitch="GetItemPitch(",~whichItem,")"
GetItemPitchHint="[UjAPI] native GetItemPitch takes item whichItem returns real"

GetItemRoll=GetItemRoll
GetItemRoll="GetItemRoll(",~whichItem,")"
GetItemRollHint="[UjAPI] native GetItemRoll takes item whichItem returns real"

GetItemModel=GetItemModel
GetItemModel="GetItemModel(",~whichItem,")"
GetItemModelHint="[UjAPI] native GetItemModel takes item whichItem returns string"

GetItemPortrait=GetItemPortrait
GetItemPortrait="GetItemPortrait(",~whichItem,")"
GetItemPortraitHint="[UjAPI] native GetItemPortrait takes item whichItem returns string"

GetItemMaterialTexture=GetItemMaterialTexture
GetItemMaterialTexture="GetItemMaterialTexture(",~whichItem,", ",~materialId,", ",~textureIndex,")"
GetItemMaterialTextureHint="[UjAPI] native GetItemMaterialTexture takes item whichItem, integer materialId, integer textureIndex returns string"

GetItemTexture=GetItemTexture
GetItemTexture="GetItemTexture(",~whichItem,", ",~textureIndex,")"
GetItemTextureHint="[UjAPI] native GetItemTexture takes item whichItem, integer textureIndex returns string"

GetItemModelObjectX=GetItemModelObjectX
GetItemModelObjectX="GetItemModelObjectX(",~whichItem,", ",~whichObject,")"
GetItemModelObjectXHint="[UjAPI] native GetItemModelObjectX takes item whichItem, string whichObject returns real"

GetItemModelObjectY=GetItemModelObjectY
GetItemModelObjectY="GetItemModelObjectY(",~whichItem,", ",~whichObject,")"
GetItemModelObjectYHint="[UjAPI] native GetItemModelObjectY takes item whichItem, string whichObject returns real"

GetItemModelObjectZ=GetItemModelObjectZ
GetItemModelObjectZ="GetItemModelObjectZ(",~whichItem,", ",~whichObject,")"
GetItemModelObjectZHint="[UjAPI] native GetItemModelObjectZ takes item whichItem, string whichObject returns real"

GetItemModelObjectPositionLoc=GetItemModelObjectPositionLoc
GetItemModelObjectPositionLoc="GetItemModelObjectPositionLoc(",~whichItem,", ",~whichObject,")"
GetItemModelObjectPositionLocHint="[UjAPI] native GetItemModelObjectPositionLoc takes item whichItem, string whichObject returns location"

GetItemCurrentAnimationId=GetItemCurrentAnimationId
GetItemCurrentAnimationId="GetItemCurrentAnimationId(",~whichItem,")"
GetItemCurrentAnimationIdHint="[UjAPI] native GetItemCurrentAnimationId takes item whichItem returns integer"

GetItemCurrentAnimationName=GetItemCurrentAnimationName
GetItemCurrentAnimationName="GetItemCurrentAnimationName(",~whichItem,")"
GetItemCurrentAnimationNameHint="[UjAPI] native GetItemCurrentAnimationName takes item whichItem returns string"

GetItemAnimationOffsetPercent=GetItemAnimationOffsetPercent
GetItemAnimationOffsetPercent="GetItemAnimationOffsetPercent(",~whichItem,")"
GetItemAnimationOffsetPercentHint="[UjAPI] native GetItemAnimationOffsetPercent takes item whichItem returns real"

IsItemAnimationFrozen=IsItemAnimationFrozen
IsItemAnimationFrozen="IsItemAnimationFrozen(",~whichItem,")"
IsItemAnimationFrozenHint="[UjAPI] native IsItemAnimationFrozen takes item whichItem returns boolean"

GetTriggerItem=GetTriggerItem
GetTriggerItem="GetTriggerItem(",")"
GetTriggerItemHint="[UjAPI] native GetTriggerItem takes nothing returns item"

GetTriggerItemTargetItem=GetTriggerItemTargetItem
GetTriggerItemTargetItem="GetTriggerItemTargetItem(",")"
GetTriggerItemTargetItemHint="[UjAPI] native GetTriggerItemTargetItem takes nothing returns item"

GetTriggerItemSourceSlot=GetTriggerItemSourceSlot
GetTriggerItemSourceSlot="GetTriggerItemSourceSlot(",")"
GetTriggerItemSourceSlotHint="[UjAPI] native GetTriggerItemSourceSlot takes nothing returns integer"

GetTriggerItemTargetSlot=GetTriggerItemTargetSlot
GetTriggerItemTargetSlot="GetTriggerItemTargetSlot(",")"
GetTriggerItemTargetSlotHint="[UjAPI] native GetTriggerItemTargetSlot takes nothing returns integer"

GetAbsorbedItem=GetAbsorbedItem
GetAbsorbedItem="GetAbsorbedItem(",")"
GetAbsorbedItemHint="[UjAPI] native GetAbsorbedItem takes nothing returns item"

GetAbsorbingItem=GetAbsorbingItem
GetAbsorbingItem="GetAbsorbingItem(",")"
GetAbsorbingItemHint="[UjAPI] native GetAbsorbingItem takes nothing returns item"

GetAbsorbedItemWasAbsorbed=GetAbsorbedItemWasAbsorbed
GetAbsorbedItemWasAbsorbed="GetAbsorbedItemWasAbsorbed(",")"
GetAbsorbedItemWasAbsorbedHint="[UjAPI] native GetAbsorbedItemWasAbsorbed takes nothing returns boolean"

GetStackingItemSource=GetStackingItemSource
GetStackingItemSource="GetStackingItemSource(",")"
GetStackingItemSourceHint="[UjAPI] native GetStackingItemSource takes nothing returns item"

GetStackingItemSourcePreviousCharges=GetStackingItemSourcePreviousCharges
GetStackingItemSourcePreviousCharges="GetStackingItemSourcePreviousCharges(",")"
GetStackingItemSourcePreviousChargesHint="[UjAPI] native GetStackingItemSourcePreviousCharges takes nothing returns integer"

GetStackingItemTarget=GetStackingItemTarget
GetStackingItemTarget="GetStackingItemTarget(",")"
GetStackingItemTargetHint="[UjAPI] native GetStackingItemTarget takes nothing returns item"

GetStackingItemTargetPreviousCharges=GetStackingItemTargetPreviousCharges
GetStackingItemTargetPreviousCharges="GetStackingItemTargetPreviousCharges(",")"
GetStackingItemTargetPreviousChargesHint="[UjAPI] native GetStackingItemTargetPreviousCharges takes nothing returns integer"

GetStackingItemTargetAddedCharges=GetStackingItemTargetAddedCharges
GetStackingItemTargetAddedCharges="GetStackingItemTargetAddedCharges(",")"
GetStackingItemTargetAddedChargesHint="[UjAPI] native GetStackingItemTargetAddedCharges takes nothing returns integer"

GetUnitBaseIntegerFieldById=GetUnitBaseIntegerFieldById
GetUnitBaseIntegerFieldById="GetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseIntegerFieldByIdHint="[UjAPI] native GetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField returns integer"

SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI] native SetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField, integer value returns boolean"

GetUnitBaseBooleanFieldById=GetUnitBaseBooleanFieldById
GetUnitBaseBooleanFieldById="GetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseBooleanFieldByIdHint="[UjAPI] native GetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField returns boolean"

SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI] native SetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField, boolean value returns boolean"

GetUnitBaseRealFieldById=GetUnitBaseRealFieldById
GetUnitBaseRealFieldById="GetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseRealFieldByIdHint="[UjAPI] native GetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField returns real"

SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI] native SetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField, real value returns boolean"

GetUnitBaseStringFieldById=GetUnitBaseStringFieldById
GetUnitBaseStringFieldById="GetUnitBaseStringFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseStringFieldByIdHint="[UjAPI] native GetUnitBaseStringFieldById takes integer unitTypeId, unitstringfield whichField returns string"

SetUnitBaseStringFieldById=SetUnitBaseStringFieldById
SetUnitBaseStringFieldById="SetUnitBaseStringFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseStringFieldByIdHint="[UjAPI] native SetUnitBaseStringFieldById takes integer unitTypeId, unitstringfield whichField, string value returns boolean"

GetUnitBaseWeaponIntegerFieldById=GetUnitBaseWeaponIntegerFieldById
GetUnitBaseWeaponIntegerFieldById="GetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI] native GetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index returns integer"

SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI] native SetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value returns boolean"

GetUnitBaseWeaponBooleanFieldById=GetUnitBaseWeaponBooleanFieldById
GetUnitBaseWeaponBooleanFieldById="GetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI] native GetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index returns boolean"

SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI] native SetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"

GetUnitBaseWeaponRealFieldById=GetUnitBaseWeaponRealFieldById
GetUnitBaseWeaponRealFieldById="GetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponRealFieldByIdHint="[UjAPI] native GetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index returns real"

SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI] native SetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index, real value returns boolean"

GetUnitBaseWeaponStringFieldById=GetUnitBaseWeaponStringFieldById
GetUnitBaseWeaponStringFieldById="GetUnitBaseWeaponStringFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponStringFieldByIdHint="[UjAPI] native GetUnitBaseWeaponStringFieldById takes integer unitTypeId, unitweaponstringfield whichField, integer index returns string"

SetUnitBaseWeaponStringFieldById=SetUnitBaseWeaponStringFieldById
SetUnitBaseWeaponStringFieldById="SetUnitBaseWeaponStringFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponStringFieldByIdHint="[UjAPI] native SetUnitBaseWeaponStringFieldById takes integer unitTypeId, unitweaponstringfield whichField, integer index, string value returns boolean"

GetUnitIntegerField=GetUnitIntegerField
GetUnitIntegerField="GetUnitIntegerField(",~whichUnit,", ",~whichField,")"
GetUnitIntegerFieldHint="[UjAPI] native GetUnitIntegerField takes unit whichUnit, unitintegerfield whichField returns integer"

SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitIntegerFieldHint="[UjAPI] native SetUnitIntegerField takes unit whichUnit, unitintegerfield whichField, integer value returns boolean"

GetUnitBooleanField=GetUnitBooleanField
GetUnitBooleanField="GetUnitBooleanField(",~whichUnit,", ",~whichField,")"
GetUnitBooleanFieldHint="[UjAPI] native GetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField returns boolean"

SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitBooleanFieldHint="[UjAPI] native SetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField, boolean value returns boolean"

GetUnitRealField=GetUnitRealField
GetUnitRealField="GetUnitRealField(",~whichUnit,", ",~whichField,")"
GetUnitRealFieldHint="[UjAPI] native GetUnitRealField takes unit whichUnit, unitrealfield whichField returns real"

SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitRealFieldHint="[UjAPI] native SetUnitRealField takes unit whichUnit, unitrealfield whichField, real value returns boolean"

GetUnitStringField=GetUnitStringField
GetUnitStringField="GetUnitStringField(",~whichUnit,", ",~whichField,")"
GetUnitStringFieldHint="[UjAPI] native GetUnitStringField takes unit whichUnit, unitstringfield whichField returns string"

SetUnitStringField=SetUnitStringField
SetUnitStringField="SetUnitStringField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitStringFieldHint="[UjAPI] native SetUnitStringField takes unit whichUnit, unitstringfield whichField, string value returns boolean"

GetUnitWeaponIntegerField=GetUnitWeaponIntegerField
GetUnitWeaponIntegerField="GetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponIntegerFieldHint="[UjAPI] native GetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index returns integer"

SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI] native SetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index, integer value returns boolean"

GetUnitWeaponBooleanField=GetUnitWeaponBooleanField
GetUnitWeaponBooleanField="GetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponBooleanFieldHint="[UjAPI] native GetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index returns boolean"

SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI] native SetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"

GetUnitWeaponRealField=GetUnitWeaponRealField
GetUnitWeaponRealField="GetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponRealFieldHint="[UjAPI] native GetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index returns real"

SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponRealFieldHint="[UjAPI] native SetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index, real value returns boolean"

GetUnitWeaponStringField=GetUnitWeaponStringField
GetUnitWeaponStringField="GetUnitWeaponStringField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponStringFieldHint="[UjAPI] native GetUnitWeaponStringField takes unit whichUnit, unitweaponstringfield whichField, integer index returns string"

SetUnitWeaponStringField=SetUnitWeaponStringField
SetUnitWeaponStringField="SetUnitWeaponStringField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponStringFieldHint="[UjAPI] native SetUnitWeaponStringField takes unit whichUnit, unitweaponstringfield whichField, integer index, string value returns boolean"

GetUnitUnderCursor=GetUnitUnderCursor
GetUnitUnderCursor="GetUnitUnderCursor(",")"
GetUnitUnderCursorHint="[UjAPI] native GetUnitUnderCursor takes nothing returns unit"

GetUnitSprite=GetUnitSprite
GetUnitSprite="GetUnitSprite(",~whichUnit,")"
GetUnitSpriteHint="[UjAPI] native GetUnitSprite takes unit whichUnit returns sprite"

GetUnitScale=GetUnitScale
GetUnitScale="GetUnitScale(",~whichUnit,")"
GetUnitScaleHint="[UjAPI] native GetUnitScale takes unit whichUnit returns real"

GetUnitHeight=GetUnitHeight
GetUnitHeight="GetUnitHeight(",~whichUnit,")"
GetUnitHeightHint="[UjAPI] native GetUnitHeight takes unit whichUnit returns real"

GetUnitOverheadOffset=GetUnitOverheadOffset
GetUnitOverheadOffset="GetUnitOverheadOffset(",~whichUnit,")"
GetUnitOverheadOffsetHint="[UjAPI] native GetUnitOverheadOffset takes unit whichUnit returns real"

GetUnitScreenX=GetUnitScreenX
GetUnitScreenX="GetUnitScreenX(",~whichUnit,")"
GetUnitScreenXHint="[UjAPI] native GetUnitScreenX takes unit whichUnit returns real"

GetUnitScreenY=GetUnitScreenY
GetUnitScreenY="GetUnitScreenY(",~whichUnit,")"
GetUnitScreenYHint="[UjAPI] native GetUnitScreenY takes unit whichUnit returns real"

GetUnitSelectedCountByPlayer=GetUnitSelectedCountByPlayer
GetUnitSelectedCountByPlayer="GetUnitSelectedCountByPlayer(",~whichPlayer,")"
GetUnitSelectedCountByPlayerHint="[UjAPI] native GetUnitSelectedCountByPlayer takes player whichPlayer returns integer"

GetUnitSelected=GetUnitSelected
GetUnitSelected="GetUnitSelected(",~whichPlayer,")"
GetUnitSelectedHint="[UjAPI] native GetUnitSelected takes player whichPlayer returns unit"

GetUnitInSelectionByIndex=GetUnitInSelectionByIndex
GetUnitInSelectionByIndex="GetUnitInSelectionByIndex(",~whichPlayer,", ",~index,")"
GetUnitInSelectionByIndexHint="[UjAPI] native GetUnitInSelectionByIndex takes player whichPlayer, integer index returns unit"

GetFirstUnitInSelection=GetFirstUnitInSelection
GetFirstUnitInSelection="GetFirstUnitInSelection(",~whichPlayer,")"
GetFirstUnitInSelectionHint="[UjAPI] native GetFirstUnitInSelection takes player whichPlayer returns unit"

GetLastUnitInSelection=GetLastUnitInSelection
GetLastUnitInSelection="GetLastUnitInSelection(",~whichPlayer,")"
GetLastUnitInSelectionHint="[UjAPI] native GetLastUnitInSelection takes player whichPlayer returns unit"

IsUnitAlive=IsUnitAlive
IsUnitAlive="IsUnitAlive(",~whichUnit,")"
IsUnitAliveHint="[UjAPI] native IsUnitAlive takes unit whichUnit returns boolean"

IsUnitDead=IsUnitDead
IsUnitDead="IsUnitDead(",~whichUnit,")"
IsUnitDeadHint="[UjAPI] native IsUnitDead takes unit whichUnit returns boolean"

IsUnitIdle=IsUnitIdle
IsUnitIdle="IsUnitIdle(",~whichUnit,")"
IsUnitIdleHint="[UjAPI] native IsUnitIdle takes unit whichUnit returns boolean"

IsUnitMoving=IsUnitMoving
IsUnitMoving="IsUnitMoving(",~whichUnit,")"
IsUnitMovingHint="[UjAPI] native IsUnitMoving takes unit whichUnit returns boolean"

IsUnitStunned=IsUnitStunned
IsUnitStunned="IsUnitStunned(",~whichUnit,")"
IsUnitStunnedHint="[UjAPI] native IsUnitStunned takes unit whichUnit returns boolean"

IsUnitInvulnerable=IsUnitInvulnerable
IsUnitInvulnerable="IsUnitInvulnerable(",~whichUnit,")"
IsUnitInvulnerableHint="[UjAPI] native IsUnitInvulnerable takes unit whichUnit returns boolean"

IsUnitHero=IsUnitHero
IsUnitHero="IsUnitHero(",~whichUnit,")"
IsUnitHeroHint="[UjAPI] native IsUnitHero takes unit whichUnit returns boolean"

IsUnitTower=IsUnitTower
IsUnitTower="IsUnitTower(",~whichUnit,")"
IsUnitTowerHint="[UjAPI] native IsUnitTower takes unit whichUnit returns boolean"

IsUnitShop=IsUnitShop
IsUnitShop="IsUnitShop(",~whichUnit,")"
IsUnitShopHint="[UjAPI] native IsUnitShop takes unit whichUnit returns boolean"

IsUnitPeon=IsUnitPeon
IsUnitPeon="IsUnitPeon(",~whichUnit,")"
IsUnitPeonHint="[UjAPI] native IsUnitPeon takes unit whichUnit returns boolean"

IsUnitConstructing=IsUnitConstructing
IsUnitConstructing="IsUnitConstructing(",~whichUnit,")"
IsUnitConstructingHint="[UjAPI] native IsUnitConstructing takes unit whichUnit returns boolean"

IsUnitFlying=IsUnitFlying
IsUnitFlying="IsUnitFlying(",~whichUnit,")"
IsUnitFlyingHint="[UjAPI] native IsUnitFlying takes unit whichUnit returns boolean"

GetUnitImage=GetUnitImage
GetUnitImage="GetUnitImage(",~whichUnit,", ",~index,")"
GetUnitImageHint="[UjAPI] native GetUnitImage takes unit whichUnit, integer index returns image"

GetUnitUbersplat=GetUnitUbersplat
GetUnitUbersplat="GetUnitUbersplat(",~whichUnit,")"
GetUnitUbersplatHint="[UjAPI] native GetUnitUbersplat takes unit whichUnit returns ubersplat"

IsUnitInventoryEnabled=IsUnitInventoryEnabled
IsUnitInventoryEnabled="IsUnitInventoryEnabled(",~whichUnit,")"
IsUnitInventoryEnabledHint="[UjAPI] native IsUnitInventoryEnabled takes unit whichUnit returns boolean"

UnitInventoryGetRange=UnitInventoryGetRange
UnitInventoryGetRange="UnitInventoryGetRange(",~whichUnit,", ",~rangeType,")"
UnitInventoryGetRangeHint="[UjAPI] native UnitInventoryGetRange takes unit whichUnit, integer rangeType returns real"

IsUnitMovable=IsUnitMovable
IsUnitMovable="IsUnitMovable(",~whichUnit,", ",~checkHoldPosition,", ",~checkSleeping,")"
IsUnitMovableHint="[UjAPI] native IsUnitMovable takes unit whichUnit, boolean checkHoldPosition, boolean checkSleeping returns boolean"

IsUnitMovementEnabled=IsUnitMovementEnabled
IsUnitMovementEnabled="IsUnitMovementEnabled(",~whichUnit,")"
IsUnitMovementEnabledHint="[UjAPI] native IsUnitMovementEnabled takes unit whichUnit returns boolean"

IsUnitAttackEnabled=IsUnitAttackEnabled
IsUnitAttackEnabled="IsUnitAttackEnabled(",~whichUnit,")"
IsUnitAttackEnabledHint="[UjAPI] native IsUnitAttackEnabled takes unit whichUnit returns boolean"

IsUnitStateNormal=IsUnitStateNormal
IsUnitStateNormal="IsUnitStateNormal(",~whichUnit,", ",~additionalCheck,")"
IsUnitStateNormalHint="[UjAPI] native IsUnitStateNormal takes unit whichUnit, boolean additionalCheck returns boolean"

UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI] native UnitAddAbilityEx takes unit whichUnit, integer abilityTypeId, boolean checkForDuplicates returns boolean"

UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI] native UnitRemoveAbilityEx takes unit whichUnit, integer abilityTypeId, boolean removeDuplicates returns boolean"

CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(",~whichUnit,", ",~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI] native CountUnitAbilities takes unit whichUnit, boolean alsoCountBuffs returns integer"

CountUnitAbilitiesWithTypeId=CountUnitAbilitiesWithTypeId
CountUnitAbilitiesWithTypeId="CountUnitAbilitiesWithTypeId(",~whichUnit,", ",~alsoCountBuffs,", ",~abilityTypeId,")"
CountUnitAbilitiesWithTypeIdHint="[UjAPI] native CountUnitAbilitiesWithTypeId takes unit whichUnit, boolean alsoCountBuffs, integer abilityTypeId returns integer"

GetUnitAbility=GetUnitAbility
GetUnitAbility="GetUnitAbility(",~whichUnit,", ",~abilityTypeId,")"
GetUnitAbilityHint="[UjAPI] native GetUnitAbility takes unit whichUnit, integer abilityTypeId returns ability"

GetUnitAbilityEx=GetUnitAbilityEx
GetUnitAbilityEx="GetUnitAbilityEx(",~whichUnit,", ",~abilityTypeId,", ",~id,")"
GetUnitAbilityExHint="[UjAPI] native GetUnitAbilityEx takes unit whichUnit, integer abilityTypeId, integer id returns ability"

GetUnitAbilityByIndex=GetUnitAbilityByIndex
GetUnitAbilityByIndex="GetUnitAbilityByIndex(",~whichUnit,", ",~index,")"
GetUnitAbilityByIndexHint="[UjAPI] native GetUnitAbilityByIndex takes unit whichUnit, integer index returns ability"

IsUnitAbilityVisible=IsUnitAbilityVisible
IsUnitAbilityVisible="IsUnitAbilityVisible(",~whichUnit,", ",~abilityTypeId,")"
IsUnitAbilityVisibleHint="[UjAPI] native IsUnitAbilityVisible takes unit whichUnit, integer abilityTypeId returns boolean"

UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(",~whichUnit,", ",~whichBuff,")"
UnitAddBuffHint="[UjAPI] native UnitAddBuff takes unit whichUnit, buff whichBuff returns boolean"

UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(",~whichUnit,", ",~whichBuff,", ",~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI] native UnitAddBuffEx takes unit whichUnit, buff whichBuff, boolean checkForDuplicates returns boolean"

UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(",~whichUnit,", ",~buffTypeId,")"
UnitAddBuffByIdHint="[UjAPI] native UnitAddBuffById takes unit whichUnit, integer buffTypeId returns boolean"

UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(",~whichUnit,", ",~buffTypeId,", ",~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI] native UnitAddBuffByIdEx takes unit whichUnit, integer buffTypeId, boolean checkForDuplicates returns boolean"

CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(",~whichUnit,")"
CountUnitBuffsHint="[UjAPI] native CountUnitBuffs takes unit whichUnit returns integer"

CountUnitBuffsWithTypeId=CountUnitBuffsWithTypeId
CountUnitBuffsWithTypeId="CountUnitBuffsWithTypeId(",~whichUnit,", ",~buffTypeId,")"
CountUnitBuffsWithTypeIdHint="[UjAPI] native CountUnitBuffsWithTypeId takes unit whichUnit, integer buffTypeId returns integer"

GetUnitBuff=GetUnitBuff
GetUnitBuff="GetUnitBuff(",~whichUnit,", ",~buffTypeId,")"
GetUnitBuffHint="[UjAPI] native GetUnitBuff takes unit whichUnit, integer buffTypeId returns buff"

GetUnitBuffEx=GetUnitBuffEx
GetUnitBuffEx="GetUnitBuffEx(",~whichUnit,", ",~buffTypeId,", ",~id,")"
GetUnitBuffExHint="[UjAPI] native GetUnitBuffEx takes unit whichUnit, integer buffTypeId, integer id returns buff"

GetUnitBuffByIndex=GetUnitBuffByIndex
GetUnitBuffByIndex="GetUnitBuffByIndex(",~whichUnit,", ",~index,")"
GetUnitBuffByIndexHint="[UjAPI] native GetUnitBuffByIndex takes unit whichUnit, integer index returns buff"

GetUnitBuffLevel=GetUnitBuffLevel
GetUnitBuffLevel="GetUnitBuffLevel(",~whichUnit,", ",~buffTypeId,")"
GetUnitBuffLevelHint="[UjAPI] native GetUnitBuffLevel takes unit whichUnit, integer buffTypeId returns integer"

GetUnitItemSlots=GetUnitItemSlots
GetUnitItemSlots="GetUnitItemSlots(",~whichUnit,")"
GetUnitItemSlotsHint="[UjAPI] native GetUnitItemSlots takes unit whichUnit returns integer"

GetUnitItem=GetUnitItem
GetUnitItem="GetUnitItem(",~whichUnit,", ",~itemTypeId,")"
GetUnitItemHint="[UjAPI] native GetUnitItem takes unit whichUnit, integer itemTypeId returns item"

GetUnitItemEx=GetUnitItemEx
GetUnitItemEx="GetUnitItemEx(",~whichUnit,", ",~itemTypeId,", ",~index,")"
GetUnitItemExHint="[UjAPI] native GetUnitItemEx takes unit whichUnit, integer itemTypeId, integer index returns item"

GetUnitRemainingTimedLife=GetUnitRemainingTimedLife
GetUnitRemainingTimedLife="GetUnitRemainingTimedLife(",~whichUnit,")"
GetUnitRemainingTimedLifeHint="[UjAPI] native GetUnitRemainingTimedLife takes unit whichUnit returns real"

IsUnitGhosted=IsUnitGhosted
IsUnitGhosted="IsUnitGhosted(",~whichUnit,")"
IsUnitGhostedHint="[UjAPI] native IsUnitGhosted takes unit whichUnit returns boolean"

IsUnitSelectable=IsUnitSelectable
IsUnitSelectable="IsUnitSelectable(",~whichUnit,")"
IsUnitSelectableHint="[UjAPI] native IsUnitSelectable takes unit whichUnit returns boolean"

IsUnitTargetable=IsUnitTargetable
IsUnitTargetable="IsUnitTargetable(",~whichUnit,")"
IsUnitTargetableHint="[UjAPI] native IsUnitTargetable takes unit whichUnit returns boolean"

IsUnitTruesightImmune=IsUnitTruesightImmune
IsUnitTruesightImmune="IsUnitTruesightImmune(",~whichUnit,")"
IsUnitTruesightImmuneHint="[UjAPI] native IsUnitTruesightImmune takes unit whichUnit returns boolean"

GetUnitZ=GetUnitZ
GetUnitZ="GetUnitZ(",~whichUnit,")"
GetUnitZHint="[UjAPI] native GetUnitZ takes unit whichUnit returns real"

GetUnitDamageReduction=GetUnitDamageReduction
GetUnitDamageReduction="GetUnitDamageReduction(",~whichUnit,")"
GetUnitDamageReductionHint="[UjAPI] native GetUnitDamageReduction takes unit whichUnit returns real"

GetUnitMagicResistByType=GetUnitMagicResistByType
GetUnitMagicResistByType="GetUnitMagicResistByType(",~whichUnit,", ",~resistType,")"
GetUnitMagicResistByTypeHint="[UjAPI] native GetUnitMagicResistByType takes unit whichUnit, integer resistType returns real"

GetUnitEluneMagicResist=GetUnitEluneMagicResist
GetUnitEluneMagicResist="GetUnitEluneMagicResist(",~whichUnit,")"
GetUnitEluneMagicResistHint="[UjAPI] native GetUnitEluneMagicResist takes unit whichUnit returns real"

GetUnitRunicMagicResist=GetUnitRunicMagicResist
GetUnitRunicMagicResist="GetUnitRunicMagicResist(",~whichUnit,")"
GetUnitRunicMagicResistHint="[UjAPI] native GetUnitRunicMagicResist takes unit whichUnit returns real"

GetUnitTotalMagicResist=GetUnitTotalMagicResist
GetUnitTotalMagicResist="GetUnitTotalMagicResist(",~whichUnit,")"
GetUnitTotalMagicResistHint="[UjAPI] native GetUnitTotalMagicResist takes unit whichUnit returns real"

IsUnitFlyHeightEnabled=IsUnitFlyHeightEnabled
IsUnitFlyHeightEnabled="IsUnitFlyHeightEnabled(",~whichUnit,")"
IsUnitFlyHeightEnabledHint="[UjAPI] native IsUnitFlyHeightEnabled takes unit whichUnit returns boolean"

IsUnitGatherer=IsUnitGatherer
IsUnitGatherer="IsUnitGatherer(",~whichUnit,")"
IsUnitGathererHint="[UjAPI] native IsUnitGatherer takes unit whichUnit returns boolean"

GetUnitResourceCurrent=GetUnitResourceCurrent
GetUnitResourceCurrent="GetUnitResourceCurrent(",~whichUnit,")"
GetUnitResourceCurrentHint="[UjAPI] native GetUnitResourceCurrent takes unit whichUnit returns integer"

GetUnitResourceCapacity=GetUnitResourceCapacity
GetUnitResourceCapacity="GetUnitResourceCapacity(",~whichUnit,", ",~resourceType,")"
GetUnitResourceCapacityHint="[UjAPI] native GetUnitResourceCapacity takes unit whichUnit, integer resourceType returns integer"

GetUnitResourcePerGather=GetUnitResourcePerGather
GetUnitResourcePerGather="GetUnitResourcePerGather(",~whichUnit,", ",~resourceType,")"
GetUnitResourcePerGatherHint="[UjAPI] native GetUnitResourcePerGather takes unit whichUnit, integer resourceType returns integer"

GetUnitResourceGatherInterval=GetUnitResourceGatherInterval
GetUnitResourceGatherInterval="GetUnitResourceGatherInterval(",~whichUnit,")"
GetUnitResourceGatherIntervalHint="[UjAPI] native GetUnitResourceGatherInterval takes unit whichUnit returns real"

GetUnitCurrentSight=GetUnitCurrentSight
GetUnitCurrentSight="GetUnitCurrentSight(",~whichUnit,")"
GetUnitCurrentSightHint="[UjAPI] native GetUnitCurrentSight takes unit whichUnit returns real"

GetUnitAttackRemainingCooldown=GetUnitAttackRemainingCooldown
GetUnitAttackRemainingCooldown="GetUnitAttackRemainingCooldown(",~whichUnit,")"
GetUnitAttackRemainingCooldownHint="[UjAPI] native GetUnitAttackRemainingCooldown takes unit whichUnit returns real"

GetUnitAttackRemainingDamagePoint=GetUnitAttackRemainingDamagePoint
GetUnitAttackRemainingDamagePoint="GetUnitAttackRemainingDamagePoint(",~whichUnit,")"
GetUnitAttackRemainingDamagePointHint="[UjAPI] native GetUnitAttackRemainingDamagePoint takes unit whichUnit returns real"

GetUnitAttackRemainingBackswing=GetUnitAttackRemainingBackswing
GetUnitAttackRemainingBackswing="GetUnitAttackRemainingBackswing(",~whichUnit,")"
GetUnitAttackRemainingBackswingHint="[UjAPI] native GetUnitAttackRemainingBackswing takes unit whichUnit returns real"

UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(",~whichUnit,")"
UnitAttackCancelHint="[UjAPI] native UnitAttackCancel takes unit whichUnit returns boolean"

UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(",~whichUnit,")"
UnitAttackRestartHint="[UjAPI] native UnitAttackRestart takes unit whichUnit returns boolean"

UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(",~whichUnit,")"
UnitAttackFinishHint="[UjAPI] native UnitAttackFinish takes unit whichUnit returns boolean"

GetUnitAttackTypeByIndex=GetUnitAttackTypeByIndex
GetUnitAttackTypeByIndex="GetUnitAttackTypeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackTypeByIndexHint="[UjAPI] native GetUnitAttackTypeByIndex takes unit whichUnit, integer attackIndex returns attacktype"

GetUnitWeaponTypeByIndex=GetUnitWeaponTypeByIndex
GetUnitWeaponTypeByIndex="GetUnitWeaponTypeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitWeaponTypeByIndexHint="[UjAPI] native GetUnitWeaponTypeByIndex takes unit whichUnit, integer attackIndex returns weapontype"

GetUnitWeaponSoundByIndex=GetUnitWeaponSoundByIndex
GetUnitWeaponSoundByIndex="GetUnitWeaponSoundByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitWeaponSoundByIndexHint="[UjAPI] native GetUnitWeaponSoundByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitBaseDamageByIndex=GetUnitBaseDamageByIndex
GetUnitBaseDamageByIndex="GetUnitBaseDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBaseDamageByIndexHint="[UjAPI] native GetUnitBaseDamageByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitBonusDamageByIndex=GetUnitBonusDamageByIndex
GetUnitBonusDamageByIndex="GetUnitBonusDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBonusDamageByIndexHint="[UjAPI] native GetUnitBonusDamageByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitDamageDicesSideByIndex=GetUnitDamageDicesSideByIndex
GetUnitDamageDicesSideByIndex="GetUnitDamageDicesSideByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamageDicesSideByIndexHint="[UjAPI] native GetUnitDamageDicesSideByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitDamageDicesByIndex=GetUnitDamageDicesByIndex
GetUnitDamageDicesByIndex="GetUnitDamageDicesByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamageDicesByIndexHint="[UjAPI] native GetUnitDamageDicesByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitMinimumDamageByIndex=GetUnitMinimumDamageByIndex
GetUnitMinimumDamageByIndex="GetUnitMinimumDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitMinimumDamageByIndexHint="[UjAPI] native GetUnitMinimumDamageByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitMaximumDamageByIndex=GetUnitMaximumDamageByIndex
GetUnitMaximumDamageByIndex="GetUnitMaximumDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitMaximumDamageByIndexHint="[UjAPI] native GetUnitMaximumDamageByIndex takes unit whichUnit, integer attackIndex returns integer"

GetUnitAttackRangeByIndex=GetUnitAttackRangeByIndex
GetUnitAttackRangeByIndex="GetUnitAttackRangeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackRangeByIndexHint="[UjAPI] native GetUnitAttackRangeByIndex takes unit whichUnit, integer attackIndex returns real"

GetUnitAttackSpeed=GetUnitAttackSpeed
GetUnitAttackSpeed="GetUnitAttackSpeed(",~whichUnit,")"
GetUnitAttackSpeedHint="[UjAPI] native GetUnitAttackSpeed takes unit whichUnit returns real"

GetUnitAttackCooldownByIndex=GetUnitAttackCooldownByIndex
GetUnitAttackCooldownByIndex="GetUnitAttackCooldownByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackCooldownByIndexHint="[UjAPI] native GetUnitAttackCooldownByIndex takes unit whichUnit, integer attackIndex returns real"

GetUnitBackswingPointByIndex=GetUnitBackswingPointByIndex
GetUnitBackswingPointByIndex="GetUnitBackswingPointByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBackswingPointByIndexHint="[UjAPI] native GetUnitBackswingPointByIndex takes unit whichUnit, integer attackIndex returns real"

GetUnitDamagePointByIndex=GetUnitDamagePointByIndex
GetUnitDamagePointByIndex="GetUnitDamagePointByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamagePointByIndexHint="[UjAPI] native GetUnitDamagePointByIndex takes unit whichUnit, integer attackIndex returns real"

GetUnitAttacksEnabledIndex=GetUnitAttacksEnabledIndex
GetUnitAttacksEnabledIndex="GetUnitAttacksEnabledIndex(",~whichUnit,")"
GetUnitAttacksEnabledIndexHint="[UjAPI] native GetUnitAttacksEnabledIndex takes unit whichUnit returns integer"

GetUnitArmourType=GetUnitArmourType
GetUnitArmourType="GetUnitArmourType(",~whichUnit,")"
GetUnitArmourTypeHint="[UjAPI] native GetUnitArmourType takes unit whichUnit returns defensetype"

GetUnitArmour=GetUnitArmour
GetUnitArmour="GetUnitArmour(",~whichUnit,")"
GetUnitArmourHint="[UjAPI] native GetUnitArmour takes unit whichUnit returns real"

GetUnitTimeScale=GetUnitTimeScale
GetUnitTimeScale="GetUnitTimeScale(",~whichUnit,")"
GetUnitTimeScaleHint="[UjAPI] native GetUnitTimeScale takes unit whichUnit returns real"

GetUnitTotalMoveSpeed=GetUnitTotalMoveSpeed
GetUnitTotalMoveSpeed="GetUnitTotalMoveSpeed(",~whichUnit,")"
GetUnitTotalMoveSpeedHint="[UjAPI] native GetUnitTotalMoveSpeed takes unit whichUnit returns real"

GetUnitBaseMoveSpeed=GetUnitBaseMoveSpeed
GetUnitBaseMoveSpeed="GetUnitBaseMoveSpeed(",~whichUnit,")"
GetUnitBaseMoveSpeedHint="[UjAPI] native GetUnitBaseMoveSpeed takes unit whichUnit returns real"

GetUnitBonusMoveSpeedPercent=GetUnitBonusMoveSpeedPercent
GetUnitBonusMoveSpeedPercent="GetUnitBonusMoveSpeedPercent(",~whichUnit,")"
GetUnitBonusMoveSpeedPercentHint="[UjAPI] native GetUnitBonusMoveSpeedPercent takes unit whichUnit returns real"

GetUnitPlayerColour=GetUnitPlayerColour
GetUnitPlayerColour="GetUnitPlayerColour(",~whichUnit,")"
GetUnitPlayerColourHint="[UjAPI] native GetUnitPlayerColour takes unit whichUnit returns playercolor"

GetUnitVertexColour=GetUnitVertexColour
GetUnitVertexColour="GetUnitVertexColour(",~whichUnit,")"
GetUnitVertexColourHint="[UjAPI] native GetUnitVertexColour takes unit whichUnit returns integer"

UnitAddItemToSlot=UnitAddItemToSlot
UnitAddItemToSlot="UnitAddItemToSlot(",~whichUnit,", ",~whichItem,", ",~itemSlot,")"
UnitAddItemToSlotHint="[UjAPI] native UnitAddItemToSlot takes unit whichUnit, item whichItem, integer itemSlot returns boolean"

ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(",~whichUnit,", ",~x,", ",~y,")"
ReviveUnitHint="[UjAPI] native ReviveUnit takes unit whichUnit, real x, real y returns boolean"

ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(",~whichUnit,", ",~loc,")"
ReviveUnitLocHint="[UjAPI] native ReviveUnitLoc takes unit whichUnit, location loc returns boolean"

GetUnitCurrentLife=GetUnitCurrentLife
GetUnitCurrentLife="GetUnitCurrentLife(",~whichUnit,")"
GetUnitCurrentLifeHint="[UjAPI] native GetUnitCurrentLife takes unit whichUnit returns real"

GetUnitMaxLife=GetUnitMaxLife
GetUnitMaxLife="GetUnitMaxLife(",~whichUnit,")"
GetUnitMaxLifeHint="[UjAPI] native GetUnitMaxLife takes unit whichUnit returns real"

GetUnitLifeRegen=GetUnitLifeRegen
GetUnitLifeRegen="GetUnitLifeRegen(",~whichUnit,")"
GetUnitLifeRegenHint="[UjAPI] native GetUnitLifeRegen takes unit whichUnit returns real"

IsUnitLifeRegenEnabled=IsUnitLifeRegenEnabled
IsUnitLifeRegenEnabled="IsUnitLifeRegenEnabled(",~whichUnit,")"
IsUnitLifeRegenEnabledHint="[UjAPI] native IsUnitLifeRegenEnabled takes unit whichUnit returns boolean"

GetUnitCurrentMana=GetUnitCurrentMana
GetUnitCurrentMana="GetUnitCurrentMana(",~whichUnit,")"
GetUnitCurrentManaHint="[UjAPI] native GetUnitCurrentMana takes unit whichUnit returns real"

GetUnitMaxMana=GetUnitMaxMana
GetUnitMaxMana="GetUnitMaxMana(",~whichUnit,")"
GetUnitMaxManaHint="[UjAPI] native GetUnitMaxMana takes unit whichUnit returns real"

GetUnitManaRegen=GetUnitManaRegen
GetUnitManaRegen="GetUnitManaRegen(",~whichUnit,")"
GetUnitManaRegenHint="[UjAPI] native GetUnitManaRegen takes unit whichUnit returns real"

IsUnitManaRegenEnabled=IsUnitManaRegenEnabled
IsUnitManaRegenEnabled="IsUnitManaRegenEnabled(",~whichUnit,")"
IsUnitManaRegenEnabledHint="[UjAPI] native IsUnitManaRegenEnabled takes unit whichUnit returns boolean"

GetHeroPrimaryAttribute=GetHeroPrimaryAttribute
GetHeroPrimaryAttribute="GetHeroPrimaryAttribute(",~whichUnit,")"
GetHeroPrimaryAttributeHint="[UjAPI] native GetHeroPrimaryAttribute takes unit whichUnit returns heroattribute"

GetUnitModel=GetUnitModel
GetUnitModel="GetUnitModel(",~whichUnit,")"
GetUnitModelHint="[UjAPI] native GetUnitModel takes unit whichUnit returns string"

GetUnitPortrait=GetUnitPortrait
GetUnitPortrait="GetUnitPortrait(",~whichUnit,")"
GetUnitPortraitHint="[UjAPI] native GetUnitPortrait takes unit whichUnit returns string"

GetUnitMaterialTexture=GetUnitMaterialTexture
GetUnitMaterialTexture="GetUnitMaterialTexture(",~whichUnit,", ",~materialId,", ",~textureIndex,")"
GetUnitMaterialTextureHint="[UjAPI] native GetUnitMaterialTexture takes unit whichUnit, integer materialId, integer textureIndex returns string"

GetUnitTexture=GetUnitTexture
GetUnitTexture="GetUnitTexture(",~whichUnit,", ",~textureIndex,")"
GetUnitTextureHint="[UjAPI] native GetUnitTexture takes unit whichUnit, integer textureIndex returns string"

GetUnitCollisionType=GetUnitCollisionType
GetUnitCollisionType="GetUnitCollisionType(",~whichUnit,")"
GetUnitCollisionTypeHint="[UjAPI] native GetUnitCollisionType takes unit whichUnit returns collisiontype"

GetUnitPathingAIType=GetUnitPathingAIType
GetUnitPathingAIType="GetUnitPathingAIType(",~whichUnit,")"
GetUnitPathingAITypeHint="[UjAPI] native GetUnitPathingAIType takes unit whichUnit returns pathingaitype"

GetUnitPathingType=GetUnitPathingType
GetUnitPathingType="GetUnitPathingType(",~whichUnit,")"
GetUnitPathingTypeHint="[UjAPI] native GetUnitPathingType takes unit whichUnit returns pathingtype"

GetUnitMinimapX=GetUnitMinimapX
GetUnitMinimapX="GetUnitMinimapX(",~whichUnit,")"
GetUnitMinimapXHint="[UjAPI] native GetUnitMinimapX takes unit whichUnit returns real"

GetUnitMinimapY=GetUnitMinimapY
GetUnitMinimapY="GetUnitMinimapY(",~whichUnit,")"
GetUnitMinimapYHint="[UjAPI] native GetUnitMinimapY takes unit whichUnit returns real"

GetUnitRallyPointX=GetUnitRallyPointX
GetUnitRallyPointX="GetUnitRallyPointX(",~whichUnit,")"
GetUnitRallyPointXHint="[UjAPI] native GetUnitRallyPointX takes unit whichUnit returns real"

GetUnitRallyPointY=GetUnitRallyPointY
GetUnitRallyPointY="GetUnitRallyPointY(",~whichUnit,")"
GetUnitRallyPointYHint="[UjAPI] native GetUnitRallyPointY takes unit whichUnit returns real"

GetHeroExperienceCurrent=GetHeroExperienceCurrent
GetHeroExperienceCurrent="GetHeroExperienceCurrent(",~whichUnit,")"
GetHeroExperienceCurrentHint="[UjAPI] native GetHeroExperienceCurrent takes unit whichUnit returns integer"

GetHeroExperienceRequiredAt=GetHeroExperienceRequiredAt
GetHeroExperienceRequiredAt="GetHeroExperienceRequiredAt(",~whichUnit,", ",~level,")"
GetHeroExperienceRequiredAtHint="[UjAPI] native GetHeroExperienceRequiredAt takes unit whichUnit, integer level returns integer"

GetUnitStunCounter=GetUnitStunCounter
GetUnitStunCounter="GetUnitStunCounter(",~whichUnit,")"
GetUnitStunCounterHint="[UjAPI] native GetUnitStunCounter takes unit whichUnit returns integer"

GetUnitTarget=GetUnitTarget
GetUnitTarget="GetUnitTarget(",~whichUnit,")"
GetUnitTargetHint="[UjAPI] native GetUnitTarget takes unit whichUnit returns widget"

GetUnitTargetUnit=GetUnitTargetUnit
GetUnitTargetUnit="GetUnitTargetUnit(",~whichUnit,")"
GetUnitTargetUnitHint="[UjAPI] native GetUnitTargetUnit takes unit whichUnit returns unit"

GetUnitTargetItem=GetUnitTargetItem
GetUnitTargetItem="GetUnitTargetItem(",~whichUnit,")"
GetUnitTargetItemHint="[UjAPI] native GetUnitTargetItem takes unit whichUnit returns item"

GetUnitTargetDestructable=GetUnitTargetDestructable
GetUnitTargetDestructable="GetUnitTargetDestructable(",~whichUnit,")"
GetUnitTargetDestructableHint="[UjAPI] native GetUnitTargetDestructable takes unit whichUnit returns destructable"

MorphUnitToTypeIdEx=MorphUnitToTypeIdEx
MorphUnitToTypeIdEx="MorphUnitToTypeIdEx(",~whichUnit,", ",~unitTypeId,", ",~unitFlags,", ",~updateHealthState,", ",~updateManaState,", ",~healthStateId,", ",~manaStateId,", ",~updateScale,", ",~replaceAbilities,", ",~whichAbility,", ",~resetBuildingAnimation,")"
MorphUnitToTypeIdExHint="[UjAPI] native MorphUnitToTypeIdEx takes unit whichUnit, integer unitTypeId, integer unitFlags, boolean updateHealthState, boolean updateManaState, integer healthStateId, integer manaStateId, boolean updateScale, boolean replaceAbilities, ability whichAbility, boolean resetBuildingAnimation returns nothing"

MorphUnitToTypeId=MorphUnitToTypeId
MorphUnitToTypeId="MorphUnitToTypeId(",~whichUnit,", ",~unitTypeId,")"
MorphUnitToTypeIdHint="[UjAPI] native MorphUnitToTypeId takes unit whichUnit, integer unitTypeId returns nothing"

GetUnitModelObjectX=GetUnitModelObjectX
GetUnitModelObjectX="GetUnitModelObjectX(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectXHint="[UjAPI] native GetUnitModelObjectX takes unit whichUnit, string whichObject returns real"

GetUnitModelObjectY=GetUnitModelObjectY
GetUnitModelObjectY="GetUnitModelObjectY(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectYHint="[UjAPI] native GetUnitModelObjectY takes unit whichUnit, string whichObject returns real"

GetUnitModelObjectZ=GetUnitModelObjectZ
GetUnitModelObjectZ="GetUnitModelObjectZ(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectZHint="[UjAPI] native GetUnitModelObjectZ takes unit whichUnit, string whichObject returns real"

GetUnitModelObjectPositionLoc=GetUnitModelObjectPositionLoc
GetUnitModelObjectPositionLoc="GetUnitModelObjectPositionLoc(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectPositionLocHint="[UjAPI] native GetUnitModelObjectPositionLoc takes unit whichUnit, string whichObject returns location"

GetUnitCurrentAnimationId=GetUnitCurrentAnimationId
GetUnitCurrentAnimationId="GetUnitCurrentAnimationId(",~whichUnit,")"
GetUnitCurrentAnimationIdHint="[UjAPI] native GetUnitCurrentAnimationId takes unit whichUnit returns integer"

GetUnitCurrentAnimationName=GetUnitCurrentAnimationName
GetUnitCurrentAnimationName="GetUnitCurrentAnimationName(",~whichUnit,")"
GetUnitCurrentAnimationNameHint="[UjAPI] native GetUnitCurrentAnimationName takes unit whichUnit returns string"

GetUnitAnimationOffsetPercent=GetUnitAnimationOffsetPercent
GetUnitAnimationOffsetPercent="GetUnitAnimationOffsetPercent(",~whichUnit,")"
GetUnitAnimationOffsetPercentHint="[UjAPI] native GetUnitAnimationOffsetPercent takes unit whichUnit returns real"

IsUnitAnimationFrozen=IsUnitAnimationFrozen
IsUnitAnimationFrozen="IsUnitAnimationFrozen(",~whichUnit,")"
IsUnitAnimationFrozenHint="[UjAPI] native IsUnitAnimationFrozen takes unit whichUnit returns boolean"

IsUnitAutoOrientationEnabled=IsUnitAutoOrientationEnabled
IsUnitAutoOrientationEnabled="IsUnitAutoOrientationEnabled(",~whichUnit,")"
IsUnitAutoOrientationEnabledHint="[UjAPI] native IsUnitAutoOrientationEnabled takes unit whichUnit returns boolean"

GetUnitYaw=GetUnitYaw
GetUnitYaw="GetUnitYaw(",~whichUnit,")"
GetUnitYawHint="[UjAPI] native GetUnitYaw takes unit whichUnit returns real"

GetUnitPitch=GetUnitPitch
GetUnitPitch="GetUnitPitch(",~whichUnit,")"
GetUnitPitchHint="[UjAPI] native GetUnitPitch takes unit whichUnit returns real"

GetUnitRoll=GetUnitRoll
GetUnitRoll="GetUnitRoll(",~whichUnit,")"
GetUnitRollHint="[UjAPI] native GetUnitRoll takes unit whichUnit returns real"

GetUnitMatrixScaleX=GetUnitMatrixScaleX
GetUnitMatrixScaleX="GetUnitMatrixScaleX(",~whichUnit,")"
GetUnitMatrixScaleXHint="[UjAPI] native GetUnitMatrixScaleX takes unit whichUnit returns real"

GetUnitMatrixScaleY=GetUnitMatrixScaleY
GetUnitMatrixScaleY="GetUnitMatrixScaleY(",~whichUnit,")"
GetUnitMatrixScaleYHint="[UjAPI] native GetUnitMatrixScaleY takes unit whichUnit returns real"

GetUnitMatrixScaleZ=GetUnitMatrixScaleZ
GetUnitMatrixScaleZ="GetUnitMatrixScaleZ(",~whichUnit,")"
GetUnitMatrixScaleZHint="[UjAPI] native GetUnitMatrixScaleZ takes unit whichUnit returns real"

CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateBuildingHint="[UjAPI] native CreateBuilding takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,", ",~isAutoBuild,", ",~workersCanAssist,")"
CreateBuildingExHint="[UjAPI] native CreateBuildingEx takes player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist returns unit"

UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(",~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI] native UnitGetConstructionProgress takes unit whichUnit returns real"

UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(",~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI] native UnitGetConstructionRemainingTime takes unit whichUnit returns real"

UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(",~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI] native UnitGetUpgradeProgress takes unit whichUnit returns real"

UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(",~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI] native UnitGetUpgradeRemainingTime takes unit whichUnit returns real"

UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(",~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI] native UnitGetTrainingProgress takes unit whichUnit returns real"

UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(",~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI] native UnitGetTrainingRemainingTime takes unit whichUnit returns real"

UnitGetTrainingTypeIdAt=UnitGetTrainingTypeIdAt
UnitGetTrainingTypeIdAt="UnitGetTrainingTypeIdAt(",~whichUnit,", ",~index,")"
UnitGetTrainingTypeIdAtHint="[UjAPI] native UnitGetTrainingTypeIdAt takes unit whichUnit, integer index returns integer"

UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(",~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI] native UnitGetResearchProgress takes unit whichUnit returns real"

UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(",~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI] native UnitGetResearchRemainingTime takes unit whichUnit returns real"

UnitGetResearchTypeIdAt=UnitGetResearchTypeIdAt
UnitGetResearchTypeIdAt="UnitGetResearchTypeIdAt(",~whichUnit,", ",~index,")"
UnitGetResearchTypeIdAtHint="[UjAPI] native UnitGetResearchTypeIdAt takes unit whichUnit, integer index returns integer"

CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateIllusionHint="[UjAPI] native CreateIllusion takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"

CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(",~whichPlayer,", ",~unitTypeId,", ",~whichLocation,", ",~facing,")"
CreateIllusionAtLocHint="[UjAPI] native CreateIllusionAtLoc takes player whichPlayer, integer unitTypeId, location whichLocation, real facing returns unit"

CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(",~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI] native CreateIllusionFromUnit takes unit whichUnit returns unit"

CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(",~whichUnit,", ",~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI] native CreateIllusionFromUnitEx takes unit whichUnit, boolean copyPassives returns unit"

GetIllusionDamageDealt=GetIllusionDamageDealt
GetIllusionDamageDealt="GetIllusionDamageDealt(",~whichUnit,")"
GetIllusionDamageDealtHint="[UjAPI] native GetIllusionDamageDealt takes unit whichUnit returns real"

GetIllusionDamageReceived=GetIllusionDamageReceived
GetIllusionDamageReceived="GetIllusionDamageReceived(",~whichUnit,")"
GetIllusionDamageReceivedHint="[UjAPI] native GetIllusionDamageReceived takes unit whichUnit returns real"

QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(",~whichUnit,", ",~orderId,")"
QueueImmediateOrderByIdHint="[UjAPI] native QueueImmediateOrderById takes unit whichUnit, integer orderId returns boolean"

QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(",~whichUnit,", ",~orderId,", ",~x,", ",~y,")"
QueuePointOrderByIdHint="[UjAPI] native QueuePointOrderById takes unit whichUnit, integer orderId, real x, real y returns boolean"

QueueTargetOrderByIdUnit=QueueTargetOrderById (Unit)
QueueTargetOrderByIdUnit="QueueTargetOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdUnitHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget returns boolean"

QueueTargetOrderByIdItem=QueueTargetOrderById (Item)
QueueTargetOrderByIdItem="QueueTargetOrderByIdItem(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdItemHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, item targetWidget returns boolean"

QueueTargetOrderByIdDestructable=QueueTargetOrderById (Destructable)
QueueTargetOrderByIdDestructable="QueueTargetOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,")"
QueueTargetOrderByIdDestructableHint="[UjAPI] native QueueTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget returns boolean"

QueueInstantPointOrderByIdUnit=QueueInstantPointOrderById (Unit)
QueueInstantPointOrderByIdUnit="QueueInstantPointOrderByIdUnit(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdUnitHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, unit instantTargetWidget returns boolean"

QueueInstantPointOrderByIdItem=QueueInstantPointOrderById (Item)
QueueInstantPointOrderByIdItem="QueueInstantPointOrderByIdItem(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdItemHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, item instantTargetWidget returns boolean"

QueueInstantPointOrderByIdDestructable=QueueInstantPointOrderById (Destructable)
QueueInstantPointOrderByIdDestructable="QueueInstantPointOrderByIdDestructable(",~whichUnit,", ",~orderId,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdDestructableHint="[UjAPI] native QueueInstantPointOrderById takes unit whichUnit, integer orderId, real x, real y, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitUnit=QueueInstantTargetOrderById (Unit, Unit)
QueueInstantTargetOrderByIdUnitUnit="QueueInstantTargetOrderByIdUnitUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemUnit=QueueInstantTargetOrderById (Item, Unit)
QueueInstantTargetOrderByIdItemUnit="QueueInstantTargetOrderByIdItemUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableUnit=QueueInstantTargetOrderById (Destructable, Unit)
QueueInstantTargetOrderByIdDestructableUnit="QueueInstantTargetOrderByIdDestructableUnit(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableUnitHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, unit instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitItem=QueueInstantTargetOrderById (Unit, Item)
QueueInstantTargetOrderByIdUnitItem="QueueInstantTargetOrderByIdUnitItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemItem=QueueInstantTargetOrderById (Item, Item)
QueueInstantTargetOrderByIdItemItem="QueueInstantTargetOrderByIdItemItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableItem=QueueInstantTargetOrderById (Destructable, Item)
QueueInstantTargetOrderByIdDestructableItem="QueueInstantTargetOrderByIdDestructableItem(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableItemHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, item instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdUnitDestructable=QueueInstantTargetOrderById (Unit, Destructable)
QueueInstantTargetOrderByIdUnitDestructable="QueueInstantTargetOrderByIdUnitDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdUnitDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, unit targetWidget, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdItemDestructable=QueueInstantTargetOrderById (Item, Destructable)
QueueInstantTargetOrderByIdItemDestructable="QueueInstantTargetOrderByIdItemDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdItemDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, item targetWidget, destructable instantTargetWidget returns boolean"

QueueInstantTargetOrderByIdDestructableDestructable=QueueInstantTargetOrderById (Destructable, Destructable)
QueueInstantTargetOrderByIdDestructableDestructable="QueueInstantTargetOrderByIdDestructableDestructable(",~whichUnit,", ",~orderId,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdDestructableDestructableHint="[UjAPI] native QueueInstantTargetOrderById takes unit whichUnit, integer orderId, destructable targetWidget, destructable instantTargetWidget returns boolean"

QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(",~whichPeon,", ",~unitTypeId,", ",~x,", ",~y,")"
QueueBuildOrderByIdHint="[UjAPI] native QueueBuildOrderById takes unit whichPeon, integer unitTypeId, real x, real y returns boolean"

QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI] native QueueNeutralImmediateOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId returns boolean"

QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~x,", ",~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI] native QueueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, real x, real y returns boolean"

QueueNeutralTargetOrderByIdUnit=QueueNeutralTargetOrderById (Unit)
QueueNeutralTargetOrderByIdUnit="QueueNeutralTargetOrderByIdUnit(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdUnitHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, unit target returns boolean"

QueueNeutralTargetOrderByIdItem=QueueNeutralTargetOrderById (Item)
QueueNeutralTargetOrderByIdItem="QueueNeutralTargetOrderByIdItem(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdItemHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, item target returns boolean"

QueueNeutralTargetOrderByIdDestructable=QueueNeutralTargetOrderById (Destructable)
QueueNeutralTargetOrderByIdDestructable="QueueNeutralTargetOrderByIdDestructable(",~whichPlayer,", ",~neutralStructure,", ",~unitTypeId,", ",~target,")"
QueueNeutralTargetOrderByIdDestructableHint="[UjAPI] native QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitTypeId, destructable target returns boolean"

GetUnitOrderCount=GetUnitOrderCount
GetUnitOrderCount="GetUnitOrderCount(",~whichUnit,")"
GetUnitOrderCountHint="[UjAPI] native GetUnitOrderCount takes unit whichUnit returns integer"

GetUnitOrderByIndex=GetUnitOrderByIndex
GetUnitOrderByIndex="GetUnitOrderByIndex(",~whichUnit,", ",~index,")"
GetUnitOrderByIndexHint="[UjAPI] native GetUnitOrderByIndex takes unit whichUnit, integer index returns orderhandle"

GetUnitOrderByOrderId=GetUnitOrderByOrderId
GetUnitOrderByOrderId="GetUnitOrderByOrderId(",~whichUnit,", ",~orderId,", ",~index,")"
GetUnitOrderByOrderIdHint="[UjAPI] native GetUnitOrderByOrderId takes unit whichUnit, integer orderId, integer index returns orderhandle"

GetUnitOrderIdByIndex=GetUnitOrderIdByIndex
GetUnitOrderIdByIndex="GetUnitOrderIdByIndex(",~whichUnit,", ",~index,")"
GetUnitOrderIdByIndexHint="[UjAPI] native GetUnitOrderIdByIndex takes unit whichUnit, integer index returns integer"

UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(",~whichUnit,", ",~index,")"
UnitRemoveOrderByIndexHint="[UjAPI] native UnitRemoveOrderByIndex takes unit whichUnit, integer index returns boolean"

UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(",~whichUnit,", ",~orderId,", ",~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI] native UnitRemoveOrderByOrderId takes unit whichUnit, integer orderId, boolean eraseAllSimilar returns boolean"

GetTriggerOrder=GetTriggerOrder
GetTriggerOrder="GetTriggerOrder(",")"
GetTriggerOrderHint="[UjAPI] native GetTriggerOrder takes nothing returns orderhandle"

OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(",~whichOrder,")"
OrderGetNextHint="[UjAPI] native OrderGetNext takes orderhandle whichOrder returns orderhandle"

OrderGetId=OrderGetId
OrderGetId="OrderGetId(",~whichOrder,")"
OrderGetIdHint="[UjAPI] native OrderGetId takes orderhandle whichOrder returns integer"

OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(",~whichOrder,")"
OrderGetTargetXHint="[UjAPI] native OrderGetTargetX takes orderhandle whichOrder returns real"

OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(",~whichOrder,")"
OrderGetTargetYHint="[UjAPI] native OrderGetTargetY takes orderhandle whichOrder returns real"

OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(",~whichOrder,")"
OrderGetTargetLocHint="[UjAPI] native OrderGetTargetLoc takes orderhandle whichOrder returns location"

OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(",~whichOrder,")"
OrderGetSourceXHint="[UjAPI] native OrderGetSourceX takes orderhandle whichOrder returns real"

OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(",~whichOrder,")"
OrderGetSourceYHint="[UjAPI] native OrderGetSourceY takes orderhandle whichOrder returns real"

OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(",~whichOrder,")"
OrderGetSourceLocHint="[UjAPI] native OrderGetSourceLoc takes orderhandle whichOrder returns location"

OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(",~whichOrder,")"
OrderGetTargetHint="[UjAPI] native OrderGetTarget takes orderhandle whichOrder returns widget"

OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(",~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI] native OrderGetTargetDestructable takes orderhandle whichOrder returns destructable"

OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(",~whichOrder,")"
OrderGetTargetItemHint="[UjAPI] native OrderGetTargetItem takes orderhandle whichOrder returns item"

OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(",~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI] native OrderGetTargetUnit takes orderhandle whichOrder returns unit"

CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(",~projectileTypeId,")"
CreateProjectileHint="[UjAPI] native CreateProjectile takes integer projectileTypeId returns projectile"

CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(",~owner,", ",~projectileTypeId,", ",~attackIndex,")"
CreateProjectileExHint="[UjAPI] native CreateProjectileEx takes unit owner, integer projectileTypeId, integer attackIndex returns projectile"

GetProjectileSprite=GetProjectileSprite
GetProjectileSprite="GetProjectileSprite(",~whichProjectile,")"
GetProjectileSpriteHint="[UjAPI] native GetProjectileSprite takes projectile whichProjectile returns sprite"

GetProjectileTypeId=GetProjectileTypeId
GetProjectileTypeId="GetProjectileTypeId(",~whichProjectile,")"
GetProjectileTypeIdHint="[UjAPI] native GetProjectileTypeId takes projectile whichProjectile returns integer"

IsProjectileType=IsProjectileType
IsProjectileType="IsProjectileType(",~whichProjectile,", ",~whichType,")"
IsProjectileTypeHint="[UjAPI] native IsProjectileType takes projectile whichProjectile, projectiletype whichType returns boolean"

IsProjectileAlive=IsProjectileAlive
IsProjectileAlive="IsProjectileAlive(",~whichProjectile,")"
IsProjectileAliveHint="[UjAPI] native IsProjectileAlive takes projectile whichProjectile returns boolean"

IsProjectileVisible=IsProjectileVisible
IsProjectileVisible="IsProjectileVisible(",~whichProjectile,")"
IsProjectileVisibleHint="[UjAPI] native IsProjectileVisible takes projectile whichProjectile returns boolean"

GetProjectileX=GetProjectileX
GetProjectileX="GetProjectileX(",~whichProjectile,")"
GetProjectileXHint="[UjAPI] native GetProjectileX takes projectile whichProjectile returns real"

GetProjectileY=GetProjectileY
GetProjectileY="GetProjectileY(",~whichProjectile,")"
GetProjectileYHint="[UjAPI] native GetProjectileY takes projectile whichProjectile returns real"

GetProjectileZ=GetProjectileZ
GetProjectileZ="GetProjectileZ(",~whichProjectile,")"
GetProjectileZHint="[UjAPI] native GetProjectileZ takes projectile whichProjectile returns real"

GetProjectileScreenX=GetProjectileScreenX
GetProjectileScreenX="GetProjectileScreenX(",~whichProjectile,")"
GetProjectileScreenXHint="[UjAPI] native GetProjectileScreenX takes projectile whichProjectile returns real"

GetProjectileScreenY=GetProjectileScreenY
GetProjectileScreenY="GetProjectileScreenY(",~whichProjectile,")"
GetProjectileScreenYHint="[UjAPI] native GetProjectileScreenY takes projectile whichProjectile returns real"

GetProjectileHeight=GetProjectileHeight
GetProjectileHeight="GetProjectileHeight(",~whichProjectile,")"
GetProjectileHeightHint="[UjAPI] native GetProjectileHeight takes projectile whichProjectile returns real"

GetProjectilePositionLoc=GetProjectilePositionLoc
GetProjectilePositionLoc="GetProjectilePositionLoc(",~whichProjectile,")"
GetProjectilePositionLocHint="[UjAPI] native GetProjectilePositionLoc takes projectile whichProjectile returns location"

GetProjectileScale=GetProjectileScale
GetProjectileScale="GetProjectileScale(",~whichProjectile,")"
GetProjectileScaleHint="[UjAPI] native GetProjectileScale takes projectile whichProjectile returns real"

GetProjectileTimeScale=GetProjectileTimeScale
GetProjectileTimeScale="GetProjectileTimeScale(",~whichProjectile,")"
GetProjectileTimeScaleHint="[UjAPI] native GetProjectileTimeScale takes projectile whichProjectile returns real"

GetProjectilePlayerColour=GetProjectilePlayerColour
GetProjectilePlayerColour="GetProjectilePlayerColour(",~whichProjectile,")"
GetProjectilePlayerColourHint="[UjAPI] native GetProjectilePlayerColour takes projectile whichProjectile returns playercolor"

GetProjectileColour=GetProjectileColour
GetProjectileColour="GetProjectileColour(",~whichProjectile,")"
GetProjectileColourHint="[UjAPI] native GetProjectileColour takes projectile whichProjectile returns integer"

GetProjectileMatrixScaleX=GetProjectileMatrixScaleX
GetProjectileMatrixScaleX="GetProjectileMatrixScaleX(",~whichProjectile,")"
GetProjectileMatrixScaleXHint="[UjAPI] native GetProjectileMatrixScaleX takes projectile whichProjectile returns real"

GetProjectileMatrixScaleY=GetProjectileMatrixScaleY
GetProjectileMatrixScaleY="GetProjectileMatrixScaleY(",~whichProjectile,")"
GetProjectileMatrixScaleYHint="[UjAPI] native GetProjectileMatrixScaleY takes projectile whichProjectile returns real"

GetProjectileMatrixScaleZ=GetProjectileMatrixScaleZ
GetProjectileMatrixScaleZ="GetProjectileMatrixScaleZ(",~whichProjectile,")"
GetProjectileMatrixScaleZHint="[UjAPI] native GetProjectileMatrixScaleZ takes projectile whichProjectile returns real"

GetProjectileYaw=GetProjectileYaw
GetProjectileYaw="GetProjectileYaw(",~whichProjectile,")"
GetProjectileYawHint="[UjAPI] native GetProjectileYaw takes projectile whichProjectile returns real"

GetProjectileFacing=GetProjectileFacing
GetProjectileFacing="GetProjectileFacing(",~whichProjectile,")"
GetProjectileFacingHint="[UjAPI] native GetProjectileFacing takes projectile whichProjectile returns real"

GetProjectilePitch=GetProjectilePitch
GetProjectilePitch="GetProjectilePitch(",~whichProjectile,")"
GetProjectilePitchHint="[UjAPI] native GetProjectilePitch takes projectile whichProjectile returns real"

GetProjectileRoll=GetProjectileRoll
GetProjectileRoll="GetProjectileRoll(",~whichProjectile,")"
GetProjectileRollHint="[UjAPI] native GetProjectileRoll takes projectile whichProjectile returns real"

GetProjectileMaterialTexture=GetProjectileMaterialTexture
GetProjectileMaterialTexture="GetProjectileMaterialTexture(",~whichProjectile,", ",~materialId,", ",~textureIndex,")"
GetProjectileMaterialTextureHint="[UjAPI] native GetProjectileMaterialTexture takes projectile whichProjectile, integer materialId, integer textureIndex returns string"

GetProjectileTexture=GetProjectileTexture
GetProjectileTexture="GetProjectileTexture(",~whichProjectile,", ",~textureIndex,")"
GetProjectileTextureHint="[UjAPI] native GetProjectileTexture takes projectile whichProjectile, integer textureIndex returns string"

GetProjectileModel=GetProjectileModel
GetProjectileModel="GetProjectileModel(",~whichProjectile,")"
GetProjectileModelHint="[UjAPI] native GetProjectileModel takes projectile whichProjectile returns string"

GetProjectileModelObjectX=GetProjectileModelObjectX
GetProjectileModelObjectX="GetProjectileModelObjectX(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectXHint="[UjAPI] native GetProjectileModelObjectX takes projectile whichProjectile, string whichObject returns real"

GetProjectileModelObjectY=GetProjectileModelObjectY
GetProjectileModelObjectY="GetProjectileModelObjectY(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectYHint="[UjAPI] native GetProjectileModelObjectY takes projectile whichProjectile, string whichObject returns real"

GetProjectileModelObjectZ=GetProjectileModelObjectZ
GetProjectileModelObjectZ="GetProjectileModelObjectZ(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectZHint="[UjAPI] native GetProjectileModelObjectZ takes projectile whichProjectile, string whichObject returns real"

GetProjectileModelObjectPositionLoc=GetProjectileModelObjectPositionLoc
GetProjectileModelObjectPositionLoc="GetProjectileModelObjectPositionLoc(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectPositionLocHint="[UjAPI] native GetProjectileModelObjectPositionLoc takes projectile whichProjectile, string whichObject returns location"

GetProjectileCurrentAnimationId=GetProjectileCurrentAnimationId
GetProjectileCurrentAnimationId="GetProjectileCurrentAnimationId(",~whichProjectile,")"
GetProjectileCurrentAnimationIdHint="[UjAPI] native GetProjectileCurrentAnimationId takes projectile whichProjectile returns integer"

GetProjectileCurrentAnimationName=GetProjectileCurrentAnimationName
GetProjectileCurrentAnimationName="GetProjectileCurrentAnimationName(",~whichProjectile,")"
GetProjectileCurrentAnimationNameHint="[UjAPI] native GetProjectileCurrentAnimationName takes projectile whichProjectile returns string"

GetProjectileAnimationOffsetPercent=GetProjectileAnimationOffsetPercent
GetProjectileAnimationOffsetPercent="GetProjectileAnimationOffsetPercent(",~whichProjectile,")"
GetProjectileAnimationOffsetPercentHint="[UjAPI] native GetProjectileAnimationOffsetPercent takes projectile whichProjectile returns real"

IsProjectileAnimationFrozen=IsProjectileAnimationFrozen
IsProjectileAnimationFrozen="IsProjectileAnimationFrozen(",~whichProjectile,")"
IsProjectileAnimationFrozenHint="[UjAPI] native IsProjectileAnimationFrozen takes projectile whichProjectile returns boolean"

GetProjectileSource=GetProjectileSource
GetProjectileSource="GetProjectileSource(",~whichProjectile,")"
GetProjectileSourceHint="[UjAPI] native GetProjectileSource takes projectile whichProjectile returns unit"

GetProjectileSourceAbility=GetProjectileSourceAbility
GetProjectileSourceAbility="GetProjectileSourceAbility(",~whichProjectile,")"
GetProjectileSourceAbilityHint="[UjAPI] native GetProjectileSourceAbility takes projectile whichProjectile returns ability"

GetProjectileTargetX=GetProjectileTargetX
GetProjectileTargetX="GetProjectileTargetX(",~whichProjectile,")"
GetProjectileTargetXHint="[UjAPI] native GetProjectileTargetX takes projectile whichProjectile returns real"

GetProjectileTargetY=GetProjectileTargetY
GetProjectileTargetY="GetProjectileTargetY(",~whichProjectile,")"
GetProjectileTargetYHint="[UjAPI] native GetProjectileTargetY takes projectile whichProjectile returns real"

GetProjectileTargetZ=GetProjectileTargetZ
GetProjectileTargetZ="GetProjectileTargetZ(",~whichProjectile,")"
GetProjectileTargetZHint="[UjAPI] native GetProjectileTargetZ takes projectile whichProjectile returns real"

GetProjectileTargetPositionLoc=GetProjectileTargetPositionLoc
GetProjectileTargetPositionLoc="GetProjectileTargetPositionLoc(",~whichProjectile,")"
GetProjectileTargetPositionLocHint="[UjAPI] native GetProjectileTargetPositionLoc takes projectile whichProjectile returns location"

GetProjectileTarget=GetProjectileTarget
GetProjectileTarget="GetProjectileTarget(",~whichProjectile,")"
GetProjectileTargetHint="[UjAPI] native GetProjectileTarget takes projectile whichProjectile returns widget"

GetProjectileTargetUnit=GetProjectileTargetUnit
GetProjectileTargetUnit="GetProjectileTargetUnit(",~whichProjectile,")"
GetProjectileTargetUnitHint="[UjAPI] native GetProjectileTargetUnit takes projectile whichProjectile returns unit"

GetProjectileTargetItem=GetProjectileTargetItem
GetProjectileTargetItem="GetProjectileTargetItem(",~whichProjectile,")"
GetProjectileTargetItemHint="[UjAPI] native GetProjectileTargetItem takes projectile whichProjectile returns item"

GetProjectileTargetDestructable=GetProjectileTargetDestructable
GetProjectileTargetDestructable="GetProjectileTargetDestructable(",~whichProjectile,")"
GetProjectileTargetDestructableHint="[UjAPI] native GetProjectileTargetDestructable takes projectile whichProjectile returns destructable"

GetProjectileAttackType=GetProjectileAttackType
GetProjectileAttackType="GetProjectileAttackType(",~whichProjectile,")"
GetProjectileAttackTypeHint="[UjAPI] native GetProjectileAttackType takes projectile whichProjectile returns attacktype"

GetProjectileDamage=GetProjectileDamage
GetProjectileDamage="GetProjectileDamage(",~whichProjectile,", ",~index,")"
GetProjectileDamageHint="[UjAPI] native GetProjectileDamage takes projectile whichProjectile, integer index returns real"

GetProjectileAreaOfEffectFullDamage=GetProjectileAreaOfEffectFullDamage
GetProjectileAreaOfEffectFullDamage="GetProjectileAreaOfEffectFullDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectFullDamageHint="[UjAPI] native GetProjectileAreaOfEffectFullDamage takes projectile whichProjectile returns real"

GetProjectileAreaOfEffectMediumDamage=GetProjectileAreaOfEffectMediumDamage
GetProjectileAreaOfEffectMediumDamage="GetProjectileAreaOfEffectMediumDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageHint="[UjAPI] native GetProjectileAreaOfEffectMediumDamage takes projectile whichProjectile returns real"

GetProjectileAreaOfEffectSmallDamage=GetProjectileAreaOfEffectSmallDamage
GetProjectileAreaOfEffectSmallDamage="GetProjectileAreaOfEffectSmallDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageHint="[UjAPI] native GetProjectileAreaOfEffectSmallDamage takes projectile whichProjectile returns real"

GetProjectileAreaOfEffectMediumDamageFactor=GetProjectileAreaOfEffectMediumDamageFactor
GetProjectileAreaOfEffectMediumDamageFactor="GetProjectileAreaOfEffectMediumDamageFactor(",~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI] native GetProjectileAreaOfEffectMediumDamageFactor takes projectile whichProjectile returns real"

GetProjectileAreaOfEffectSmallDamageFactor=GetProjectileAreaOfEffectSmallDamageFactor
GetProjectileAreaOfEffectSmallDamageFactor="GetProjectileAreaOfEffectSmallDamageFactor(",~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI] native GetProjectileAreaOfEffectSmallDamageFactor takes projectile whichProjectile returns real"

GetProjectileSpeed=GetProjectileSpeed
GetProjectileSpeed="GetProjectileSpeed(",~whichProjectile,")"
GetProjectileSpeedHint="[UjAPI] native GetProjectileSpeed takes projectile whichProjectile returns real"

GetProjectileArc=GetProjectileArc
GetProjectileArc="GetProjectileArc(",~whichProjectile,")"
GetProjectileArcHint="[UjAPI] native GetProjectileArc takes projectile whichProjectile returns real"

GetProjectileWeaponType=GetProjectileWeaponType
GetProjectileWeaponType="GetProjectileWeaponType(",~whichProjectile,")"
GetProjectileWeaponTypeHint="[UjAPI] native GetProjectileWeaponType takes projectile whichProjectile returns weapontype"

GetProjectileDamageType=GetProjectileDamageType
GetProjectileDamageType="GetProjectileDamageType(",~whichProjectile,", ",~index,")"
GetProjectileDamageTypeHint="[UjAPI] native GetProjectileDamageType takes projectile whichProjectile, integer index returns damagetype"

GetProjectileDamageFlags=GetProjectileDamageFlags
GetProjectileDamageFlags="GetProjectileDamageFlags(",~whichProjectile,")"
GetProjectileDamageFlagsHint="[UjAPI] native GetProjectileDamageFlags takes projectile whichProjectile returns integer"

GetTriggerProjectile=GetTriggerProjectile
GetTriggerProjectile="GetTriggerProjectile(",")"
GetTriggerProjectileHint="[UjAPI] native GetTriggerProjectile takes nothing returns projectile"

GetFilterProjectile=GetFilterProjectile
GetFilterProjectile="GetFilterProjectile(",")"
GetFilterProjectileHint="[UjAPI] native GetFilterProjectile takes nothing returns projectile"

GetEnumProjectile=GetEnumProjectile
GetEnumProjectile="GetEnumProjectile(",")"
GetEnumProjectileHint="[UjAPI] native GetEnumProjectile takes nothing returns projectile"

GetTriggerProjectileSource=GetTriggerProjectileSource
GetTriggerProjectileSource="GetTriggerProjectileSource(",")"
GetTriggerProjectileSourceHint="[UjAPI] native GetTriggerProjectileSource takes nothing returns unit"

GetTriggerProjectileTarget=GetTriggerProjectileTarget
GetTriggerProjectileTarget="GetTriggerProjectileTarget(",")"
GetTriggerProjectileTargetHint="[UjAPI] native GetTriggerProjectileTarget takes nothing returns widget"

GetTriggerProjectileTargetUnit=GetTriggerProjectileTargetUnit
GetTriggerProjectileTargetUnit="GetTriggerProjectileTargetUnit(",")"
GetTriggerProjectileTargetUnitHint="[UjAPI] native GetTriggerProjectileTargetUnit takes nothing returns unit"

GetTriggerProjectileTargetItem=GetTriggerProjectileTargetItem
GetTriggerProjectileTargetItem="GetTriggerProjectileTargetItem(",")"
GetTriggerProjectileTargetItemHint="[UjAPI] native GetTriggerProjectileTargetItem takes nothing returns item"

GetTriggerProjectileTargetDestructable=GetTriggerProjectileTargetDestructable
GetTriggerProjectileTargetDestructable="GetTriggerProjectileTargetDestructable(",")"
GetTriggerProjectileTargetDestructableHint="[UjAPI] native GetTriggerProjectileTargetDestructable takes nothing returns destructable"

GetOriginFrame=GetOriginFrame
GetOriginFrame="GetOriginFrame(",~whichType,", ",~index,")"
GetOriginFrameHint="[UjAPI] native GetOriginFrame takes originframetype whichType, integer index returns framehandle"

LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(",~TOCFile,")"
LoadTOCFileHint="[UjAPI] native LoadTOCFile takes string TOCFile returns boolean"

CreateFrame=CreateFrame
CreateFrame="CreateFrame(",~templateName,", ",~whichParent,", ",~priority,", ",~createContext,")"
CreateFrameHint="[UjAPI] native CreateFrame takes string templateName, framehandle whichParent, integer priority, integer createContext returns framehandle"

CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(",~templateName,", ",~whichParent,", ",~createContext,")"
CreateSimpleFrameHint="[UjAPI] native CreateSimpleFrame takes string templateName, framehandle whichParent, integer createContext returns framehandle"

CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(",~whichSimpleParent,", ",~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI] native CreateSimpleGlueFrame takes framehandle whichSimpleParent, framehandle whichSpriteFrame returns framehandle"

CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(",~frameType,", ",~contextName,", ",~whichParent,", ",~templateName,", ",~createContext,")"
CreateFrameByTypeHint="[UjAPI] native CreateFrameByType takes string frameType, string contextName, framehandle whichParent, string templateName, integer createContext returns framehandle"

IsFrameRegion=IsFrameRegion
IsFrameRegion="IsFrameRegion(",~whichFrame,")"
IsFrameRegionHint="[UjAPI] native IsFrameRegion takes framehandle whichFrame returns boolean"

IsFrameSimple=IsFrameSimple
IsFrameSimple="IsFrameSimple(",~whichFrame,")"
IsFrameSimpleHint="[UjAPI] native IsFrameSimple takes framehandle whichFrame returns boolean"

IsFrameComplex=IsFrameComplex
IsFrameComplex="IsFrameComplex(",~whichFrame,")"
IsFrameComplexHint="[UjAPI] native IsFrameComplex takes framehandle whichFrame returns boolean"

GetFrameScreenX=GetFrameScreenX
GetFrameScreenX="GetFrameScreenX(",~whichFrame,")"
GetFrameScreenXHint="[UjAPI] native GetFrameScreenX takes framehandle whichFrame returns real"

GetFrameScreenY=GetFrameScreenY
GetFrameScreenY="GetFrameScreenY(",~whichFrame,")"
GetFrameScreenYHint="[UjAPI] native GetFrameScreenY takes framehandle whichFrame returns real"

GetFrameRelativePointParent=GetFrameRelativePointParent
GetFrameRelativePointParent="GetFrameRelativePointParent(",~whichFrame,", ",~point,")"
GetFrameRelativePointParentHint="[UjAPI] native GetFrameRelativePointParent takes framehandle whichFrame, framepointtype point returns framehandle"

GetFrameRelativePointType=GetFrameRelativePointType
GetFrameRelativePointType="GetFrameRelativePointType(",~whichFrame,", ",~point,")"
GetFrameRelativePointTypeHint="[UjAPI] native GetFrameRelativePointType takes framehandle whichFrame, framepointtype point returns framepointtype"

GetFrameRelativePointX=GetFrameRelativePointX
GetFrameRelativePointX="GetFrameRelativePointX(",~whichFrame,", ",~point,")"
GetFrameRelativePointXHint="[UjAPI] native GetFrameRelativePointX takes framehandle whichFrame, framepointtype point returns real"

GetFrameRelativePointY=GetFrameRelativePointY
GetFrameRelativePointY="GetFrameRelativePointY(",~whichFrame,", ",~point,")"
GetFrameRelativePointYHint="[UjAPI] native GetFrameRelativePointY takes framehandle whichFrame, framepointtype point returns real"

GetFrameAbsolutePointX=GetFrameAbsolutePointX
GetFrameAbsolutePointX="GetFrameAbsolutePointX(",~whichFrame,", ",~point,")"
GetFrameAbsolutePointXHint="[UjAPI] native GetFrameAbsolutePointX takes framehandle whichFrame, framepointtype point returns real"

GetFrameAbsolutePointY=GetFrameAbsolutePointY
GetFrameAbsolutePointY="GetFrameAbsolutePointY(",~whichFrame,", ",~point,")"
GetFrameAbsolutePointYHint="[UjAPI] native GetFrameAbsolutePointY takes framehandle whichFrame, framepointtype point returns real"

SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(",~whichFrame,", ",~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI] native SetFrameAllPoints takes framehandle whichFrame, framehandle relativeFrame returns boolean"

IsFrameVisible=IsFrameVisible
IsFrameVisible="IsFrameVisible(",~whichFrame,")"
IsFrameVisibleHint="[UjAPI] native IsFrameVisible takes framehandle whichFrame returns boolean"

GetFrameByName=GetFrameByName
GetFrameByName="GetFrameByName(",~frameName,", ",~createContext,")"
GetFrameByNameHint="[UjAPI] native GetFrameByName takes string frameName, integer createContext returns framehandle"

GetCFrameByName=GetCFrameByName
GetCFrameByName="GetCFrameByName(",~frameName,", ",~createContext,")"
GetCFrameByNameHint="[UjAPI] native GetCFrameByName takes string frameName, integer createContext returns framehandle"

GetCSimpleFontStringByName=GetCSimpleFontStringByName
GetCSimpleFontStringByName="GetCSimpleFontStringByName(",~frameName,", ",~createContext,")"
GetCSimpleFontStringByNameHint="[UjAPI] native GetCSimpleFontStringByName takes string frameName, integer createContext returns framehandle"

GetCSimpleTextureByName=GetCSimpleTextureByName
GetCSimpleTextureByName="GetCSimpleTextureByName(",~frameName,", ",~createContext,")"
GetCSimpleTextureByNameHint="[UjAPI] native GetCSimpleTextureByName takes string frameName, integer createContext returns framehandle"

GetCSimpleFrameByName=GetCSimpleFrameByName
GetCSimpleFrameByName="GetCSimpleFrameByName(",~frameName,", ",~createContext,")"
GetCSimpleFrameByNameHint="[UjAPI] native GetCSimpleFrameByName takes string frameName, integer createContext returns framehandle"

GetFrameUnderCursor=GetFrameUnderCursor
GetFrameUnderCursor="GetFrameUnderCursor(",")"
GetFrameUnderCursorHint="[UjAPI] native GetFrameUnderCursor takes nothing returns framehandle"

GetFrameChildrenCountEx=GetFrameChildrenCountEx
GetFrameChildrenCountEx="GetFrameChildrenCountEx(",~whichFrame,", ",~listId,")"
GetFrameChildrenCountExHint="[UjAPI] native GetFrameChildrenCountEx takes framehandle whichFrame, integer listId returns integer"

GetFrameChildrenCount=GetFrameChildrenCount
GetFrameChildrenCount="GetFrameChildrenCount(",~whichFrame,")"
GetFrameChildrenCountHint="[UjAPI] native GetFrameChildrenCount takes framehandle whichFrame returns integer"

GetFrameChildEx=GetFrameChildEx
GetFrameChildEx="GetFrameChildEx(",~whichFrame,", ",~listId,", ",~index,")"
GetFrameChildExHint="[UjAPI] native GetFrameChildEx takes framehandle whichFrame, integer listId, integer index returns framehandle"

GetFrameChild=GetFrameChild
GetFrameChild="GetFrameChild(",~whichFrame,", ",~index,")"
GetFrameChildHint="[UjAPI] native GetFrameChild takes framehandle whichFrame, integer index returns framehandle"

GetFrameTypeName=GetFrameTypeName
GetFrameTypeName="GetFrameTypeName(",~whichFrame,")"
GetFrameTypeNameHint="[UjAPI] native GetFrameTypeName takes framehandle whichFrame returns string"

GetFrameName=GetFrameName
GetFrameName="GetFrameName(",~whichFrame,")"
GetFrameNameHint="[UjAPI] native GetFrameName takes framehandle whichFrame returns string"

GetFrameContext=GetFrameContext
GetFrameContext="GetFrameContext(",~whichFrame,")"
GetFrameContextHint="[UjAPI] native GetFrameContext takes framehandle whichFrame returns integer"

GetFrameText=GetFrameText
GetFrameText="GetFrameText(",~whichFrame,")"
GetFrameTextHint="[UjAPI] native GetFrameText takes framehandle whichFrame returns string"

GetFrameTextSizeLimit=GetFrameTextSizeLimit
GetFrameTextSizeLimit="GetFrameTextSizeLimit(",~whichFrame,")"
GetFrameTextSizeLimitHint="[UjAPI] native GetFrameTextSizeLimit takes framehandle whichFrame returns integer"

GetFrameTextColourEx=GetFrameTextColourEx
GetFrameTextColourEx="GetFrameTextColourEx(",~whichFrame,", ",~stateId,")"
GetFrameTextColourExHint="[UjAPI] native GetFrameTextColourEx takes framehandle whichFrame, integer stateId returns integer"

GetFrameTextColour=GetFrameTextColour
GetFrameTextColour="GetFrameTextColour(",~whichFrame,")"
GetFrameTextColourHint="[UjAPI] native GetFrameTextColour takes framehandle whichFrame returns integer"

IsFrameFocused=IsFrameFocused
IsFrameFocused="IsFrameFocused(",~whichFrame,")"
IsFrameFocusedHint="[UjAPI] native IsFrameFocused takes framehandle whichFrame returns boolean"

SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(",~whichFrame,", ",~isFocus,")"
SetFrameFocusHint="[UjAPI] native SetFrameFocus takes framehandle whichFrame, boolean isFocus returns boolean"

GetFrameModel=GetFrameModel
GetFrameModel="GetFrameModel(",~whichFrame,")"
GetFrameModelHint="[UjAPI] native GetFrameModel takes framehandle whichFrame returns string"

GetFrameState=GetFrameState
GetFrameState="GetFrameState(",~whichFrame,")"
GetFrameStateHint="[UjAPI] native GetFrameState takes framehandle whichFrame returns framestate"

IsFrameEnabled=IsFrameEnabled
IsFrameEnabled="IsFrameEnabled(",~whichFrame,")"
IsFrameEnabledHint="[UjAPI] native IsFrameEnabled takes framehandle whichFrame returns boolean"

IsFrameLayoutFlag=IsFrameLayoutFlag
IsFrameLayoutFlag="IsFrameLayoutFlag(",~whichFrame,", ",~whichLayoutStyle,")"
IsFrameLayoutFlagHint="[UjAPI] native IsFrameLayoutFlag takes framehandle whichFrame, layoutstyleflag whichLayoutStyle returns boolean"

IsFrameGridFlag=IsFrameGridFlag
IsFrameGridFlag="IsFrameGridFlag(",~whichFrame,", ",~whichGridStyle,")"
IsFrameGridFlagHint="[UjAPI] native IsFrameGridFlag takes framehandle whichFrame, gridstyleflag whichGridStyle returns boolean"

IsFrameLayerFlag=IsFrameLayerFlag
IsFrameLayerFlag="IsFrameLayerFlag(",~whichFrame,", ",~whichLayerStyle,")"
IsFrameLayerFlagHint="[UjAPI] native IsFrameLayerFlag takes framehandle whichFrame, layerstyleflag whichLayerStyle returns boolean"

IsFrameControlFlag=IsFrameControlFlag
IsFrameControlFlag="IsFrameControlFlag(",~whichFrame,", ",~whichControlStyle,")"
IsFrameControlFlagHint="[UjAPI] native IsFrameControlFlag takes framehandle whichFrame, controlstyleflag whichControlStyle returns boolean"

GetFrameColourEx=GetFrameColourEx
GetFrameColourEx="GetFrameColourEx(",~whichFrame,", ",~textureId,")"
GetFrameColourExHint="[UjAPI] native GetFrameColourEx takes framehandle whichFrame, integer textureId returns integer"

GetFrameColour=GetFrameColour
GetFrameColour="GetFrameColour(",~whichFrame,")"
GetFrameColourHint="[UjAPI] native GetFrameColour takes framehandle whichFrame returns integer"

GetFrameAlphaEx=GetFrameAlphaEx
GetFrameAlphaEx="GetFrameAlphaEx(",~whichFrame,", ",~textureId,")"
GetFrameAlphaExHint="[UjAPI] native GetFrameAlphaEx takes framehandle whichFrame, integer textureId returns integer"

GetFrameAlpha=GetFrameAlpha
GetFrameAlpha="GetFrameAlpha(",~whichFrame,")"
GetFrameAlphaHint="[UjAPI] native GetFrameAlpha takes framehandle whichFrame returns integer"

GetFrameTexture=GetFrameTexture
GetFrameTexture="GetFrameTexture(",~whichFrame,", ",~textureId,")"
GetFrameTextureHint="[UjAPI] native GetFrameTexture takes framehandle whichFrame, integer textureId returns string"

GetFrameBlendMode=GetFrameBlendMode
GetFrameBlendMode="GetFrameBlendMode(",~whichFrame,", ",~textureId,")"
GetFrameBlendModeHint="[UjAPI] native GetFrameBlendMode takes framehandle whichFrame, integer textureId returns blendmode"

SetFrameTooltip=SetFrameTooltip
SetFrameTooltip="SetFrameTooltip(",~whichFrame,", ",~tooltipFrame,")"
SetFrameTooltipHint="[UjAPI] native SetFrameTooltip takes framehandle whichFrame, framehandle tooltipFrame returns nothing"

GetFrameValue=GetFrameValue
GetFrameValue="GetFrameValue(",~whichFrame,")"
GetFrameValueHint="[UjAPI] native GetFrameValue takes framehandle whichFrame returns real"

GetFrameMinMaxValues=GetFrameMinMaxValues
GetFrameMinMaxValues="GetFrameMinMaxValues(",~whichFrame,", ",~valueId,")"
GetFrameMinMaxValuesHint="[UjAPI] native GetFrameMinMaxValues takes framehandle whichFrame, integer valueId returns real"

GetFrameStepSize=GetFrameStepSize
GetFrameStepSize="GetFrameStepSize(",~whichFrame,")"
GetFrameStepSizeHint="[UjAPI] native GetFrameStepSize takes framehandle whichFrame returns real"

GetFrameWidth=GetFrameWidth
GetFrameWidth="GetFrameWidth(",~whichFrame,")"
GetFrameWidthHint="[UjAPI] native GetFrameWidth takes framehandle whichFrame returns real"

GetFrameHeight=GetFrameHeight
GetFrameHeight="GetFrameHeight(",~whichFrame,")"
GetFrameHeightHint="[UjAPI] native GetFrameHeight takes framehandle whichFrame returns real"

GetFramePriority=GetFramePriority
GetFramePriority="GetFramePriority(",~whichFrame,")"
GetFramePriorityHint="[UjAPI] native GetFramePriority takes framehandle whichFrame returns integer"

GetFrameParent=GetFrameParent
GetFrameParent="GetFrameParent(",~whichFrame,")"
GetFrameParentHint="[UjAPI] native GetFrameParent takes framehandle whichFrame returns framehandle"

GetFrameTextAlignmentValue=GetFrameTextAlignmentValue
GetFrameTextAlignmentValue="GetFrameTextAlignmentValue(",~whichFrame,", ",~id,")"
GetFrameTextAlignmentValueHint="[UjAPI] native GetFrameTextAlignmentValue takes framehandle whichFrame, integer id returns real"

GetFrameCheckState=GetFrameCheckState
GetFrameCheckState="GetFrameCheckState(",~whichFrame,")"
GetFrameCheckStateHint="[UjAPI] native GetFrameCheckState takes framehandle whichFrame returns boolean"

SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(",~texturePath,")"
SetMiniMapTextureHint="[UjAPI] native SetMiniMapTexture takes string texturePath returns boolean"

GetFrameSlider=GetFrameSlider
GetFrameSlider="GetFrameSlider(",~whichFrame,")"
GetFrameSliderHint="[UjAPI] native GetFrameSlider takes framehandle whichFrame returns framehandle"

AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(",~whichFrame,")"
AddFrameSliderHint="[UjAPI] native AddFrameSlider takes framehandle whichFrame returns framehandle"

GetFrameItemsBorder=GetFrameItemsBorder
GetFrameItemsBorder="GetFrameItemsBorder(",~whichFrame,")"
GetFrameItemsBorderHint="[UjAPI] native GetFrameItemsBorder takes framehandle whichFrame returns real"

GetFrameItemsHeight=GetFrameItemsHeight
GetFrameItemsHeight="GetFrameItemsHeight(",~whichFrame,")"
GetFrameItemsHeightHint="[UjAPI] native GetFrameItemsHeight takes framehandle whichFrame returns real"

AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(",~whichFrame,", ",~text,", ",~frameToAdd,")"
AddFrameListItemHint="[UjAPI] native AddFrameListItem takes framehandle whichFrame, string text, framehandle frameToAdd returns framehandle"

GetFrameListItemCount=GetFrameListItemCount
GetFrameListItemCount="GetFrameListItemCount(",~whichFrame,")"
GetFrameListItemCountHint="[UjAPI] native GetFrameListItemCount takes framehandle whichFrame returns integer"

GetFrameListItemById=GetFrameListItemById
GetFrameListItemById="GetFrameListItemById(",~whichFrame,", ",~id,")"
GetFrameListItemByIdHint="[UjAPI] native GetFrameListItemById takes framehandle whichFrame, integer id returns framehandle"

GetFrameListItemByFrame=GetFrameListItemByFrame
GetFrameListItemByFrame="GetFrameListItemByFrame(",~whichFrame,", ",~frameToFind,")"
GetFrameListItemByFrameHint="[UjAPI] native GetFrameListItemByFrame takes framehandle whichFrame, framehandle frameToFind returns framehandle"

GetFrameItemOwner=GetFrameItemOwner
GetFrameItemOwner="GetFrameItemOwner(",~listBoxItem,")"
GetFrameItemOwnerHint="[UjAPI] native GetFrameItemOwner takes framehandle listBoxItem returns framehandle"

GetFrameHighlight=GetFrameHighlight
GetFrameHighlight="GetFrameHighlight(",~whichFrame,", ",~highlightId,")"
GetFrameHighlightHint="[UjAPI] native GetFrameHighlight takes framehandle whichFrame, integer highlightId returns framehandle"

GetFrameHighlightTexture=GetFrameHighlightTexture
GetFrameHighlightTexture="GetFrameHighlightTexture(",~whichFrame,", ",~highlightId,")"
GetFrameHighlightTextureHint="[UjAPI] native GetFrameHighlightTexture takes framehandle whichFrame, integer highlightId returns string"

GetFrameBackdrop=GetFrameBackdrop
GetFrameBackdrop="GetFrameBackdrop(",~whichFrame,", ",~backdropId,")"
GetFrameBackdropHint="[UjAPI] native GetFrameBackdrop takes framehandle whichFrame, integer backdropId returns framehandle"

IsFrameBorderEnabled=IsFrameBorderEnabled
IsFrameBorderEnabled="IsFrameBorderEnabled(",~whichFrame,", ",~backdropId,")"
IsFrameBorderEnabledHint="[UjAPI] native IsFrameBorderEnabled takes framehandle whichFrame, integer backdropId returns boolean"

GetFrameBorderFlags=GetFrameBorderFlags
GetFrameBorderFlags="GetFrameBorderFlags(",~whichFrame,", ",~backdropId,")"
GetFrameBorderFlagsHint="[UjAPI] native GetFrameBorderFlags takes framehandle whichFrame, integer backdropId returns integer"

GetFrameBorderSize=GetFrameBorderSize
GetFrameBorderSize="GetFrameBorderSize(",~whichFrame,", ",~backdropId,")"
GetFrameBorderSizeHint="[UjAPI] native GetFrameBorderSize takes framehandle whichFrame, integer backdropId returns real"

GetFrameBackgroundSize=GetFrameBackgroundSize
GetFrameBackgroundSize="GetFrameBackgroundSize(",~whichFrame,", ",~backdropId,")"
GetFrameBackgroundSizeHint="[UjAPI] native GetFrameBackgroundSize takes framehandle whichFrame, integer backdropId returns real"

GetFrameBackgroundInsetById=GetFrameBackgroundInsetById
GetFrameBackgroundInsetById="GetFrameBackgroundInsetById(",~whichFrame,", ",~backdropId,", ",~insetId,")"
GetFrameBackgroundInsetByIdHint="[UjAPI] native GetFrameBackgroundInsetById takes framehandle whichFrame, integer backdropId, integer insetId returns real"

GetFrameGridRows=GetFrameGridRows
GetFrameGridRows="GetFrameGridRows(",~grid,")"
GetFrameGridRowsHint="[UjAPI] native GetFrameGridRows takes framehandle grid returns integer"

GetFrameGridColumns=GetFrameGridColumns
GetFrameGridColumns="GetFrameGridColumns(",~grid,")"
GetFrameGridColumnsHint="[UjAPI] native GetFrameGridColumns takes framehandle grid returns integer"

GetFrameGridFrame=GetFrameGridFrame
GetFrameGridFrame="GetFrameGridFrame(",~grid,", ",~row,", ",~column,")"
GetFrameGridFrameHint="[UjAPI] native GetFrameGridFrame takes framehandle grid, integer row, integer column returns framehandle"

GetFrameGridFrameById=GetFrameGridFrameById
GetFrameGridFrameById="GetFrameGridFrameById(",~grid,", ",~id,")"
GetFrameGridFrameByIdHint="[UjAPI] native GetFrameGridFrameById takes framehandle grid, integer id returns framehandle"

IsBuffBarRenderDuplicates=IsBuffBarRenderDuplicates
IsBuffBarRenderDuplicates="IsBuffBarRenderDuplicates(",")"
IsBuffBarRenderDuplicatesHint="[UjAPI] native IsBuffBarRenderDuplicates takes nothing returns boolean"

GetTriggerFrame=GetTriggerFrame
GetTriggerFrame="GetTriggerFrame(",")"
GetTriggerFrameHint="[UjAPI] native GetTriggerFrame takes nothing returns framehandle"

GetTriggerFrameEvent=GetTriggerFrameEvent
GetTriggerFrameEvent="GetTriggerFrameEvent(",")"
GetTriggerFrameEventHint="[UjAPI] native GetTriggerFrameEvent takes nothing returns frameeventtype"

GetTriggerFrameVariableType=GetTriggerFrameVariableType
GetTriggerFrameVariableType="GetTriggerFrameVariableType(",")"
GetTriggerFrameVariableTypeHint="[UjAPI] native GetTriggerFrameVariableType takes nothing returns variabletype"

GetTriggerFrameInteger=GetTriggerFrameInteger
GetTriggerFrameInteger="GetTriggerFrameInteger(",")"
GetTriggerFrameIntegerHint="[UjAPI] native GetTriggerFrameInteger takes nothing returns integer"

GetTriggerFrameReal=GetTriggerFrameReal
GetTriggerFrameReal="GetTriggerFrameReal(",")"
GetTriggerFrameRealHint="[UjAPI] native GetTriggerFrameReal takes nothing returns real"

GetTriggerFrameBoolean=GetTriggerFrameBoolean
GetTriggerFrameBoolean="GetTriggerFrameBoolean(",")"
GetTriggerFrameBooleanHint="[UjAPI] native GetTriggerFrameBoolean takes nothing returns boolean"

GetTriggerFrameString=GetTriggerFrameString
GetTriggerFrameString="GetTriggerFrameString(",")"
GetTriggerFrameStringHint="[UjAPI] native GetTriggerFrameString takes nothing returns string"

GetTriggerFrameMouseButton=GetTriggerFrameMouseButton
GetTriggerFrameMouseButton="GetTriggerFrameMouseButton(",")"
GetTriggerFrameMouseButtonHint="[UjAPI] native GetTriggerFrameMouseButton takes nothing returns mousebuttontype"

GetTriggerFrameTargetFrame=GetTriggerFrameTargetFrame
GetTriggerFrameTargetFrame="GetTriggerFrameTargetFrame(",")"
GetTriggerFrameTargetFrameHint="[UjAPI] native GetTriggerFrameTargetFrame takes nothing returns framehandle"

TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(",~whichTrigger,", ",~whichFrame,", ",~eventId,")"
TriggerRegisterFrameEventHint="[UjAPI] native TriggerRegisterFrameEvent takes trigger whichTrigger, framehandle whichFrame, frameeventtype eventId returns event"

GetFrameSprite=GetFrameSprite
GetFrameSprite="GetFrameSprite(",~whichFrame,")"
GetFrameSpriteHint="[UjAPI] native GetFrameSprite takes framehandle whichFrame returns sprite"

GetFrameSpriteScale=GetFrameSpriteScale
GetFrameSpriteScale="GetFrameSpriteScale(",~whichFrame,")"
GetFrameSpriteScaleHint="[UjAPI] native GetFrameSpriteScale takes framehandle whichFrame returns real"

GetFrameSpriteTimeScale=GetFrameSpriteTimeScale
GetFrameSpriteTimeScale="GetFrameSpriteTimeScale(",~whichFrame,")"
GetFrameSpriteTimeScaleHint="[UjAPI] native GetFrameSpriteTimeScale takes framehandle whichFrame returns real"

GetFrameSpritePlayerColour=GetFrameSpritePlayerColour
GetFrameSpritePlayerColour="GetFrameSpritePlayerColour(",~whichFrame,")"
GetFrameSpritePlayerColourHint="[UjAPI] native GetFrameSpritePlayerColour takes framehandle whichFrame returns playercolor"

GetFrameSpriteAlpha=GetFrameSpriteAlpha
GetFrameSpriteAlpha="GetFrameSpriteAlpha(",~whichFrame,")"
GetFrameSpriteAlphaHint="[UjAPI] native GetFrameSpriteAlpha takes framehandle whichFrame returns integer"

GetFrameSpriteColour=GetFrameSpriteColour
GetFrameSpriteColour="GetFrameSpriteColour(",~whichFrame,")"
GetFrameSpriteColourHint="[UjAPI] native GetFrameSpriteColour takes framehandle whichFrame returns integer"

GetFrameSpriteYaw=GetFrameSpriteYaw
GetFrameSpriteYaw="GetFrameSpriteYaw(",~whichFrame,")"
GetFrameSpriteYawHint="[UjAPI] native GetFrameSpriteYaw takes framehandle whichFrame returns real"

GetFrameSpriteFacing=GetFrameSpriteFacing
GetFrameSpriteFacing="GetFrameSpriteFacing(",~whichFrame,")"
GetFrameSpriteFacingHint="[UjAPI] native GetFrameSpriteFacing takes framehandle whichFrame returns real"

GetFrameSpritePitch=GetFrameSpritePitch
GetFrameSpritePitch="GetFrameSpritePitch(",~whichFrame,")"
GetFrameSpritePitchHint="[UjAPI] native GetFrameSpritePitch takes framehandle whichFrame returns real"

GetFrameSpriteRoll=GetFrameSpriteRoll
GetFrameSpriteRoll="GetFrameSpriteRoll(",~whichFrame,")"
GetFrameSpriteRollHint="[UjAPI] native GetFrameSpriteRoll takes framehandle whichFrame returns real"

GetFrameSpriteMatrixScaleX=GetFrameSpriteMatrixScaleX
GetFrameSpriteMatrixScaleX="GetFrameSpriteMatrixScaleX(",~whichFrame,")"
GetFrameSpriteMatrixScaleXHint="[UjAPI] native GetFrameSpriteMatrixScaleX takes framehandle whichFrame returns real"

GetFrameSpriteMatrixScaleY=GetFrameSpriteMatrixScaleY
GetFrameSpriteMatrixScaleY="GetFrameSpriteMatrixScaleY(",~whichFrame,")"
GetFrameSpriteMatrixScaleYHint="[UjAPI] native GetFrameSpriteMatrixScaleY takes framehandle whichFrame returns real"

GetFrameSpriteMatrixScaleZ=GetFrameSpriteMatrixScaleZ
GetFrameSpriteMatrixScaleZ="GetFrameSpriteMatrixScaleZ(",~whichFrame,")"
GetFrameSpriteMatrixScaleZHint="[UjAPI] native GetFrameSpriteMatrixScaleZ takes framehandle whichFrame returns real"

GetFrameSpriteMaterialTexture=GetFrameSpriteMaterialTexture
GetFrameSpriteMaterialTexture="GetFrameSpriteMaterialTexture(",~whichFrame,", ",~materialId,", ",~textureIndex,")"
GetFrameSpriteMaterialTextureHint="[UjAPI] native GetFrameSpriteMaterialTexture takes framehandle whichFrame, integer materialId, integer textureIndex returns string"

GetFrameSpriteTexture=GetFrameSpriteTexture
GetFrameSpriteTexture="GetFrameSpriteTexture(",~whichFrame,", ",~textureIndex,")"
GetFrameSpriteTextureHint="[UjAPI] native GetFrameSpriteTexture takes framehandle whichFrame, integer textureIndex returns string"

GetFrameSpriteModel=GetFrameSpriteModel
GetFrameSpriteModel="GetFrameSpriteModel(",~whichFrame,")"
GetFrameSpriteModelHint="[UjAPI] native GetFrameSpriteModel takes framehandle whichFrame returns string"

GetFrameSpriteCurrentAnimationId=GetFrameSpriteCurrentAnimationId
GetFrameSpriteCurrentAnimationId="GetFrameSpriteCurrentAnimationId(",~whichFrame,")"
GetFrameSpriteCurrentAnimationIdHint="[UjAPI] native GetFrameSpriteCurrentAnimationId takes framehandle whichFrame returns integer"

GetFrameSpriteCurrentAnimationName=GetFrameSpriteCurrentAnimationName
GetFrameSpriteCurrentAnimationName="GetFrameSpriteCurrentAnimationName(",~whichFrame,")"
GetFrameSpriteCurrentAnimationNameHint="[UjAPI] native GetFrameSpriteCurrentAnimationName takes framehandle whichFrame returns string"

GetFrameSpriteAnimationOffsetPercent=GetFrameSpriteAnimationOffsetPercent
GetFrameSpriteAnimationOffsetPercent="GetFrameSpriteAnimationOffsetPercent(",~whichFrame,")"
GetFrameSpriteAnimationOffsetPercentHint="[UjAPI] native GetFrameSpriteAnimationOffsetPercent takes framehandle whichFrame returns real"

IsFrameSpriteAnimationFrozen=IsFrameSpriteAnimationFrozen
IsFrameSpriteAnimationFrozen="IsFrameSpriteAnimationFrozen(",~whichFrame,")"
IsFrameSpriteAnimationFrozenHint="[UjAPI] native IsFrameSpriteAnimationFrozen takes framehandle whichFrame returns boolean"

GetTriggerSyncPlayer=GetTriggerSyncPlayer
GetTriggerSyncPlayer="GetTriggerSyncPlayer(",")"
GetTriggerSyncPlayerHint="[UjAPI] native GetTriggerSyncPlayer takes nothing returns player"

GetSyncedVariableType=GetSyncedVariableType
GetSyncedVariableType="GetSyncedVariableType(",")"
GetSyncedVariableTypeHint="[UjAPI] native GetSyncedVariableType takes nothing returns variabletype"

GetSyncedVariableName=GetSyncedVariableName
GetSyncedVariableName="GetSyncedVariableName(",")"
GetSyncedVariableNameHint="[UjAPI] native GetSyncedVariableName takes nothing returns string"

GetSyncedInteger=GetSyncedInteger
GetSyncedInteger="GetSyncedInteger(",")"
GetSyncedIntegerHint="[UjAPI] native GetSyncedInteger takes nothing returns integer"

GetSyncedReal=GetSyncedReal
GetSyncedReal="GetSyncedReal(",")"
GetSyncedRealHint="[UjAPI] native GetSyncedReal takes nothing returns real"

GetSyncedString=GetSyncedString
GetSyncedString="GetSyncedString(",")"
GetSyncedStringHint="[UjAPI] native GetSyncedString takes nothing returns string"

GetSyncedHandle=GetSyncedHandle
GetSyncedHandle="GetSyncedHandle(",")"
GetSyncedHandleHint="[UjAPI] native GetSyncedHandle takes nothing returns handle"

GetSyncedBoolean=GetSyncedBoolean
GetSyncedBoolean="GetSyncedBoolean(",")"
GetSyncedBooleanHint="[UjAPI] native GetSyncedBoolean takes nothing returns boolean"

SyncString=SyncString
SyncString="SyncString(",~variableName,")"
SyncStringHint="[UjAPI] native SyncString takes string variableName returns nothing"

TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI] native TriggerRegisterPlayerVariableSyncEvent takes trigger whichTrigger, player whichPlayer, string variableName returns event"

GetSyncSavedVariableType=GetSyncSavedVariableType
GetSyncSavedVariableType="GetSyncSavedVariableType(",")"
GetSyncSavedVariableTypeHint="[UjAPI] native GetSyncSavedVariableType takes nothing returns variabletype"

GetSyncSavedHashtable=GetSyncSavedHashtable
GetSyncSavedHashtable="GetSyncSavedHashtable(",")"
GetSyncSavedHashtableHint="[UjAPI] native GetSyncSavedHashtable takes nothing returns hashtable"

GetSyncSavedParentKey=GetSyncSavedParentKey
GetSyncSavedParentKey="GetSyncSavedParentKey(",")"
GetSyncSavedParentKeyHint="[UjAPI] native GetSyncSavedParentKey takes nothing returns integer"

GetSyncSavedChildKey=GetSyncSavedChildKey
GetSyncSavedChildKey="GetSyncSavedChildKey(",")"
GetSyncSavedChildKeyHint="[UjAPI] native GetSyncSavedChildKey takes nothing returns integer"

SyncSavedString=SyncSavedString
SyncSavedString="SyncSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedStringHint="[UjAPI] native SyncSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"

TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI] native TriggerRegisterPlayerHashtableDataSyncEvent takes trigger whichTrigger, player whichPlayer, hashtable whichHashtable returns event"

GetTriggerSyncPrefix=GetTriggerSyncPrefix
GetTriggerSyncPrefix="GetTriggerSyncPrefix(",")"
GetTriggerSyncPrefixHint="[UjAPI] native GetTriggerSyncPrefix takes nothing returns string"

GetTriggerSyncData=GetTriggerSyncData
GetTriggerSyncData="GetTriggerSyncData(",")"
GetTriggerSyncDataHint="[UjAPI] native GetTriggerSyncData takes nothing returns string"

SendSyncData=SendSyncData
SendSyncData="SendSyncData(",~prefix,", ",~data,")"
SendSyncDataHint="[UjAPI] native SendSyncData takes string prefix, string data returns boolean"

TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~prefix,", ",~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI] native TriggerRegisterPlayerSyncEvent takes trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer returns event"

IsKeyPressed=IsKeyPressed
IsKeyPressed="IsKeyPressed(",~whichKey,")"
IsKeyPressedHint="[UjAPI] native IsKeyPressed takes oskeytype whichKey returns boolean"

IsMouseKeyPressed=IsMouseKeyPressed
IsMouseKeyPressed="IsMouseKeyPressed(",~whichMouseButton,")"
IsMouseKeyPressedHint="[UjAPI] native IsMouseKeyPressed takes mousebuttontype whichMouseButton returns boolean"

GetTriggerPlayerIsKeyDown=GetTriggerPlayerIsKeyDown
GetTriggerPlayerIsKeyDown="GetTriggerPlayerIsKeyDown(",")"
GetTriggerPlayerIsKeyDownHint="[UjAPI] native GetTriggerPlayerIsKeyDown takes nothing returns boolean"

GetTriggerPlayerKey=GetTriggerPlayerKey
GetTriggerPlayerKey="GetTriggerPlayerKey(",")"
GetTriggerPlayerKeyHint="[UjAPI] native GetTriggerPlayerKey takes nothing returns oskeytype"

GetTriggerPlayerMouseButton=GetTriggerPlayerMouseButton
GetTriggerPlayerMouseButton="GetTriggerPlayerMouseButton(",")"
GetTriggerPlayerMouseButtonHint="[UjAPI] native GetTriggerPlayerMouseButton takes nothing returns mousebuttontype"

GetTriggerPlayerMetaKey=GetTriggerPlayerMetaKey
GetTriggerPlayerMetaKey="GetTriggerPlayerMetaKey(",")"
GetTriggerPlayerMetaKeyHint="[UjAPI] native GetTriggerPlayerMetaKey takes nothing returns integer"

TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichKey,", ",~whichMetaKey,", ",~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI] native TriggerRegisterPlayerKeyEvent takes trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown returns event"

GetMouseMoveEventScreenAxisEnabled=GetMouseMoveEventScreenAxisEnabled
GetMouseMoveEventScreenAxisEnabled="GetMouseMoveEventScreenAxisEnabled(",")"
GetMouseMoveEventScreenAxisEnabledHint="[UjAPI] native GetMouseMoveEventScreenAxisEnabled takes nothing returns boolean"

GetMouseMoveEventWorldAxisEnabled=GetMouseMoveEventWorldAxisEnabled
GetMouseMoveEventWorldAxisEnabled="GetMouseMoveEventWorldAxisEnabled(",")"
GetMouseMoveEventWorldAxisEnabledHint="[UjAPI] native GetMouseMoveEventWorldAxisEnabled takes nothing returns boolean"

GetMouseMoveEventDelay=GetMouseMoveEventDelay
GetMouseMoveEventDelay="GetMouseMoveEventDelay(",")"
GetMouseMoveEventDelayHint="[UjAPI] native GetMouseMoveEventDelay takes nothing returns integer"

GetTriggerPlayerMouseWorldX=GetTriggerPlayerMouseWorldX
GetTriggerPlayerMouseWorldX="GetTriggerPlayerMouseWorldX(",")"
GetTriggerPlayerMouseWorldXHint="[UjAPI] native GetTriggerPlayerMouseWorldX takes nothing returns real"

GetTriggerPlayerMouseWorldY=GetTriggerPlayerMouseWorldY
GetTriggerPlayerMouseWorldY="GetTriggerPlayerMouseWorldY(",")"
GetTriggerPlayerMouseWorldYHint="[UjAPI] native GetTriggerPlayerMouseWorldY takes nothing returns real"

GetTriggerPlayerMouseWorldZ=GetTriggerPlayerMouseWorldZ
GetTriggerPlayerMouseWorldZ="GetTriggerPlayerMouseWorldZ(",")"
GetTriggerPlayerMouseWorldZHint="[UjAPI] native GetTriggerPlayerMouseWorldZ takes nothing returns real"

GetTriggerPlayerMouseScreenX=GetTriggerPlayerMouseScreenX
GetTriggerPlayerMouseScreenX="GetTriggerPlayerMouseScreenX(",")"
GetTriggerPlayerMouseScreenXHint="[UjAPI] native GetTriggerPlayerMouseScreenX takes nothing returns real"

GetTriggerPlayerMouseScreenY=GetTriggerPlayerMouseScreenY
GetTriggerPlayerMouseScreenY="GetTriggerPlayerMouseScreenY(",")"
GetTriggerPlayerMouseScreenYHint="[UjAPI] native GetTriggerPlayerMouseScreenY takes nothing returns real"

GetEventDamageFlags=GetEventDamageFlags
GetEventDamageFlags="GetEventDamageFlags(",")"
GetEventDamageFlagsHint="[UjAPI] native GetEventDamageFlags takes nothing returns integer"

GetEventDamageIsFlag=GetEventDamageIsFlag
GetEventDamageIsFlag="GetEventDamageIsFlag(",~flag,")"
GetEventDamageIsFlagHint="[UjAPI] native GetEventDamageIsFlag takes integer flag returns boolean"

SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(",~flag,", ",~isSet,")"
SetEventDamageFlagHint="[UjAPI] native SetEventDamageFlag takes integer flag, boolean isSet returns boolean"

GetEventDamageTarget=GetEventDamageTarget
GetEventDamageTarget="GetEventDamageTarget(",")"
GetEventDamageTargetHint="[UjAPI] native GetEventDamageTarget takes nothing returns unit"

GetEventAttackType=GetEventAttackType
GetEventAttackType="GetEventAttackType(",")"
GetEventAttackTypeHint="[UjAPI] native GetEventAttackType takes nothing returns attacktype"

SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(",~attackType,")"
SetEventAttackTypeHint="[UjAPI] native SetEventAttackType takes attacktype attackType returns boolean"

GetEventDamageType=GetEventDamageType
GetEventDamageType="GetEventDamageType(",")"
GetEventDamageTypeHint="[UjAPI] native GetEventDamageType takes nothing returns damagetype"

SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(",~whichDamageType,")"
SetEventDamageTypeHint="[UjAPI] native SetEventDamageType takes damagetype whichDamageType returns boolean"

GetEventDamageTypeExtra=GetEventDamageTypeExtra
GetEventDamageTypeExtra="GetEventDamageTypeExtra(",")"
GetEventDamageTypeExtraHint="[UjAPI] native GetEventDamageTypeExtra takes nothing returns damagetype"

SetEventDamageTypeExtra=SetEventDamageTypeExtra
SetEventDamageTypeExtra="SetEventDamageTypeExtra(",~whichDamageType,")"
SetEventDamageTypeExtraHint="[UjAPI] native SetEventDamageTypeExtra takes damagetype whichDamageType returns boolean"

GetEventDamageTypeFlags=GetEventDamageTypeFlags
GetEventDamageTypeFlags="GetEventDamageTypeFlags(",")"
GetEventDamageTypeFlagsHint="[UjAPI] native GetEventDamageTypeFlags takes nothing returns integer"

SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(",~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI] native SetEventDamageTypeFlags takes integer damageFlags returns boolean"

GetEventWeaponType=GetEventWeaponType
GetEventWeaponType="GetEventWeaponType(",")"
GetEventWeaponTypeHint="[UjAPI] native GetEventWeaponType takes nothing returns weapontype"

SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(",~weaponType,")"
SetEventWeaponTypeHint="[UjAPI] native SetEventWeaponType takes weapontype weaponType returns boolean"

GetEventIsAttack=GetEventIsAttack
GetEventIsAttack="GetEventIsAttack(",")"
GetEventIsAttackHint="[UjAPI] native GetEventIsAttack takes nothing returns boolean"

GetEventIsAttackEx=GetEventIsAttackEx
GetEventIsAttackEx="GetEventIsAttackEx(",~checkActual,")"
GetEventIsAttackExHint="[UjAPI] native GetEventIsAttackEx takes boolean checkActual returns boolean"

GetEventIsRanged=GetEventIsRanged
GetEventIsRanged="GetEventIsRanged(",")"
GetEventIsRangedHint="[UjAPI] native GetEventIsRanged takes nothing returns boolean"

GetEventIsCritical=GetEventIsCritical
GetEventIsCritical="GetEventIsCritical(",")"
GetEventIsCriticalHint="[UjAPI] native GetEventIsCritical takes nothing returns boolean"

GetEventPreDamage=GetEventPreDamage
GetEventPreDamage="GetEventPreDamage(",")"
GetEventPreDamageHint="[UjAPI] native GetEventPreDamage takes nothing returns real"

GetEventPreDamageExtra=GetEventPreDamageExtra
GetEventPreDamageExtra="GetEventPreDamageExtra(",")"
GetEventPreDamageExtraHint="[UjAPI] native GetEventPreDamageExtra takes nothing returns real"

GetEventDamageExtra=GetEventDamageExtra
GetEventDamageExtra="GetEventDamageExtra(",")"
GetEventDamageExtraHint="[UjAPI] native GetEventDamageExtra takes nothing returns real"

ParseTags=ParseTags
ParseTags="ParseTags(",~taggedString,")"
ParseTagsHint="[UjAPI] native ParseTags takes string taggedString returns string"

TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(",~whichTrigger,", ",~whichAbility,", ",~orderName,")"
TriggerRegisterCommandEventHint="[UjAPI] native TriggerRegisterCommandEvent takes trigger whichTrigger, integer whichAbility, string orderName returns event"

TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(",~whichTrigger,", ",~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI] native TriggerRegisterUpgradeCommandEvent takes trigger whichTrigger, integer whichUpgrade returns event"

GetPlayerHandicapReviveTime=GetPlayerHandicapReviveTime
GetPlayerHandicapReviveTime="GetPlayerHandicapReviveTime(",~whichPlayer,")"
GetPlayerHandicapReviveTimeHint="[UjAPI] native GetPlayerHandicapReviveTime takes player whichPlayer returns real"

GetPlayerHandicapDamage=GetPlayerHandicapDamage
GetPlayerHandicapDamage="GetPlayerHandicapDamage(",~whichPlayer,")"
GetPlayerHandicapDamageHint="[UjAPI] native GetPlayerHandicapDamage takes player whichPlayer returns real"

CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI] native CreateMinimapIconOnUnit takes unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(",~where,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI] native CreateMinimapIconAtLoc takes location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(",~x,", ",~y,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconHint="[UjAPI] native CreateMinimapIcon takes real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"

SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(",~key,")"
SkinManagerGetLocalPathHint="[UjAPI] native SkinManagerGetLocalPath takes string key returns string"

SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(",~soundHandle,", ",~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI] native SetSoundFacialAnimationLabel takes sound soundHandle, string animationLabel returns boolean"

SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(",~soundHandle,", ",~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI] native SetSoundFacialAnimationGroupLabel takes sound soundHandle, string groupLabel returns boolean"

SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(",~soundHandle,", ",~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI] native SetSoundFacialAnimationSetFilepath takes sound soundHandle, string animationSetFilepath returns boolean"

SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(",~soundHandle,", ",~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI] native SetDialogueSpeakerNameKey takes sound soundHandle, string speakerName returns boolean"

GetDialogueSpeakerNameKey=GetDialogueSpeakerNameKey
GetDialogueSpeakerNameKey="GetDialogueSpeakerNameKey(",~soundHandle,")"
GetDialogueSpeakerNameKeyHint="[UjAPI] native GetDialogueSpeakerNameKey takes sound soundHandle returns string"

SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(",~soundHandle,", ",~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI] native SetDialogueTextKey takes sound soundHandle, string dialogueText returns boolean"

GetDialogueTextKey=GetDialogueTextKey
GetDialogueTextKey="GetDialogueTextKey(",~soundHandle,")"
GetDialogueTextKeyHint="[UjAPI] native GetDialogueTextKey takes sound soundHandle returns string"

CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(",~abilityTypeId,", ",~orderName,")"
CreateCommandButtonEffectHint="[UjAPI] native CreateCommandButtonEffect takes integer abilityTypeId, string orderName returns commandbuttoneffect"

CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(",~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI] native CreateUpgradeCommandButtonEffect takes integer whichUprgade returns commandbuttoneffect"

CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(",~abilityTypeId,")"
CreateLearnCommandButtonEffectHint="[UjAPI] native CreateLearnCommandButtonEffect takes integer abilityTypeId returns commandbuttoneffect"

GetSpellAbilityId=Ability Being Cast
GetSpellAbilityId="Ability being cast"
GetSpellAbilityIdHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast.

     =JASS Code
     =~Script Code"
     Hint=Enter JASS code that returns an ability (integer). Example: 'Aloc' [UMSWE]

IsDestructableAliveBJ=Destructible Is Alive
IsDestructableAliveBJ=~Destructible," is alive"

IsDestructableDeadBJ=Destructible Is Dead
IsDestructableDeadBJ=~Destructible," is dead"

IsDestructableInvulnerableBJ=Destructible Is Invulnerable
IsDestructableInvulnerableBJ=~Destructible," is invulnerable"

IsPointBlightedBJ=Point Is Blighted
IsPointBlightedBJ=~Point," is blighted"

IsTerrainPathableBJ=Terrain Pathing Is Off
IsTerrainPathableBJ="Terrain pathing at ",~Location," of type ",~Pathing Type," is off"
IsTerrainPathableBJHint=Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing.

IsMapFlagSet=Map Flag Set
IsMapFlagSet=~Map Flag," is set"

IsCustomCampaignButtonVisibile=Custom Campaign Button Is Visible
IsCustomCampaignButtonVisibile="Custom campaign button ",~Number," is visible"

GetCreepCampFilterState=Creep Camp Display Is On
GetCreepCampFilterState="Creep camp minimap display is turned on"

SaveGameExists=Saved-Game Exists
SaveGameExists="The ",~Filename," saved-game exists"

GetStoredBooleanBJ=Load Boolean Value
GetStoredBooleanBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredBooleanBJHint=If the label is not found, this function returns False.

LoadBooleanBJ=Load Boolean Value (hashtable)
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint=If the label is not found, this function returns False.

HaveStoredValue=Cache Value Exists
HaveStoredValue=~Label," is stored as a ",~Type," of ",~Category," in ",~Game Cache

HaveSavedValue=Hashtable Value Exists
HaveSavedValue=~Value," is stored as a ",~Type," of ",~Value," in ",~Hashtable

UnitHasItem=Hero Has Item
UnitHasItem=~Hero," has ",~Item

UnitHasItemOfTypeBJ=Hero Has Item Of Type
UnitHasItemOfTypeBJ=~Hero," has an item of type ",~Item-Type

IsSuspendedXP=Experience Is Disabled For Hero
IsSuspendedXP="Experience is disabled for ",~Hero
IsSuspendedXPHint=Use the 'Hero - Enable/Disable Experience' action to disable a Hero's experience.

CheckItemStatus=Item Status Check
CheckItemStatus=~Item," is ",~Status

CheckItemcodeStatus=Item-Type Status Check
CheckItemcodeStatus=~Item-Type," is ",~Status

IsItemHiddenBJ=Item Is Hidden
IsItemHiddenBJ=~Item," is hidden"
IsItemHiddenBJHint=Items held by units are considered hidden.

IsItemOwned=Item Is Owned
IsItemOwned=~Item," is owned"
IsItemOwnedHint=Any item in a unit's inventory is considered owned, even if the owner is dead.

RectContainsItem=Item In Rect
RectContainsItem=~Item," is in ",~Rect
RectContainsItemHint=An owned item is not considered to be in any rects.

IsItemInvulnerable=Item Is Invulnerable
IsItemInvulnerable=~Item," is invulnerable"

LeaderboardHasPlayerItemBJ=Leaderboard Contains Player
LeaderboardHasPlayerItemBJ=~Leaderboard," contains ",~Player

IsMultiboardDisplayed=Multiboard Is Showing
IsMultiboardDisplayed=~Multiboard," is showing"

IsMultiboardMinimized=Multiboard Is Minimized
IsMultiboardMinimized=~Multiboard," is minimized"

WaygateIsActiveBJ=Way Gate Is Enabled
WaygateIsActiveBJ=~Way Gate," is enabled"

IsPlayerFlagSetBJ=Player Flag Is On
IsPlayerFlagSetBJ=~Player Flag," is on for ",~Player

IsPlayerAlly=Player Is An Ally Of Player
IsPlayerAlly=~Player," is an ally of ",~Player

IsPlayerEnemy=Player Is An Enemy Of Player
IsPlayerEnemy=~Player," is an enemy of ",~Player

GetPlayerAlliance=Player Alliance Towards Player
GetPlayerAlliance=~Player," is giving ",~Player," ",~Alliance Type

IsPlayerInForce=Player In Player Group
IsPlayerInForce=~Player," is in ",~Player Group

IsQuestItemCompleted=Quest Requirement Is Completed
IsQuestItemCompleted=~Quest Requirement," is completed"

IsQuestEnabled=Quest Is Enabled
IsQuestEnabled=~Quest," is enabled"

IsQuestCompleted=Quest Is Completed
IsQuestCompleted=~Quest," is completed"

IsQuestFailed=Quest Is Failed
IsQuestFailed=~Quest," is failed"

IsQuestDiscovered=Quest Is Discovered
IsQuestDiscovered=~Quest," is discovered"

IsQuestRequired=Quest Is Required
IsQuestRequired=~Quest," is required"

RectContainsLoc=Region Contains Point
RectContainsLoc=~Region," contains ",~Point

IsTriggerEnabled=Trigger Is On
IsTriggerEnabled=~Trigger," is on"

TriggerEvaluate=Evaluate Trigger Conditions
TriggerEvaluate="Evaluate ",~Trigger," conditions"

IsTriggerQueuedBJ=Trigger Is Queued
IsTriggerQueuedBJ=~Trigger," is queued"
IsTriggerQueuedBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsTriggerQueueEmptyBJ=Trigger Queue Is Empty
IsTriggerQueueEmptyBJ="The trigger queue is empty"
IsTriggerQueueEmptyBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsUnitType=Unit Classification Check
IsUnitType=~Unit," is ",~Type

IsUnitIdType=Unit-Type Classification Check
IsUnitIdType=~Unit-Type," is ",~Type

IsUnitInGroup=Unit In Unit Group
IsUnitInGroup=~Unit," is in ",~Unit Group

RectContainsUnit=Unit In Rect
RectContainsUnit=~Rect," contains ",~Unit

IsUnitAliveBJ=Unit Is Alive
IsUnitAliveBJ=~Unit," is alive"

IsUnitDeadBJ=Unit Is Dead
IsUnitDeadBJ=~Unit," is dead"

IsUnitPausedBJ=Unit Is Paused
IsUnitPausedBJ=~Unit," is paused"

IsUnitHiddenBJ=Unit Is Hidden
IsUnitHiddenBJ=~Unit," is hidden"
IsUnitHiddenBJHint=A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc.

IsUnitIllusionBJ=Unit Is An Illusion
IsUnitIllusionBJ=~Unit," is an illusion"

UnitCanSleepPerm=Unit Sleeps
UnitCanSleepPerm=~Unit," sleeps when unprovoked"
UnitCanSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitCanSleepBJ=Unit Sleeps At Night
UnitCanSleepBJ=~Unit," sleeps when unprovoked at night"
UnitCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitIsSleepingBJ=Unit Is Sleeping
UnitIsSleepingBJ=~Unit," is sleeping"
UnitIsSleepingBJHint=Units owned by players 1 through 12 never sleep.

DoesUnitGenerateAlarms=Unit Generates Alarms
DoesUnitGenerateAlarms=~Unit," generates alarms"

IsUnitLoadedBJ=Unit Is Being Transported
IsUnitLoadedBJ=~Unit," is being transported"

IsUnitInTransportBJ=Unit Is In Transport
IsUnitInTransportBJ=~Unit," is loaded into ",~Transport

IsUnitSelected=Unit Selected By Player
IsUnitSelected=~Unit," is selected by ",~Player

IsUnitAlly=Unit Belongs To An Ally Of Player
IsUnitAlly=~Unit," belongs to an ally of ",~Player

IsUnitEnemy=Unit Belongs To An Enemy Of Player
IsUnitEnemy=~Unit," belongs to an enemy of ",~Player

UnitHasBuffBJ=Unit Has Specific Buff
UnitHasBuffBJ=~Unit," has buff ",~Buff

IsUnitGroupEmptyBJ=Unit Group Is Empty
IsUnitGroupEmptyBJ=~Unit Group," is empty"
IsUnitGroupEmptyBJHint=This is true if the unit group contains no units.

IsUnitGroupInRectBJ=Units Of Unit Group Are In Rect
IsUnitGroupInRectBJ="All units of ",~Unit Group," are in ",~Rect
IsUnitGroupInRectBJHint=This is true if every unit in the unit group is in the given rect.

IsUnitGroupDeadBJ=Units Of Unit Group Are Dead
IsUnitGroupDeadBJ="All units of ",~Unit Group," are dead"
IsUnitGroupDeadBJHint=This is true if every unit in the unit group is dead.

IsFogEnabled=Fog Of War Enabled
IsFogEnabled="Fog of war is enabled"

IsFogMaskEnabled=Black Mask Enabled
IsFogMaskEnabled="Black mask is enabled"

IsUnitVisible=Unit Is Visible To Player
IsUnitVisible=~Unit," is visible to ",~Player

IsUnitInvisible=Unit Is Invisible To Player
IsUnitInvisible=~Unit," is invisible to ",~Player

IsUnitFogged=Unit Fogged To Player
IsUnitFogged=~Unit," is fogged to ",~Player

IsUnitMasked=Unit Is Masked To Player
IsUnitMasked=~Unit," is masked to ",~Player

IsLocationVisibleToPlayer=Point Visible To Player
IsLocationVisibleToPlayer=~Point," is visible to ",~Player

IsLocationFoggedToPlayer=Point Fogged To Player
IsLocationFoggedToPlayer=~Point," is fogged for ",~Player

IsLocationMaskedToPlayer=Point Masked To Player
IsLocationMaskedToPlayer=~Point," is masked for ",~Player

IsTimerDialogDisplayed=Timer Dialog Is Displayed
IsTimerDialogDisplayed=~Timer Window," is displayed"
IsTimerDialogDisplayedHint=A timer window is showing [UMSWE]

IsLeaderboardDisplayed=Leaderboard Is Displayed
IsLeaderboardDisplayed=~Leaderboard," is displayed"
IsLeaderboardDisplayedHint=[UMSWE]

IsLocationInRegion=Is Point In Region
IsLocationInRegion="Does ",~Region," contain point ",~Location
IsLocationInRegionHint=[UMSWE]

IsUnitInRegion=Is Unit In Region
IsUnitInRegion="Does ",~Region," contain unit ",~Unit
IsUnitInRegionHint=[UMSWE]

IsPointInRegion=Region Contains Coordinates
IsPointInRegion=~Region," contains offset (",~Real,", ",~Real,")"
IsPointInRegionHint=[UMSWE]

IsUnitInForce=Unit In Player Group
IsUnitInForce=~Unit," is in ",~Player Group
IsUnitInForceHint=[UMSWE]

IsUnitOwnedByPlayer=Unit Is Owned by Player
IsUnitOwnedByPlayer=~Unit," is owned by ",~Player
IsUnitOwnedByPlayerHint=[UMSWE]

IsUnitInRange=Is Unit in Range of Unit
IsUnitInRange="Is ",~Unit," near ",~Unit," and withing a range of ",~Range
IsUnitInRangeHint=[UMSWE]

IsUnitInRangeLoc=Is Unit in Range of Point
IsUnitInRangeLoc="Is ",~Unit," near ",~Point," and within a range of ",~Range
IsUnitInRangeLocHint=[UMSWE]

IsUnitRace=Unit Race Check
IsUnitRace=~Unit," is a ",~Race
IsUnitRaceHint=Checks what race a unit is [UMSWE]

CompareRectsBJ=Rect Matches Rect
CompareRectsBJ=~Rect," matches ",~Rect
CompareRectsBJHint=Use this to compare rects [UMSWE]

CompareLocationsBJ=Location Matches Location
CompareLocationsBJ=~Point," matches ",~Point
CompareLocationsBJHint=Use this to compare locations [UMSWE]

RectContainsCoords=Rect Contains Coordinates
RectContainsCoords=~Rect," contains (",~Real,", ",~Real,")"
RectContainsCoordsHint=A rect contains the point (x,y) [UMSWE]

UnitIgnoreAlarmToggled=Does Unit Ignore Alarm
UnitIgnoreAlarmToggled="Does unit ",~Unit," ignore alarm"
UnitIgnoreAlarmToggledHint=[UMSWE]

HaveStoredInteger=Is Integer Stored
HaveStoredInteger="Is Integer in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredIntegerHint=[UMSWE]

HaveStoredBoolean=Is Boolean Stored
HaveStoredBoolean="Is Boolean in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredBooleanHint=[UMSWE]

HaveStoredReal=Is Real Stored
HaveStoredReal="Is Real in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredRealHint=[UMSWE]

HaveStoredUnit=Is Unit Stored
HaveStoredUnit="Is Unit in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredUnitHint=[UMSWE]

HaveStoredString=Is String Stored
HaveStoredString="Is String in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredStringHint=[UMSWE]

      =JASS Code
      =~Script Code"
      Hint=Enter JASS code that returns a boolean value. Example: MyBoolean() [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

ReviveHeroLoc=Revive Hero (Instantly)
ReviveHeroLoc="Successful: Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive. [UMSWE]

UnitMakeAbilityPermanent=Unit Make Ability Permanent
UnitMakeAbilityPermanent="Successful: For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentHint=[UMSWE]

UnitAddAbilityBJ=Unit Add Ability
UnitAddAbilityBJ="Successful: Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint=[UMSWE]

UnitRemoveAbilityBJ=Unit Remove Ability
UnitRemoveAbilityBJ="Successful: Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent. [UMSWE]

UnitRemoveBuffBJ=Unit Remove Specific Buff
UnitRemoveBuffBJ="Successful: Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint=[UMSWE]

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Successful: Give ",~Item," to ",~Hero
UnitAddItemSwappedHint=[UMSWE]

UnitAddItemByIdSwapped=Unit Create Item For Hero
UnitAddItemByIdSwapped="Successful: Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint=[UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Successful: Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

UnitUseItem=Unit Use Item
UnitUseItem="Successful: Order ",~Hero," to use ",~Item
UnitUseItemHint=[UMSWE]

UnitUseItemTarget=Unit Use Item On A Unit
UnitUseItemTarget="Successful: Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint=[UMSWE]

UnitUseItemPointLoc=Unit Use Item On A Point
UnitUseItemPointLoc="Successful: Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint=[UMSWE]

UnitUseItemDestructable=Unit Use Item On A Destructible
UnitUseItemDestructable="Successful: Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint=[UMSWE]

IssueInstantTargetOrder=Give Item from Hero to Hero
IssueInstantTargetOrder="Successful: Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueImmediateOrder=Unit Issue Order With No Target
IssueImmediateOrder="Successful: Order ",~Unit," to ",~Order
IssueImmediateOrderHint=[UMSWE]

IssuePointOrderLoc=Unit Issue Order Targeting A Point
IssuePointOrderLoc="Successful: Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint=[UMSWE]

IssueTargetOrder=Unit Issue Order Targeting A Unit
IssueTargetOrder="Successful: Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint=[UMSWE]

IssueTargetDestructableOrder=Unit Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Successful: Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=[UMSWE]

IssueTargetOrderBJ=Unit Issue Order Targeting An Item
IssueTargetOrderBJ="Successful: Order ",~Unit," to ",~Order," ",~Item
IssueTargetOrderBJHint=[UMSWE]

IssueBuildOrderByIdLocBJ=Unit Issue Build Order
IssueBuildOrderByIdLocBJ="Successful: Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint=[UMSWE]

IssueTrainOrderByIdBJ=Unit Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Successful: Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep. [UMSWE]

IssueUpgradeOrderByIdBJ=Unit Issue Research Order
IssueUpgradeOrderByIdBJ="Successful: Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action. [UMSWE]

IssueNeutralImmediateOrderById=Player Buy Unit from Store
IssueNeutralImmediateOrderById="Successful: For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

GroupTargetOrder=Group Issue Order Targeting A Unit
GroupTargetOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetDestructableOrder=Group Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderBJ=Group Issue Order Targeting An Item
GroupTargetOrderBJ="Successful: Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLoc=Group Issue Order Targeting A Point
GroupPointOrderLoc="Successful: Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrder=Group Issue Order With No Target
GroupImmediateOrder="Successful: Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTrainOrderByIdBJ=Group Issue Train Order
GroupTrainOrderByIdBJ="Successful: Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group. [UMSWE]

IsUnitInRangeXY=Unit Is In Range Of Coordinate Offset
IsUnitInRangeXY="The distance between ",~Unit," and offset(",~X,", ",~Y,") matches ",~Range
IsUnitInRangeXYHint=Just here for COMPATIBILITY reasons. [UMSWE]

GetCurrentCameraSetup=Current Camera
GetCurrentCameraSetup="Current camera"

LoadDestructableHandleBJ=Load Destructable Handle
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDestructable=Last Created Destructible
GetLastCreatedDestructable="Last created destructible"
GetLastCreatedDestructableHint=This is the last destructible created via a 'Destructible - Create' trigger action.

RandomDestructableInRectSimpleBJ=Random Destructible In Region
RandomDestructableInRectSimpleBJ="Random destructible in ",~Region

RandomDestructableInRectBJ=Random Destructible In Region Matching Condition
RandomDestructableInRectBJ="Random destructible in ",~Region," matching ",~Condition
RandomDestructableInRectBJHint=Use 'Matching Destructible' to refer to the destructible being considered.

GetEnumDestructable=Picked Destructible
GetEnumDestructable="Picked destructible"
GetEnumDestructableHint=When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked.

GetFilterDestructable=Matching Destructible
GetFilterDestructable="Matching destructible"
GetFilterDestructableHint=Use this to refer to the destructible being considered for the 'Random Destructible' functions.

GetDyingDestructable=Dying Destructible
GetDyingDestructable="Dying destructible"
GetDyingDestructableHint=When responding to a 'Destructible Dies' event, this refers to the destructible that is dying.

GetOrderTargetDestructable=Target Destructible Of Issued Order
GetOrderTargetDestructable="Target destructible of issued order"
GetOrderTargetDestructableHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a destructible target, this refers to the target of the order.

GetSpellTargetDestructable=Target Destructible Of Ability Being Cast
GetSpellTargetDestructable="Target destructible of ability being cast"
GetSpellTargetDestructableHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast.

GetUnitRallyDestructable=Rally-Point As Destructible
GetUnitRallyDestructable="Rally-Point of ",~Unit," as a destructible"
GetUnitRallyDestructableHint=If the unit does not have a rally-point set to a destructible, this will return 'No destructible'.

CreateDestructableZ=Create with Z offset
CreateDestructableZ="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

CreateDeadDestructableZ=Create with Z offset (dead)
CreateDeadDestructableZ="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

       =JASS Code
       =~Script Code"
       Hint=Enter JASS code that returns a destructible (~=handle). Example: MyDestructable() [UMSWE]

GetDestructableTypeId=Destructible-Type of Destructible
GetDestructableTypeId="Destructible-type of ",~Destructible

        =JASS Code
        =~Script Code"
        Hint=Enter JASS code that returns a destructible type (integer). Example: 'LTlt' [UMSWE]

LoadDefeatConditionHandleBJ=Load Defeatcondition Handle
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDefeatConditionBJ=Last Created Defeat Condition
GetLastCreatedDefeatConditionBJ="Last created defeat condition"
GetLastCreatedDefeatConditionBJHint=This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action.

LoadDialogHandleBJ=Load Dialog Handle
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint=If the label is not found, this function returns NULL.

GetClickedDialogBJ=Clicked Dialog
GetClickedDialogBJ="Clicked dialog"
GetClickedDialogBJHint=When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button.

DialogCreate=New Dialog
DialogCreate="New Dialog"
DialogCreateHint=Used to initialize a dialog array or clear a dialog variable [UMSWE]

         =JASS Code
         =~Script Code"
         Hint=Enter JASS code that returns a dialog. Example: MyDialog() [UMSWE]

LoadButtonHandleBJ=Load Button Handle
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedButtonBJ=Last Created Dialog Button
GetLastCreatedButtonBJ="Last created dialog Button"
GetLastCreatedButtonBJHint=This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action.

GetClickedButtonBJ=Clicked Dialog Button
GetClickedButtonBJ="Clicked dialog button"
GetClickedButtonBJHint=When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked.

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey ",~Keycode
DialogAddButtonHint=Creates a dialog button with a hotkey based on ASCII value. [UMSWE]

          =JASS Code
          =~Script Code"
          Hint=Enter JASS code that returns a dialog button. Example: MyButton() [UMSWE]

LoadTextTagHandleBJ=Load Texttag Handle
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable

GetLastCreatedTextTag=Last Created Floating Text
GetLastCreatedTextTag="Last created floating text"
GetLastCreatedTextTagHint=This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action.

            =JASS Code
            =~Script Code"
            Hint=Enter JASS code that returns a Floating Text. Example: MyTexttag() [UMSWE]

GetLastCreatedGameCacheBJ=Last Created Game Cache
GetLastCreatedGameCacheBJ="Last created game cache"
GetLastCreatedGameCacheBJHint=This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action.

InitGameCache=Create
InitGameCache="Create a game cache from ",~FileName
InitGameCacheHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created. [UMSWE]

GetGameSpeed=Current Game Speed
GetGameSpeed="Current game speed"

GetLastCreatedHashtableBJ=Last Created Hashtable
GetLastCreatedHashtableBJ="Last created hashtable"
GetLastCreatedHashtableBJHint=This is the last hashtable created via a 'Hashtable - Create Hashtable' trigger action.

LoadImageHandleBJ=Load Image Handle
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedImage=Last Created Image
GetLastCreatedImage="Last created image"

  =JASS Code
  =~Script Code"
  Hint=Enter JASS code that returns an image. Example: MyImage() [UMSWE]

GetHandleIdBJ=Get Handle ID
GetHandleIdBJ="Key ",~Handle
GetHandleIdBJHint=Creates a key from a handle for use in the hashtable.

StringHashBJ=Get String ID
StringHashBJ="Key ",~String
StringHashBJHint=Creates a key from a string for use in the hashtable.

LoadIntegerBJ=Load Integer Value (hashtable)
LoadIntegerBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadIntegerBJHint=If the label is not found, this function returns 0.

OperatorInt=Arithmetic
OperatorInt=~Value," ",~Operator," ",~Value

GetForLoopIndexA=For Loop Integer A
GetForLoopIndexA="Integer A"

GetForLoopIndexB=For Loop Integer B
GetForLoopIndexB="Integer B"

StringLength=String Length
StringLength="Length of ",~String

R2I=Convert Real To Integer
R2I="Integer(",~Real,")"

S2I=Convert String To Integer
S2I="Integer(",~String,")"

GetElevatorHeight=Elevator Height
GetElevatorHeight="Height of ",~Elevator
GetElevatorHeightHint=An elevator's height can be changed using the 'Destructible - Set Elevator Height' action.

GetTerrainCliffLevelBJ=Terrain Cliff Level
GetTerrainCliffLevelBJ="Terrain cliff level at ",~Location
GetTerrainCliffLevelBJHint=Cliff level values start at zero.

GetTerrainVarianceBJ=Terrain Variance
GetTerrainVarianceBJ="Terrain variance at ",~Location

GetLearnedSkillLevel=Learned Skill Level
GetLearnedSkillLevel="Learned skill level"

GetPlayers=Number Of Players
GetPlayers="Number of players"

GetTeams=Number Of Teams
GetTeams="Number of teams"

GetAllyColorFilterState=Ally Color Filter Setting
GetAllyColorFilterState="Ally color filter setting"
GetAllyColorFilterStateHint=A value of 0 indicates that filtering is disabled.  A value of 1 indicates that filtering is only enabled for the minimap.  A value of 2 indicates that filtering is enabled for the minimap and the game view.

GetTournamentFinishNowRule=Tournament Finish Rule
GetTournamentFinishNowRule="Tournament finish rule"
GetTournamentFinishNowRuleHint=A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw.

GetTournamentScore=Tournament Melee Score
GetTournamentScore="Tournament melee score for ",~Player
GetTournamentScoreHint=This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long.

GetStoredIntegerBJ=Load Integer Value
GetStoredIntegerBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredIntegerBJHint=If the label is not found, this function returns 0.

GetHeroLevel=Hero Level
GetHeroLevel="Hero level of ",~Hero

GetHeroXP=Hero Experience
GetHeroXP="Hero experience of ",~Hero

GetHeroStatBJ=Hero Attribute
GetHeroStatBJ=~Attribute," of ",~Hero," (",~Include/Exclude," bonuses)"

GetHeroSkillPoints=Unspent Skill Points
GetHeroSkillPoints="Unspent skill points of ",~Hero

GetItemLevel=Item Level
GetItemLevel="Item level of ",~Item

GetItemCharges=Item Charges Remaining
GetItemCharges="Charges remaining in ",~Item
GetItemChargesHint=Items with unlimited charges will return zero.

GetItemUserData=Custom Value Of Item
GetItemUserData="Custom value of ",~Item
GetItemUserDataHint=Use 'Item - Set Custom Value' to set the custom value of an item.

LeaderboardGetPlayerIndexBJ=Leaderboard Position
LeaderboardGetPlayerIndexBJ="Position of ",~Player," in ",~Leaderboard

GetRandomInt=Random Number
GetRandomInt="Random integer number between ",~Minimum," and ",~Maximum

IMinBJ=Min
IMinBJ="Min(",~Value 1,", ",~Value 2,")"

IMaxBJ=Max
IMaxBJ="Max(",~Value 1,", ",~Value 2,")"

IAbsBJ=Abs
IAbsBJ="Abs(",~Value,")"
IAbsBJHint=Calculates the absolute value of a number.

ISignBJ=Sign
ISignBJ="Sign(",~Value,")"
ISignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloInteger=Modulo
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint=Calculates the remainder of a division.  Example: 12 mod 5 = 2.

MultiboardGetRowCount=Row Count
MultiboardGetRowCount="Number of rows in ",~Multiboard

MultiboardGetColumnCount=Column Count
MultiboardGetColumnCount="Number of columns in ",~Multiboard

GetResourceAmount=Gold Remaining
GetResourceAmount="Resource quantity contained in ",~Gold Mine
GetResourceAmountHint=This is for use with Gold Mines.

GetPlayerState=Player Property
GetPlayerState=~Player," ",~Property

GetPlayerTaxRateBJ=Player Tax Rate
GetPlayerTaxRateBJ="Tax rate of ",~Resource," from ",~Player," to ",~Player
GetPlayerTaxRateBJHint=The tax rate value is a percentage of total income (0-100).

GetPlayerScore=Player Score
GetPlayerScore=~Player," ",~Score

GetConvertedPlayerId=Player Number
GetConvertedPlayerId="Player number of ",~Player
GetConvertedPlayerIdHint=Player numbers range from 1 to 16.

GetPlayerStructureCount=Count Structures
GetPlayerStructureCount="Count structures controlled by ",~Player," (",~Include/Exclude," incomplete structures)"

GetPlayerUnitCount=Count Non-Structure Units
GetPlayerUnitCount="Count non-structure units controlled by ",~Player," (",~Include/Exclude," incomplete units)"

GetPlayerTechCountSimple=Current Research Level
GetPlayerTechCountSimple="Current research level of ",~Tech," for ",~Player
GetPlayerTechCountSimpleHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTechMaxAllowedSwap=Max Research Level
GetPlayerTechMaxAllowedSwap="Max research level of ",~Tech," for ",~Player
GetPlayerTechMaxAllowedSwapHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTeam=Player Team
GetPlayerTeam="Team number of ",~Player

CountPlayersInForceBJ=Count Players In Player Group
CountPlayersInForceBJ="Number of players in ",~Player Group

CountUnitsInGroup=Count Units In Unit Group
CountUnitsInGroup="Number of units in ",~Unit Group

CountLivingPlayerUnitsOfTypeId=Count Living Units Owned By Player
CountLivingPlayerUnitsOfTypeId="Number of living ",~Unit-Type," units owned by ",~Player

GetUnitFoodUsed=Supply Used By Unit
GetUnitFoodUsed="Supply used by ",~Unit

GetUnitFoodMade=Supply Provided By Unit
GetUnitFoodMade="Supply provided by ",~Unit

GetFoodUsed=Supply Used By Unit-Type
GetFoodUsed="Supply used by ",~Unit-Type

GetFoodMade=Supply Provided By Unit-Type
GetFoodMade="Supply provided by ",~Unit-Type

GetUnitPointValue=Point-Value Of Unit
GetUnitPointValue="Point-value of ",~Unit

GetUnitPointValueByType=Point-Value Of Unit-Type
GetUnitPointValueByType="Point-value of ",~Unit-Type

GetUnitUserData=Custom Value Of Unit
GetUnitUserData="Custom value of ",~Unit
GetUnitUserDataHint=Use 'Unit - Set Custom Value' to set the custom value of a unit.

GetUnitLevel=Level Of Unit
GetUnitLevel="Level of ",~Unit
GetUnitLevelHint=This may be used for heroes and regular units.

GetUnitAbilityLevelSwapped=Level Of Ability For Unit
GetUnitAbilityLevelSwapped="Level of ",~Ability," for ",~Unit
GetUnitAbilityLevelSwappedHint=If the unit does not have the ability, the result will be zero.

UnitInventoryCount=Count Items Carried
UnitInventoryCount="Number of items carried by ",~Unit

UnitInventorySizeBJ=Size of Inventory
UnitInventorySizeBJ="Size of inventory for ",~Unit

UnitCountBuffsExBJ=Count Buffs By Type
UnitCountBuffsExBJ="Number of ",~Buff Type," buffs considered ",~Buff Resist," on ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

GetTriggerEvalCount=Trigger Evaluation Count
GetTriggerEvalCount="Evaluation count of ",~Trigger

GetTriggerExecCount=Trigger Execution Count
GetTriggerExecCount="Execution count of ",~Trigger

QueuedTriggerCountBJ=Count Triggers In Trigger Queue
QueuedTriggerCountBJ="Number of triggers in the trigger queue"
QueuedTriggerCountBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IntegerTertiaryOp=Tertiary Integer Option
IntegerTertiaryOp="If ",~Condition," is equal to true then use ",~Nr," else use ",~Nr
IntegerTertiaryOpHint=[UMSWE]

GetIntegerGameState=Game State
GetIntegerGameState=~Gamestate"
GetIntegerGameStateHint=[UMSWE]

LeaderboardGetItemCount=Leaderboard Player Count
LeaderboardGetItemCount="Player count of ",~Leaderboard
LeaderboardGetItemCountHint=[UMSWE]

QueuedTriggerGetIndex=Index Of Queued Trigger
QueuedTriggerGetIndex="Index of ",~Trigger," in the trigger queue"
QueuedTriggerGetIndexHint=Searches the queue for a given trigger, returning the index of the trigger within the queue if it is found, or -1 if it is not found [UMSWE]

GetPlayerTypedUnitCount=Count Units of Player of Type
GetPlayerTypedUnitCount="Count units of player ",~Player," of type ",~unitname," and include incomplete units ",~Include," and include currently upgrading buildings ",~Include
GetPlayerTypedUnitCountHint=Use the names of the 6th column of UnitUI.slk as unitnames [UMSWE]

             =JASS Code
             =~Script Code"
             Hint=Enter JASS code that returns an integer value. Example: 0xFF

GetUnitAbilityLevel=Level Of Buff For Unit
GetUnitAbilityLevel="For ",~Unit," the level of ",~Buff
GetUnitAbilityLevelHint=ust here for COMPATIBILITY reasons. Would return 1 if the unit has the buff [UMSWE]

LoadItemHandleBJ=Load Item Handle
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedItem=Last Created Item
GetLastCreatedItem="Last created item"
GetLastCreatedItemHint=This is the last item created via an 'Item - Create' or 'Hero - Create Item For Hero' trigger action.

GetLastRemovedItem=Last Dropped Item
GetLastRemovedItem="Last dropped item"
GetLastRemovedItemHint=This is the last item dropped via a 'Hero - Drop Item' trigger action.

RandomItemInRectSimpleBJ=Random Item In Region
RandomItemInRectSimpleBJ="Random item in ",~Region

RandomItemInRectBJ=Random Item In Region Matching Condition
RandomItemInRectBJ="Random item in ",~Region," matching ",~Condition
RandomItemInRectBJHint=Use 'Matching Item' to refer to the item being considered.

GetEnumItem=Picked Item
GetEnumItem="Picked item"
GetEnumItemHint=When using the 'Pick Every Item...' action, this refers to each item as it is picked.

GetFilterItem=Matching Item
GetFilterItem="Matching item"
GetFilterItemHint=Use this to refer to the item being considered for the 'Random Item' functions.

UnitItemInSlotBJ=Item Carried By Hero
UnitItemInSlotBJ="Item carried by ",~Hero," in slot ",~Index

GetItemOfTypeFromUnitBJ=Item Carried By Hero Of Type
GetItemOfTypeFromUnitBJ="Item carried by ",~Hero," of type ",~Item-Type

GetManipulatedItem=Item Being Manipulated
GetManipulatedItem="Item being manipulated"
GetManipulatedItemHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated.

GetSoldItem=Sold Item
GetSoldItem="Sold Item"
GetSoldItemHint=When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold.

GetOrderTargetItem=Target Item Of Issued Order
GetOrderTargetItem="Target item of issued order"
GetOrderTargetItemHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order.

GetSpellTargetItem=Target Item Of Ability Being Cast
GetSpellTargetItem="Target item of ability being cast"
GetSpellTargetItemHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast.

CreateItemLoc=Create Item At Location
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint=[UMSWE]

              =JASS Code
              =~Script Code"
              Hint=Enter JASS code that returns an item (~=handle). Example: MyItem() [UMSWE]

GetItemType=Item-Class Of Item
GetItemType="Item-class of ",~Item

GetItemTypeId=Item-Type Of Item
GetItemTypeId="Item-type of ",~Item

ChooseRandomItemBJ=Random Item-Type
ChooseRandomItemBJ="Random level ",~Level," item-type"
ChooseRandomItemBJHint=This function corresponds to the original unclassified item system with levels 0-10.  Use -1 for any level.

ChooseRandomItemExBJ=Random Item-Type Of Class
ChooseRandomItemExBJ="Random level ",~Level," ",~Class," item-type"
ChooseRandomItemExBJHint=This function corresponds to the newer item classification system with levels 0-8.  Use -1 for any level.

RandomDistChoose=Get Random Item From Pool
RandomDistChoose="Get a random item from your own item pool"
RandomDistChooseHint=Use 'Add Random Item to Pool' to create your own item pool [UMSWE]

               =JASS Code
               =~Script Code"
               Hint=Enter JASS code that returns an item type (integer). Example: 'phea' [UMSWE]

LoadLeaderboardHandleBJ=Load Leaderboard Handle
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLeaderboard=Last Created Leaderboard
GetLastCreatedLeaderboard="Last created leaderboard"
GetLastCreatedLeaderboardHint=This is the last leaderboard created via a 'Leaderboard - Create Leaderboard' trigger action.

PlayerGetLeaderboardBJ=Leaderboard Of Player
PlayerGetLeaderboardBJ="Leaderboard of ",~Player
PlayerGetLeaderboardBJHint=Each player can have at most one leaderboard.

                =JASS Code
                =~Script Code"
                Hint=Enter JASS code that returns a leaderboard. Example: MyLeaderboard() [UMSWE]

LoadLightningHandleBJ=Load Lightning Handle
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLightningBJ=Last Created Lightning Effect
GetLastCreatedLightningBJ="Last created lightning effect"

   =JASS Code
   =~Script Code"
   Hint=Enter JASS code that returns a lightning. Example: MyLightning() [UMSWE]

LoadMultiboardHandleBJ=Load Multiboard Handle
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedMultiboard=Last Created Multiboard
GetLastCreatedMultiboard="Last created multiboard"
GetLastCreatedMultiboardHint=This is the last multiboard created via a 'Multiboard - Create Multiboard' trigger action.

                 =JASS Code
                 =~Script Code"
                 Hint=Enter JASS code that returns a multiboard value. Example: MyMultiboard() [UMSWE]

CreateMultiboard=Create Multiboard
CreateMultiboard="Create new multiboard"
CreateMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

String2OrderIdBJ=Convert String To Order
String2OrderIdBJ="Order(",~String,")"
String2OrderIdBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2OrderIdBJ=Convert Unit-Type To Order
UnitId2OrderIdBJ="Order(",~Unit-Type,")"

GetIssuedOrderIdBJ=Issued Order
GetIssuedOrderIdBJ="Issued order"
GetIssuedOrderIdBJHint=When responding to 'Is Issued An Order' unit events, this refers to the order being issued.

GetUnitCurrentOrder=Current Order Of Unit
GetUnitCurrentOrder="Current order of ",~Unit

                   =JASS Code
                   =~Script Code"
                   Hint=Enter JASS code that returns an orderid value (integer). Example: 852000 [UMSWE]

LoadPlayerHandleBJ=Load Player Handle
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint=If the label is not found, this function returns NULL.

GetEnumPlayer=Picked Player
GetEnumPlayer="Picked player"
GetEnumPlayerHint=When using the 'Pick Every Player...' action, this refers to each player as he/she is picked.

GetFilterPlayer=Matching Player
GetFilterPlayer="Matching player"
GetFilterPlayerHint=Use this to refer to the player being considered for the 'All Players Matching Condition' function.

GetOwningPlayer=Owner Of Unit
GetOwningPlayer="Owner of ",~Unit

GetItemPlayer=Owner Of Item
GetItemPlayer="Owner of ",~Item

ForcePickRandomPlayer=Random Player From Player Group
ForcePickRandomPlayer="Random player from ",~Player Group

ConvertedPlayer=Convert Player Index To Player
ConvertedPlayer="Player(",~Player Index,")"
ConvertedPlayerHint=Player indexes range from 1 to 16.

GetChangingUnitPrevOwner=Previous Owner
GetChangingUnitPrevOwner="Previous owner"
GetChangingUnitPrevOwnerHint=When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit.

GetTriggerPlayer=Triggering Player
GetTriggerPlayer="Triggering player"

LeaderboardGetIndexedPlayerBJ=Player In Position
LeaderboardGetIndexedPlayerBJ="Player in position ",~Position," of ",~Leaderboard

GetEventDetectingPlayer=Detecting Player
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayerHint=When responding to a 'Unit Is detected' unit event, this refers to the player, who detects the unit [UMSWE]

GetWinningPlayer=Winning Player
GetWinningPlayer="Get winning player"
GetWinningPlayerHint=For victory event [UMSWE]

GetLocalPlayer=Local Player
GetLocalPlayer="Local player"
GetLocalPlayerHint=Use a player comparison with local player to do certain actions just for certain players on bnet. [UMSWE]

                    =JASS Code
                    =~Script Code"
                    Hint=Enter JASS code that returns a Player. Example: MyPlayer() [UMSWE]

GetPlayerColor=Color Of Player
GetPlayerColor="Color of ",~Player

LoadForceHandleBJ=Load Force Handle
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint=If the label is not found, this function returns NULL.

GetPlayersAll=All Players
GetPlayersAll="All players"
GetPlayersAllHint=Includes unused and neutral players.

GetPlayersByMapControl=All Players Of Control
GetPlayersByMapControl="All players controlled by a ",~Control Type," player"

GetPlayersMatching=All Players Matching Condition
GetPlayersMatching="All players matching ",~Condition
GetPlayersMatchingHint=Use 'Matching Player' to refer to the player on whom the comparison is being performed.  This includes unused and neutral players.

GetPlayersAllies=Allies Of Player
GetPlayersAllies="All allies of ",~Player
GetPlayersAlliesHint=All allies of the specified player, including him/herself.

GetPlayersEnemies=Enemies Of Player
GetPlayersEnemies="All enemies of ",~Player
GetPlayersEnemiesHint=All enemies of the specified player.

GetForceOfPlayer=Convert Player To Player Group
GetForceOfPlayer="Player group(",~Player,")"

CreateForce=Create Force
CreateForce="Create new force"
CreateForceHint=Used to initialize force arrays [UMSWE]

                     =JASS Code
                     =~Script Code"
                     Hint=Enter JASS code that returns a Player Group. Example: MyForce() [UMSWE]

LoadLocationHandleBJ=Load Location Handle
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint=If the label is not found, this function returns NULL.

GetRectCenter=Center Of Rect
GetRectCenter="Center of ",~Rect
GetRectCenterHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetRandomLocInRect=Random Point In Rect
GetRandomLocInRect="Random point in ",~Rect
GetRandomLocInRectHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

OffsetLocation=Point With Offset
OffsetLocation=~Point," offset by (",~X,", ",~Y,")"
OffsetLocationHint=The offset values are (X, Y). The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

PolarProjectionBJ=Point With Polar Offset
PolarProjectionBJ=~Point," offset by ",~Distance," towards ",~Angle," degrees"
PolarProjectionBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

CameraSetupGetDestPositionLoc=Target Of Camera Object
CameraSetupGetDestPositionLoc="Target of ",~Camera Object
CameraSetupGetDestPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraTargetPositionLoc=Target Of Current Camera
GetCameraTargetPositionLoc="Target of current camera view"
GetCameraTargetPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraEyePositionLoc=Source Of Current Camera
GetCameraEyePositionLoc="Source of current camera view"
GetCameraEyePositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

Location=Convert Coordinates To Point
Location="Point(",~X,", ",~Y,")"
LocationHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetDestructableLoc=Position Of Destructible
GetDestructableLoc="Position of ",~Destructible
GetDestructableLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetOrderPointLoc=Target Point Of Issued Order
GetOrderPointLoc="Target point of issued order"
GetOrderPointLocHint=When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order. Save it to a variable and later remove it

GetSpellTargetLoc=Target Point Of Ability Being Cast
GetSpellTargetLoc="Target point of ability being cast"
GetSpellTargetLocHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast. Save it to a variable and later remove it

GetItemLoc=Position Of Item
GetItemLoc="Position of ",~Item
GetItemLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

WaygateGetDestinationLocBJ=Way Gate Destination
WaygateGetDestinationLocBJ="Destination of ",~Way Gate
WaygateGetDestinationLocBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetPlayerStartLocationLoc=Player Start Location
GetPlayerStartLocationLoc=~Player," start location"
GetPlayerStartLocationLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitLoc=Position Of Unit
GetUnitLoc="Position of ",~Unit
GetUnitLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitRallyPoint=Rally-Point As Point
GetUnitRallyPoint="Rally-Point of ",~Unit," as a point"
GetUnitRallyPointHint=If the unit has no rally-point set, the result will be (0,0) Save it to a variable and later remove it

                      =JASS Code
                      =~Script Code"
                      Hint=Enter JASS code that returns a Point value. Example: MyLocation() [UMSWE]

LoadQuestHandleBJ=Load Quest Handle
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestBJ=Last Created Quest
GetLastCreatedQuestBJ="Last created quest"
GetLastCreatedQuestBJHint=This is the last quest created via a 'Quest - Create Quest' trigger action.

LoadQuestItemHandleBJ=Load Questitem Handle
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestItemBJ=Last Created Quest Requirement
GetLastCreatedQuestItemBJ="Last created quest requirement"
GetLastCreatedQuestItemBJHint=This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action.

GetPlayerRace=Race Of Player
GetPlayerRace="Race of ",~Player

GetUnitRace=Race Of Unit
GetUnitRace="Race of ",~Unit

LoadRealBJ=Load Real Value (hashtable)
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint=If the label is not found, this function returns 0.

OperatorReal=Arithmetic
OperatorReal=~Value," ",~Operator," ",~Value

GetLocationX=X Of Point
GetLocationX="X of ",~Point

GetLocationY=Y Of Point
GetLocationY="Y of ",~Point

CameraSetupGetFieldSwap=Camera Field Of Camera Object
CameraSetupGetFieldSwap=~Camera Field," of ",~Camera Object

GetCameraField=Camera Field Of Current Camera
GetCameraField=~Camera Field," of the current camera view"

GetCameraTargetPositionX=Target X Of Current Camera
GetCameraTargetPositionX="Target X of current camera view"

GetCameraTargetPositionY=Target Y Of Current Camera
GetCameraTargetPositionY="Target Y of current camera view"

GetCameraTargetPositionZ=Target Z Of Current Camera
GetCameraTargetPositionZ="Target Z of current camera view"

GetCameraEyePositionX=Source X Of Current Camera
GetCameraEyePositionX="Source X of current camera view"

GetCameraEyePositionY=Source Y Of Current Camera
GetCameraEyePositionY="Source Y of current camera view"

GetCameraEyePositionZ=Source Z Of Current Camera
GetCameraEyePositionZ="Source Z of current camera view"

GetLastTransmissionDurationBJ=Last Transmission Length
GetLastTransmissionDurationBJ="Length of last transmission"
GetLastTransmissionDurationBJHint=This is the length, in seconds, of the last used 'Cinematic - Transmission' action.

I2R=Convert Integer To Real
I2R="Real(",~Integer,")"

S2R=Convert String To Real
S2R="Real(",~String,")"

Deg2Rad=Convert Degrees To Radians
Deg2Rad="Radians(",~Degrees,")"

Rad2Deg=Convert Radians To Degrees
Rad2Deg="Degrees(",~Radians,")"

TimerGetElapsed=Elapsed Time
TimerGetElapsed="Elapsed time for ",~Timer

TimerGetRemaining=Remaining Time
TimerGetRemaining="Remaining time for ",~Timer

TimerGetTimeout=Initial Time
TimerGetTimeout="Initial time for ",~Timer

GetDestructableLife=Life
GetDestructableLife="Current life of ",~Destructible
GetDestructableLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableMaxLife=Max Life
GetDestructableMaxLife="Max life of ",~Destructible
GetDestructableMaxLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableOccluderHeight=Occlusion Height
GetDestructableOccluderHeight="Occlusion height of ",~Destructible

GetEventDamage=Damage Taken
GetEventDamage="Damage taken"
GetEventDamageHint=When responding to a 'Takes Damage' unit event, this refers to the amount of damage being taken.

GetTournamentFinishSoonTimeRemaining=Tournament Time Remaining
GetTournamentFinishSoonTimeRemaining="Tournament time remaining"
GetTournamentFinishSoonTimeRemainingHint=When responding to a 'Game must end soon' tournament event, this returns the amount of time remaining, in real-time seconds.

GetTimeOfDay=Time Of Day
GetTimeOfDay="In-game time of day"
GetTimeOfDayHint=This is in game time, not real time.

GetTimeOfDayScalePercentBJ=Time Of Day Speed
GetTimeOfDayScalePercentBJ="Current time of day speed"
GetTimeOfDayScalePercentBJHint=This returns the time of day speed as a percentage of the default time of day speed.

GetStoredRealBJ=Load Real Value
GetStoredRealBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredRealBJHint=If the label is not found, this function returns 0.

GetItemLifeBJ=Item Life
GetItemLifeBJ="Current life of ",~Item

GetLightningColorRBJ=Red Color of Lightning
GetLightningColorRBJ="Red color of ",~Lightning
GetLightningColorRBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorGBJ=Green Color of Lightning
GetLightningColorGBJ="Green color of ",~Lightning
GetLightningColorGBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorBBJ=Blue Color of Lightning
GetLightningColorBBJ="Blue color of ",~Lightning
GetLightningColorBBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorABJ=Alpha Value of Lightning
GetLightningColorABJ="Alpha value of ",~Lightning
GetLightningColorABJHint=This returns a value between 0 and 1.  A value of 0 corresponds to a completely invisible lightning effect.  Use 'Lightning - Set Lightning Effect Color' to change the alpha value of a Lightning Effect.

GetRandomReal=Random Number
GetRandomReal="Random real number between ",~Minimum," and ",~Maximum

GetRandomDirectionDeg=Random Angle
GetRandomDirectionDeg="Random angle"
GetRandomDirectionDegHint=This is a random real number in the range of 0 to 360, for use as an angle or a unit facing.

GetRandomPercentageBJ=Random Percentage
GetRandomPercentageBJ="Random percentage"
GetRandomPercentageBJHint=This is a random real number in the range of 0 to 100, for use as a percentage.

DistanceBetweenPoints=Distance Between Points
DistanceBetweenPoints="Distance between ",~Point," and ",~Point
DistanceBetweenPointsHint=Returns the Euclidean distance between two points, ignoring height.

AngleBetweenPoints=Angle Between Points
AngleBetweenPoints="Angle from ",~Point," to ",~Point
AngleBetweenPointsHint=Returns the angle of a line from one point to another.

RMinBJ=Min
RMinBJ="Min(",~Value 1,", ",~Value 2,")"

RMaxBJ=Max
RMaxBJ="Max(",~Value 1,", ",~Value 2,")"

RAbsBJ=Abs
RAbsBJ="Abs(",~Value,")"
RAbsBJHint=Calculates the absolute value of a number.

RSignBJ=Sign
RSignBJ="Sign(",~Value,")"
RSignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloReal=Modulo
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint=Calculates the remainder of a division.  Example: 9.0 mod 2.5 = 1.5.

Pow=Power
Pow="Power(",~Value,", ",~Power,")"

SquareRoot=Square Root
SquareRoot="Square root(",~Value,")"

SinBJ=Sine
SinBJ="Sin(",~Angle,")"
SinBJHint=The angle specified is expected to be in degrees.

CosBJ=Cosine
CosBJ="Cos(",~Angle,")"
CosBJHint=The angle specified is expected to be in degrees.

TanBJ=Tangent
TanBJ="Tan(",~Angle,")"
TanBJHint=The angle specified is expected to be in degrees.

AsinBJ=Arcsine
AsinBJ="Asin(",~Value,")"
AsinBJHint=The angle returned is in degrees.

AcosBJ=Arccosine
AcosBJ="Acos(",~Value,")"
AcosBJHint=The angle returned is in degrees.

AtanBJ=Arctangent (From Angle)
AtanBJ="Atan(",~Value,")"
AtanBJHint=The angle returned is in degrees.

Atan2BJ=Arctangent (From Deltas)
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint=The angle returned is in degrees.

GetPlayerHandicapXPBJ=Experience Rate
GetPlayerHandicapXPBJ=~Player," experience rate"
GetPlayerHandicapXPBJHint=Experience rates are specified as percentages, with 100% being normal.

GetPlayerHandicapBJ=Handicap
GetPlayerHandicapBJ=~Player," handicap"
GetPlayerHandicapBJHint=Handicap values are specified as percentages, with 100% being normal.

GetRectCenterX=Center X Of Rect
GetRectCenterX="Center X of ",~Rect

GetRectCenterY=Center Y Of Rect
GetRectCenterY="Center Y of ",~Rect

GetRectMinX=Min X Of Rect
GetRectMinX="Min X of ",~Rect

GetRectMinY=Min Y Of Rect
GetRectMinY="Min Y of ",~Rect

GetRectMaxX=Max X Of Rect
GetRectMaxX="Max X of ",~Rect

GetRectMaxY=Max Y Of Rect
GetRectMaxY="Max Y of ",~Rect

GetRectWidthBJ=Width Of Rect
GetRectWidthBJ="Width of ",~Rect

GetRectHeightBJ=Height Of Rect
GetRectHeightBJ="Height of ",~Rect

GetSoundDurationBJ=Sound Length
GetSoundDurationBJ="Length of ",~Sound
GetSoundDurationBJHint=This returns the duration of a sound, in seconds.

GetSoundFileDurationBJ=Music Length
GetSoundFileDurationBJ="Length of ",~Music
GetSoundFileDurationBJHint=This returns the duration of a music score, in seconds.

GetUnitStateSwap=Property
GetUnitStateSwap=~Property," of ",~Unit

GetUnitLifePercent=Percentage Life
GetUnitLifePercent="Percentage life of ",~Unit

GetUnitManaPercent=Percentage Mana
GetUnitManaPercent="Percentage mana of ",~Unit

GetUnitFacing=Facing Angle
GetUnitFacing="Facing of ",~Unit
GetUnitFacingHint=The angle returned is in degrees, with 0 facing east.

GetUnitMoveSpeed=Movement Speed (Current)
GetUnitMoveSpeed="Current movement speed of ",~Unit
GetUnitMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitDefaultMoveSpeed=Movement Speed (Default)
GetUnitDefaultMoveSpeed="Default movement speed of ",~Unit
GetUnitDefaultMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitAcquireRange=Acquisition Range (Current)
GetUnitAcquireRange="Current acquisition range of ",~Unit

GetUnitDefaultAcquireRange=Acquisition Range (Default)
GetUnitDefaultAcquireRange="Default acquisition range of ",~Unit

GetUnitTurnSpeed=Turn Speed (Current)
GetUnitTurnSpeed="Current turn speed of ",~Unit
GetUnitTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitDefaultTurnSpeed=Turn Speed (Default)
GetUnitDefaultTurnSpeed="Default turn speed of ",~Unit
GetUnitDefaultTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitPropWindowBJ=Prop Window Angle (Current)
GetUnitPropWindowBJ="Current prop window angle of ",~Unit

GetUnitDefaultPropWindowBJ=Prop Window Angle (Default)
GetUnitDefaultPropWindowBJ="Default prop window angle of ",~Unit

GetUnitFlyHeight=Flying Height (Current)
GetUnitFlyHeight="Current flying height of ",~Unit
GetUnitFlyHeightHint=Only flying units use flying heights.

GetUnitDefaultFlyHeight=Flying Height (Default)
GetUnitDefaultFlyHeight="Default flying height of ",~Unit

GetUnitX=X Of Unit
GetUnitX="X of ",~Unit
GetUnitXHint=[UMSWE]

GetUnitY=Y Of Unit
GetUnitY="Y of ",~Unit
GetUnitYHint=[UMSWE]

                       =JASS Code
                       =~Script Code"
                       Hint=Enter JASS code that returns a Real value. Example: MyReal() [UMSWE]

LoadRectHandleBJ=Load Rect Handle
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint=If the label is not found, this function returns NULL.

GetCurrentCameraBoundsMapRectBJ=Current Camera Bounds
GetCurrentCameraBoundsMapRectBJ="Current camera bounds"
GetCurrentCameraBoundsMapRectBJHint=This is the area to which the camera target is currently restricted.

GetCameraBoundsMapRect=Initial Camera Bounds
GetCameraBoundsMapRect="Initial camera bounds"
GetCameraBoundsMapRectHint=This is the area to which the camera target is restricted at map initialization.

GetPlayableMapRect=Playable Map Area
GetPlayableMapRect="Playable map area"
GetPlayableMapRectHint=This is the area to which units are restricted.  This area typically extends just beyond the camera bounds.

GetEntireMapRect=Entire Map
GetEntireMapRect="Entire map"
GetEntireMapRectHint=This is the entire map, including areas which cannot normally be reached by units.

OffsetRectBJ=Region With Offset
OffsetRectBJ=~Region," offset by (",~X,", ",~Y,")"
OffsetRectBJHint=The offset values are (X, Y).

RectFromCenterSizeBJ=Convert Point With Size To Region
RectFromCenterSizeBJ="Region centered at ",~Point," with size (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint=The size values are (Width, Height).

Rect=Convert Coordinates To Region
Rect="Region(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint=Choose four coordinates (min X, min Y, max X, max Y) to define a rectangular region on the map.

RectFromLoc=Convert Points To Region
RectFromLoc="Region(",~Point 1,", ",~Point 2,")"
RectFromLocHint=Choose two points to define a rectangular region on the map.

                        =JASS Code
                        =~Script Code"
                        Hint=Enter JASS code that returns a rect value. Example: MyRect() [UMSWE]

LoadSoundHandleBJ=Load Sound Handle
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint=If the label is not found, this function returns NULL.

GetLastPlayedSound=Last Played Sound
GetLastPlayedSound="Last played sound"
GetLastPlayedSoundHint=This is the last sound played via a 'Sound - Play Sound' or 'Cinematic - Transmission' trigger action.

LoadEffectHandleBJ=Load Effect Handle
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedEffectBJ=Last Created Special Effect
GetLastCreatedEffectBJ="Last created special effect"

AddSpecialEffectLoc=Create Special Effect at Point
AddSpecialEffectLoc="Create a special effect using ",~Model File," at ",~Point
AddSpecialEffectLocHint=[UMSWE]

AddSpecialEffect=Create Special Effect at Off-set
AddSpecialEffect="Crate a special effect using ",~Model File," at ",~X," , ",~Y
AddSpecialEffectHint=[UMSWE]

AddSpecialEffectTarget=Create Special Effect at target unit
AddSpecialEffectTarget="Create a special effect using ",~Model File," On ",~Unit," 's ",~Attachment Point
AddSpecialEffectTargetHint=[UMSWE]

                          =JASS Code
                          =~Script Code"
                          Hint=Enter JASS code that returns a special effect. Example: MyEffect() [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Point
AddSpellEffectByIdLoc="Create a special effect using ",~Ability," 's ",~art," at ",~Point
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectById=Create Spell Effect At off-set
AddSpellEffectById="Create a special effect using ",~Ability," 's ",~art," at ",~X," , ",~Y
AddSpellEffectByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create a special effect using ",~Ability," 's ",~art," on ",~Unit," 's ",~Attachment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

LoadStringBJ=Load String Value (hashtable)
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint=If the label is not found, this function returns an empty string.

OperatorString=Concatenate Strings
OperatorString=~String 1," + ",~String 2

SubStringBJ=Substring
SubStringBJ="Substring(",~String,", ",~Start,", ",~End,")"
SubStringBJHint=Example:  Substring(''Grunts stink'', 2, 4) = ''run''.

I2S=Convert Integer To String
I2S="String(",~Integer,")"

R2S=Convert Real To String
R2S="String(",~Real,")"

R2SW=Convert Real To Formatted String
R2SW="String(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint=Examples:  String(1.234, 7, 2) = ''   1.23''.  String(1.234, 2, 5) = ''1.23400''.

OrderId2StringBJ=Convert Order To String
OrderId2StringBJ="String(",~Order,")"
OrderId2StringBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2StringBJ=Convert Unit-Type To String
UnitId2StringBJ="String(",~Unit-Type,")"

StringIdentity=Convert Externalized String
StringIdentity="Externalized string(",~String,")"
StringIdentityHint=Use this to make sure the given string will be externalized in the map string file (war3map.wts).

StringCase=Convert String Case
StringCase="String(",~String,") as ",~Lower/Upper Case
StringCaseHint=All letters in the string will be changed to the selected case.

GetDestructableName=Destructible Name
GetDestructableName="Name of ",~Destructible

GetEventPlayerChatString=Entered Chat String
GetEventPlayerChatString="Entered chat string"

GetEventPlayerChatStringMatched=Matched Chat String
GetEventPlayerChatStringMatched="Matched chat string"

GetSaveBasicFilename=Saved-Game Filename
GetSaveBasicFilename="Saved-game filename"
GetSaveBasicFilenameHint=When responding to a 'Game - Game Save' event, this refers to the name of the file being saved.

GetAbilityName=Ability Name
GetAbilityName="Name of ",~Ability

GetAbilityEffectBJ=Ability Effect Art Path
GetAbilityEffectBJ="Art path of ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint=This returns the model file path of an ability's effect art.

GetAbilitySoundBJ=Ability Effect Sound Name
GetAbilitySoundBJ="Name of ",~Ability," ",~SoundType

GetStoredStringBJ=Load String Value
GetStoredStringBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredStringBJHint=If the label is not found, this function returns an empty string.

GetHeroProperName=Hero Proper Name
GetHeroProperName="Proper name of ",~Hero
GetHeroProperNameHint=Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin).

GetItemName=Item Name
GetItemName="Name of ",~Item

MultiboardGetTitleText=Multiboard Title
MultiboardGetTitleText="Title of ",~Multiboard

GetPlayerName=Player Name
GetPlayerName="Name of ",~Player

GetTriggerName=Trigger Name
GetTriggerName="Name of the current trigger"
GetTriggerNameHint=Returns the name, as entered in the editor, of the trigger which contains this function.

GetUnitName=Unit Name
GetUnitName="Name of ",~Unit
GetUnitNameHint=This returns the internal name of a unit, not the proper name of units or Heroes.

GetAbilityEffectById=Buff Effect Art By Id
GetAbilityEffectById=~Buff," effect ",~EffectType," ",~Index
GetAbilityEffectByIdHint=[UMSWE]

GetAbilitySoundById=Ability Effect Sound By Id
GetAbilitySoundById=~Ability," sound ",~SoundType
GetAbilitySoundByIdHint=[UMSWE]

LeaderboardGetLabelText=Title
LeaderboardGetLabelText="Title of ",~Leaderboard
LeaderboardGetLabelTextHint=[UMSWE]

                           =JASS Code
                           =~Script Code"
                           Hint=Enter JASS code that returns a String. Example: MyString() [UMSWE]

GetResearched=Researched Tech-Type
GetResearched="Researched tech-type"
GetResearchedHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched.

GetLastCreatedTerrainDeformation=Last Created Terrain Deformation
GetLastCreatedTerrainDeformation="Last created terrain deformation"
GetLastCreatedTerrainDeformationHint=This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions.

                            =JASS Code
                            =~Script Code"
                            Hint=Enter JASS code that returns terrain deformation. Example: MyTerrainDeformation() [UMSWE]

GetTerrainTypeBJ=Terrain Type
GetTerrainTypeBJ="Terrain type at ",~Location

LoadTimerHandleBJ=Load Timer Handle
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerBJ=Last Started Timer
GetLastCreatedTimerBJ="Last started timer"
GetLastCreatedTimerBJHint=This is the last timer started via a 'Countdown Timer - Start Timer' trigger action.

GetExpiredTimer=Expiring Timer
GetExpiredTimer="Expiring timer"
GetExpiredTimerHint=When responding to a 'Time - Timer Expires' event, this refers to the timer that is expiring.

CreateTimer=Create Timer
CreateTimer="Create Timer"
CreateTimerHint=Use this to initialize timer array items [UMSWE]

CreateTimerBJ=Create Timer
CreateTimerBJ="Create a periodic ",~Choose," timer lasting ",~time
CreateTimerBJHint=[UMSWE]

                             =JASS Code
                             =~Script Code"
                             Hint=Enter JASS code that returns a Timer. Example: MyTimer() [UMSWE]

LoadTimerDialogHandleBJ=Load Timerdialog Handle
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerDialogBJ=Last Created Timer Window
GetLastCreatedTimerDialogBJ="Last created timer window"
GetLastCreatedTimerDialogBJHint=This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action.

                              =JASS Code
                              =~Script Code"
                              Hint=Enter JASS code that returns a Timer Window value. Example: MyTimerDialog() [UMSWE]

LoadTriggerHandleBJ=Load Trigger Handle
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint=If the label is not found, this function returns NULL.

GetTriggeringTrigger=This Trigger
GetTriggeringTrigger="This trigger"

CreateTrigger=Create Trigger
CreateTrigger="Create Trigger"
CreateTriggerHint=Use this to initialize trigger arrays [UMSWE]

                               =JASS Code
                               =~Script Code"
                               Hint=Enter JASS code that returns a Trigger. Example: MyTrigger() [UMSWE]

LoadUbersplatHandleBJ=Load Ubersplat Handle
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUbersplat=Last Created Ubersplat
GetLastCreatedUbersplat="Last created ubersplat"

 =JASS Code
 =~Script Code"
 Hint=Enter JASS code that returns an ubersplat. Example: MyUbersplat() [UMSWE]

LoadUnitHandleBJ=Load Unit Handle
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUnit=Last Created Unit
GetLastCreatedUnit="Last created unit"
GetLastCreatedUnitHint=This is the last unit created via a 'Unit - Create' trigger action.

GetLastRestoredUnitBJ=Last Restored Unit
GetLastRestoredUnitBJ="Last restored unit"
GetLastRestoredUnitBJHint=This is the last unit restored via a 'Game Cache - Restore Unit' trigger action.

GetLastReplacedUnitBJ=Last Replaced Unit
GetLastReplacedUnitBJ="Last replaced unit"
GetLastReplacedUnitBJHint=This is the last unit created via a 'Unit - Replace' trigger action.

GetLastHauntedGoldMine=Last Haunted Gold Mine
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMineHint=This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action.

GetEnumUnit=Picked Unit
GetEnumUnit="Picked unit"
GetEnumUnitHint=When using the 'Pick Every Unit...' action, this refers to each unit as it is picked.

GetFilterUnit=Matching Unit
GetFilterUnit="Matching unit"
GetFilterUnitHint=Use this to refer to the unit being considered for 'Units Matching Condition' functions.

GroupPickRandomUnit=Random Unit From Unit Group
GroupPickRandomUnit="Random unit from ",~Unit Group

GetAttackedUnitBJ=Attacked Unit
GetAttackedUnitBJ="Attacked unit"
GetAttackedUnitBJHint=When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked.

GetAttacker=Attacking Unit
GetAttacker="Attacking unit"
GetAttackerHint=When responding to an 'Is Attacked' unit event, this refers to the attacking unit.

GetBuyingUnit=Buying Unit
GetBuyingUnit="Buying unit"
GetBuyingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying.

GetCancelledStructure=Cancelled Structure
GetCancelledStructure="Cancelled structure"
GetCancelledStructureHint=When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled.

GetSpellAbilityUnit=Casting Unit
GetSpellAbilityUnit="Casting unit"
GetSpellAbilityUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability.

GetConstructingStructure=Constructing Structure
GetConstructingStructure="Constructing structure"
GetConstructingStructureHint=When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun.

GetConstructedStructure=Constructed Structure
GetConstructedStructure="Constructed structure"
GetConstructedStructureHint=When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished.

GetEventDamageSource=Damage Source
GetEventDamageSource="Damage source"
GetEventDamageSourceHint=When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt.

GetDecayingUnit=Decaying Unit
GetDecayingUnit="Decaying unit"
GetDecayingUnitHint=When responding to a 'Decays' unit event, this refers to the unit that is decaying.

GetDyingUnit=Dying Unit
GetDyingUnit="Dying unit"
GetDyingUnitHint=When responding to a 'Dies' unit event, this refers to the unit that is dying.

GetEnteringUnit=Entering Unit
GetEnteringUnit="Entering unit"
GetEnteringUnitHint=When responding to a 'Unit Enters Region' unit event, this refers to the unit entering the region.

GetManipulatingUnit=Hero Manipulating Item
GetManipulatingUnit="Hero manipulating item"
GetManipulatingUnitHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item.

GetKillingUnitBJ=Killing Unit
GetKillingUnitBJ="Killing unit"
GetKillingUnitBJHint=When responding to a 'Dies' unit event, this refers to the killer of the dying unit.  In cases where a unit dies from a source other than a killing unit, this returns 'No unit'.

GetLearningUnit=Learning Hero
GetLearningUnit="Learning Hero"
GetLearningUnitHint=When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill.

GetLeavingUnit=Leaving Unit
GetLeavingUnit="Leaving unit"
GetLeavingUnitHint=When responding to a 'Unit Leaves Region' event, this refers to the unit leaving the region.

GetLevelingUnit=Leveling Hero
GetLevelingUnit="Leveling Hero"
GetLevelingUnitHint=When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level.

GetLoadedUnitBJ=Loading Unit
GetLoadedUnitBJ="Loading unit"
GetLoadedUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded.

GetOrderedUnit=Ordered Unit
GetOrderedUnit="Ordered unit"
GetOrderedUnitHint=When responding to an 'Is Issued An Order' unit event, this refers to the unit receiving the order.

GetChangingUnit=Ownership-Changed Unit
GetChangingUnit="Ownership-changed unit"
GetChangingUnitHint=When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed.

GetResearchingUnit=Researching Unit
GetResearchingUnit="Researching unit"
GetResearchingUnitHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the unit doing the research.

GetRevivableUnit=Revivable Hero
GetRevivableUnit="Revivable Hero"
GetRevivableUnitHint=When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival.

GetRevivingUnit=Reviving Hero
GetRevivingUnit="Reviving Hero"
GetRevivingUnitHint=When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived.

GetSellingUnit=Selling Unit
GetSellingUnit="Selling unit"
GetSellingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the selling.

GetSoldUnit=Sold Unit
GetSoldUnit="Sold unit"
GetSoldUnitHint=When responding to a 'Sells A Unit' unit event, this refers to the unit being sold.

GetSummonedUnit=Summoned Unit
GetSummonedUnit="Summoned unit"
GetSummonedUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit being summoned.

GetSummoningUnit=Summoning Unit
GetSummoningUnit="Summoning unit"
GetSummoningUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit spawning the summoned unit.

GetOrderTargetUnit=Target Unit Of Issued Order
GetOrderTargetUnit="Target unit of issued order"
GetOrderTargetUnitHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order.

GetSpellTargetUnit=Target Unit Of Ability Being Cast
GetSpellTargetUnit="Target unit of ability being cast"
GetSpellTargetUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast.

GetEventTargetUnit=Targeted Unit
GetEventTargetUnit="Targeted unit"
GetEventTargetUnitHint=When responding to an 'Acquires A Target' unit event, this refers to the target being acquired.

GetTrainedUnit=Trained Unit
GetTrainedUnit="Trained unit"
GetTrainedUnitHint=When responding to a 'Finishes Training A Unit' unit event, this refers to the unit that was trained.

GetTransportUnitBJ=Transporting Unit
GetTransportUnitBJ="Transporting unit"
GetTransportUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the transport that loaded the unit.

GetTriggerUnit=Triggering Unit
GetTriggerUnit="Triggering unit"

GetUnitRallyUnit=Rally-Point As Unit
GetUnitRallyUnit="Rally-Point of ",~Unit," as a unit"
GetUnitRallyUnitHint=If the unit does not have a rally-point set to a unit, this will return 'No unit'.

CreateUnit=Create Unit At Offset
CreateUnit="For ",~Player," create a unit of type ",~Type," at offset (",~X,", ",~Y,") facing ",~Direction," degrees"
CreateUnitHint=[UMSWE]

CreateUnitAtLoc=Create Unit At Location
CreateUnitAtLoc="For ",~Player," create a unit of type ",~Type," at location ",~Location," facing ",~Direction," degrees"
CreateUnitAtLocHint=[UMSWE]

GetDetectedUnit=Get Detected Unit
GetDetectedUnit="Get detected unit"
GetDetectedUnitHint=Event response for the unit detected event [UMSWE]

GetRescuer=Rescuing Unit
GetRescuer="Get rescuing unit"
GetRescuerHint=For unis is rescued event [UMSWE]

FirstOfGroup=First Unit of Group
FirstOfGroup="First unit of group ",~Group
FirstOfGroupHint=[UMSWE]

                                  =JASS Code
                                  =~Script Code"
                                  Hint=Enter JASS code that returns an unit (~=handle). Example: MyUnit() [UMSWE]

LoadGroupHandleBJ=Load Group Handle
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedGroup=Last Created Unit Group
GetLastCreatedGroup="Last created unit group"
GetLastCreatedGroupHint=This is the last set of units created via a 'Unit - Create' trigger action.

GetRandomSubGroup=Random N Units From Unit Group
GetRandomSubGroup="Random ",~Count," units from ",~Unit Group

GetUnitsInRectAll=Units In Region
GetUnitsInRectAll="Units in ",~Region

GetUnitsInRectOfPlayer=Units In Region Owned By Player
GetUnitsInRectOfPlayer="Units in ",~Region," owned by ",~Player

GetUnitsInRectMatching=Units In Region Matching Condition
GetUnitsInRectMatching="Units in ",~Region," matching ",~Condition
GetUnitsInRectMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsInRangeOfLocAll=Units In Range
GetUnitsInRangeOfLocAll="Units within ",~Radius," of ",~Point

GetUnitsInRangeOfLocMatching=Units In Range Matching Condition
GetUnitsInRangeOfLocMatching="Units within ",~Radius," of ",~Point," matching ",~Condition
GetUnitsInRangeOfLocMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfPlayerAll=Units Owned By Player
GetUnitsOfPlayerAll="Units owned by ",~Player

GetUnitsOfPlayerAndTypeId=Units Owned By Player Of Type
GetUnitsOfPlayerAndTypeId="Units owned by ",~Player," of type ",~Unit-Type

GetUnitsOfPlayerMatching=Units Owned By Player Matching Condition
GetUnitsOfPlayerMatching="Units owned by ",~Player," matching ",~Condition
GetUnitsOfPlayerMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfTypeIdAll=Units Of Type
GetUnitsOfTypeIdAll="Units of type ",~Unit-Type

GetUnitsSelectedAll=Units Selected
GetUnitsSelectedAll="Units currently selected by ",~Player
GetUnitsSelectedAllHint=This should not be used in trigger conditions.

CreateGroup=Create Unit Group
CreateGroup="Create Unit Group"
CreateGroupHint=Use this to initialize unit group arrays [UMSWE]

                                   =JASS Code
                                   =~Script Code"
                                   Hint=Enter JASS code that returns an Unit Group. Example: MyGroup() [UMSWE]

GetUnitTypeId=Unit-Type Of Unit
GetUnitTypeId="Unit-type of ",~Unit

ChooseRandomCreepBJ=Random Creep Unit-Type
ChooseRandomCreepBJ="Random level ",~Level," creep unit-type"
ChooseRandomCreepBJHint=Use -1 for any level.

ChooseRandomNPBuildingBJ=Random Neutral Building Unit-Type
ChooseRandomNPBuildingBJ="Random neutral building unit-type"

String2UnitIdBJ=Convert String To Unit-Type
String2UnitIdBJ="Unit-type(",~String,")"

GetTrainedUnitType=Trained Unit-Type
GetTrainedUnitType="Trained unit-type"
GetTrainedUnitTypeHint=When responding to 'Begins/Cancels/Finishes Training A Unit' unit events, this refers to the unit-type of the unit that is being trained.

                                    =JASS Code
                                    =~Script Code"
                                    Hint=Enter JASS code that returns an Unit Type (integer). Example: 'hpea' [UMSWE]

LoadFogModifierHandleBJ=Load Fogmodifier Handle
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedFogModifier=Last Created Visibility Modifier
GetLastCreatedFogModifier="Last created visibility modifier"
GetLastCreatedFogModifierHint=This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action.

GetLastCreatedWeatherEffect=Last Created Weather Effect
GetLastCreatedWeatherEffect="Last created weather effect"
GetLastCreatedWeatherEffectHint=This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action.

TriggerRegisterVariableEvent=Add Variable Event
TriggerRegisterVariableEvent="Add the following variable event to ",~Trigger,": ",~Variable," ",~Operator," ",~Value
TriggerRegisterVariableEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterTimerExpireEvent=Add Timer Expires Event
TriggerRegisterTimerExpireEvent="Add the following timer expires event to ",~Trigger,": ",~Timer," expires"
TriggerRegisterTimerExpireEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogEvent=Add Dialog Event
TriggerRegisterDialogEvent="Add the following dialog event to ",~Trigger,": A button in ",~Dialog," was clicked"
TriggerRegisterDialogEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogButtonEvent=Add Dialog Button Clicked Event
TriggerRegisterDialogButtonEvent="Add the following dialog event to ",~Trigger,": ",~Button," was clicked"
TriggerRegisterDialogButtonEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterGameEvent=Add Game Event
TriggerRegisterGameEvent="Add the following game event to ",~Trigger,": Game Event: ",~GameEventOption
TriggerRegisterGameEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterEnterRegion=Add Unit Enters Rect (Conditional) Event
TriggerRegisterEnterRegion="Add the following unit enters rect (conditional) event to ",~Trigger,": A unit enters ",~Rect," Matching: ",~Condition
TriggerRegisterEnterRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterLeaveRegion=Add Unit Leaves Rect (Conditional) Event
TriggerRegisterLeaveRegion="Add the following unit leaves rect (conditional) event to ",~Trigger,": A unit leaves ",~Rect," Matching: ",~Condition
TriggerRegisterLeaveRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerEvent=Add Player Event
TriggerRegisterPlayerEvent="Add the following player event to ",~Trigger,": ",~Player," ",~PlayerEventOption
TriggerRegisterPlayerEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEventSimple=Add Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="Add the following player-owned unit event to ",~Trigger,": A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEvent=Add Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="Add the following player-owned unit (conditional) event to ",~Trigger,": A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerStateEvent=Add Player Property Event
TriggerRegisterPlayerStateEvent="Add the following player property event to ",~Trigger,": ",~Player," ",~PlayerState," ",~Operator," ",~Integer
TriggerRegisterPlayerStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerChatEvent=Add Chat Message Event
TriggerRegisterPlayerChatEvent="Add the following chat message event to ",~Trigger,": ",~Player," sends a mesage containing ",~String," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDeathEvent=Add Destructible Doodad Dies Event
TriggerRegisterDeathEvent="Add the following destructible doodad event to ",~Trigger,": ",~Destructible Doodad," dies"
TriggerRegisterDeathEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitStateEvent=Add Unit State Event
TriggerRegisterUnitStateEvent="Add the following unit state event to ",~Trigger,": ",~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitEvent=Add Specific Unit Event
TriggerRegisterUnitEvent="Add the following specific unit event event to ",~Trigger,": ",~Unit," ",~UnitEvent
TriggerRegisterUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitInRangeSimple=Add Unit In Range Event
TriggerRegisterUnitInRangeSimple="Add the following unit in range event to ",~Trigger,": A unit comes within ",~Real," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

LoadTriggerConditionHandleBJ=Load Triggercondition Handle
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint=If the label is not found, this function returns NULL.

                                 =JASS Code
                                 =~Script Code"
                                 Hint=Enter JASS code that returns a Trigger Condition. Example: MyTriggerCondition() [UMSWE]

TriggerAddCondition=Add Condtion
TriggerAddCondition="Take ",~Trigger," and add the condition ",~Condition
TriggerAddConditionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Condition'. [UMSWE]

LoadTriggerActionHandleBJ=Load Triggeraction Handle
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint=If the label is not found, this function returns NULL.

                                =JASS Code
                                =~Script Code"
                                Hint=Enter JASS code that returns a Trigger Action. Example: MyTriggerAction() [UMSWE]

TriggerAddAction=Add Action
TriggerAddAction="Take ",~Trigger," and add the action ",~Action
TriggerAddActionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Action'. [UMSWE]

LoadBooleanExprHandleBJ=Load Boolexpr Handle
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint=If the label is not found, this function returns NULL.

GetEventPlayerState=Get Triggering Player State
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerStateHint=To see, which playerstate event fired the trigger [UMSWE]

GetEventUnitState=Get Triggering Unit State
GetEventUnitState="Get triggering unit state"
GetEventUnitStateHint=To see, which unitstate event fired the trigger [UMSWE]

GetGameDifficulty=Difficulty Level
GetGameDifficulty="Difficulty level"

GetAIDifficulty=Melee AI Of Player
GetAIDifficulty="Melee AI of ",~Player

GetPlayerController=Player Controller
GetPlayerController=~Player," controller"

GetPlayerSlotState=Player Slot Status
GetPlayerSlotState=~Player," slot status"

LoadFogStateHandleBJ=Load Fogstate Handle
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint=If the label is not found, this function returns NULL.

GetLearnedSkillBJ=Learned Hero Skill
GetLearnedSkillBJ="Learned Hero Skill"

                                      =JASS Code
                                      =~Script Code"
                                      Hint=Enter JASS code that returns a Hero Skill (integer). Example: 'AHbz' [UMSWE]

exitwhen=exitwhen
exitwhen="exitwhen ",~Condition
exitwhenHint=Used between loop and endloop, specifies when to exit the loop (only works with the Custom Script action) [UMSWE]

GetLastPlayedMusic=Last Played Music
GetLastPlayedMusic="Last played music"
GetLastPlayedMusicHint=This is the last music played via a 'Sound - Play Music' trigger action.

                                     =JASS Code
                                     =~Script Code"
                                     Hint=Enter JASS code that returns a Music file path (string). Use ; to separate paths if you are reffering to a music list. Example: MyMusic() [UMSWE]

GetTriggerEventId=Event ID
GetTriggerEventId="Last Fired Event"
GetTriggerEventIdHint=Returns the last fired event [UMSWE]

           =JASS Code
           =~Script Code"
           Hint=Enter JASS code that returns an eventid value. Example: MyEventid() [UMSWE]

                  =JASS Code
                  =~Script Code"
                  Hint=Enter JASS code that returns a Multiboard Item. Example: MyMultiboardItem() [UMSWE]

MultiboardGetItem=Create Multiboard Item
MultiboardGetItem="Create a new multiboard item for multiboard ",~board," in row ",~Row," and column ",~Column
MultiboardGetItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

CreateRegion=Create Region
CreateRegion="Create a empty region"
CreateRegionHint=Used to create empty regions to which you can add cells [UMSWE]

GetTriggeringRegion=Get Triggering Region
GetTriggeringRegion="Get triggering region"
GetTriggeringRegionHint=Event response for unit enters/leaves region events [UMSWE]

                         =JASS Code
                         =~Script Code"
                         Hint=Enter JASS code that returns a region value. Example: MyRegion() [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=You can register mouseover and mouseclick events on the object but can't remove it anymore. [UMSWE]

GetTriggeringTrackable=Triggering Trackable
GetTriggeringTrackable="Triggering trackable"
GetTriggeringTrackableHint=[UMSWE]

    =JASS Code
    =~Script Code"
    Hint=Enter JASS code that returns a trackable object. Example: MyTrackable() [UMSWE]

GetEventGameState=Get Triggering Game State
GetEventGameState="Triggering Game State"
GetEventGameStateHint=To see, which gamestate event fired the trigger [UMSWE]


[AIFunctionStrings]
TownThreatened="Town Is Under Attack"
TownThreatened="Town is under attack"
TownThreatenedHint=""
TownHasMine="Town Has Mine"
TownHasMine="Town #",~Town," has an active gold mine"
TownHasHall="Town Has Hall"
TownHasHall="Town #",~Town," has a town hall building"
CaptainIsHome="Attack Captain Is At Home"
CaptainIsHome="Attack captain is at home"
CaptainIsFull="Attack Group Is Complete"
CaptainIsFull="Attack group is complete"
CaptainIsEmpty="Attack Group Is Empty"
CaptainIsEmpty="Attack group is empty"
CaptainRetreating="Attack Captain Is Retreating"
CaptainRetreating="Attack captain is retreating"
CaptainAtGoal="Attack Captain Is At Goal"
CaptainAtGoal="Attack captain is at goal"
CaptainInCombat="Captain Is In Combat"
CaptainInCombat=~Captain Type," captain is in combat"
CreepsOnMap="Creeps Exist Anywhere"
CreepsOnMap="Creeps exist anywhere on the map"
ExpansionNeeded="Expansion Spot Needed"
ExpansionNeeded="Expansion spot needed"
ExpansionNeededHint="Returns true if the AI needs to build an expansion but there are currently no open spots."
GetUnitCount="Total Units of Type"
GetUnitCount="Total number of ",~Unit Type," units"
GetUnitCountHint="This count includes units currently being trained or constructed."
GetUnitCountDone="Total Units of Type - Completed Only"
GetUnitCountDone="Total number of ",~Unit Type," units completed"
GetUnitCountDoneHint="This count does NOT include units currently being trained or constructed."
GetTownUnitCount="Total Units of Type - By Town"
GetTownUnitCount="Total number of ",~Unit Type," units in town #",~Town," (completed only: ",~Option,")"
GetTownUnitCountHint=""
GetMinesOwned="Number of Mines Owned"
GetMinesOwned="Number of mines owned"
GetMinesOwnedHint="The total number of mines currently in use by the AI player."
GetGoldOwned="Total Unmined Gold Owned"
GetGoldOwned="Total unmined gold owned"
GetGoldOwnedHint="The total amount of gold remaining in all mines currently in use."
TownWithMine="Town With Mine"
TownWithMine="Town with a gold mine"
TownWithMineHint="Returns the ID of the first town with an active gold mine"
GetGold="Current Gold Amount"
GetGold="Current gold amount"
GetGoldHint="The amount of gold currently owned by the AI player"
GetWood="Current Lumber Amount"
GetWood="Current lumber amount"
GetWoodHint="The amount of lumber currently owned by the AI player"
GetUnitGoldCost="Gold Cost of Unit"
GetUnitGoldCost="Gold cost of ",~Unit Type
GetUnitWoodCost="Lumber Cost of Unit"
GetUnitWoodCost="Lumber cost of ",~Unit Type
GetUnitBuildTime="Build Time of Unit"
GetUnitBuildTime="Build time of ",~Unit Type
GetUnitBuildTimeHint="Build time is in seconds."
GetUpgradeLevel="Current Upgrade Level"
GetUpgradeLevel="Upgrade level of ",~Upgrade Type
GetUpgradeGoldCost="Gold Cost of Upgrade"
GetUpgradeGoldCost="Gold cost of the next ",~Upgrade Type," upgrade"
GetUpgradeWoodCost="Lumber Cost of Upgrade"
GetUpgradeWoodCost="Lumber cost of the next ",~Upgrade Type," upgrade"
GetNextExpansion="Next Expansion Town"
GetNextExpansion="Next expansion town"
GetNextExpansionHint="Returns the town ID for the next expansion location"
FoodUsed="Food Used"
FoodUsed="Food used"
FoodUsedHint="The total amount of food currently being used by the AI player"
TotalFoodProduced="Food Produced"
TotalFoodProduced="Food produced"
TotalFoodProducedHint="The total amount of food currently produced by the AI player"
GetFoodMade="Food Produced By Unit"
GetFoodMade="Food produced by ",~Unit Type," units"
CommandsWaiting="Commands Waiting"
CommandsWaiting="Number of commands waiting"
CommandsWaitingHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommand="Last Command"
CheckLastCommand="Last command sent, ",~Option," the command"
CheckLastCommandHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommandData="Last Command Data"
CheckLastCommandData="Last command data sent, ",~Option," the command"
CheckLastCommandDataHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CaptainGroupSize="Attack Group Size"
CaptainGroupSize="Attack group size"
CaptainGroupSizeHint="The current number of units in the attack group."
CaptainReadinessHP="Attack Group Health Level"
CaptainReadinessHP="Attack group health level"
CaptainReadinessHPHint="The health level is an estimation of the average attack group health, with 100 being full."
CaptainReadinessMa="Attack Group Mana Level"
CaptainReadinessMa="Attack group mana level"
CaptainReadinessMaHint="The mana level is an estimation of the average attack group mana, with 100 being full."
CurrentAttackWave="Current Attack Wave"
CurrentAttackWave="Current attack wave"
CurrentAttackWaveHint="Attack waves are defined in the attack wave list in the Attacking tab."
MeleeDifficulty="Melee Difficulty Level"
MeleeDifficulty="Melee difficulty level"
